/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from 'ng2-bootstrap/progressbar/progressbar.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from 'ng2-bootstrap/progressbar/progressbar.config';
import * as import10 from './progress.directive.ngfactory';
import * as import11 from 'ng2-bootstrap/progressbar/bar.component';
import * as import12 from './bar.component.ngfactory';
import * as import13 from 'ng2-bootstrap/progressbar/progress.directive';
export class Wrapper_ProgressbarComponent {
  /*private*/ _eventHandler:Function;
  context:import0.ProgressbarComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import0.ProgressbarComponent(p0);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  check_animate(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.animate = currValue;
      this._expr_0 = currValue;
    }
  }
  check_max(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.max = currValue;
      this._expr_1 = currValue;
    }
  }
  check_type(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.type = currValue;
      this._expr_2 = currValue;
    }
  }
  check_value(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.value = currValue;
      this._expr_3 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_ProgressbarComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_ProgressbarComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.ProgressbarComponent>;
  _ProgressbarComponent_0_3:Wrapper_ProgressbarComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ProgressbarComponent_Host0,renderType_ProgressbarComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'progressbar',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_ProgressbarComponent0(this.viewUtils,this,0,this._el_0);
    this._ProgressbarComponent_0_3 = new Wrapper_ProgressbarComponent(this.injectorGet(import9.ProgressbarConfig,this.parentIndex));
    this.compView_0.create(this._ProgressbarComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._ProgressbarComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.ProgressbarComponent) && (0 === requestNodeIndex))) { return this._ProgressbarComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._ProgressbarComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
  }
}
export const ProgressbarComponentNgFactory:import8.ComponentFactory<import0.ProgressbarComponent> = new import8.ComponentFactory<import0.ProgressbarComponent>('progressbar',View_ProgressbarComponent_Host0,import0.ProgressbarComponent);
const styles_ProgressbarComponent:any[] = ([] as any[]);
var renderType_ProgressbarComponent:import4.RenderComponentType = import3.createRenderComponentType('',1,import5.ViewEncapsulation.None,styles_ProgressbarComponent,{});
export class View_ProgressbarComponent0 extends import2.AppView<import0.ProgressbarComponent> {
  _text_0:any;
  _el_1:any;
  _ProgressDirective_1_3:import10.Wrapper_ProgressDirective;
  _text_2:any;
  _el_3:any;
  compView_3:import2.AppView<import11.BarComponent>;
  _BarComponent_3_3:import12.Wrapper_BarComponent;
  _text_4:any;
  _text_5:any;
  _text_6:any;
  _text_7:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ProgressbarComponent0,renderType_ProgressbarComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'progress',''),(null as any));
    this._ProgressDirective_1_3 = new import10.Wrapper_ProgressDirective();
    this._text_2 = this.renderer.createText(this._el_1,'\n      ',(null as any));
    this._el_3 = import3.createRenderElement(this.renderer,this._el_1,'bar',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_3 = new import12.View_BarComponent0(this.viewUtils,this,3,this._el_3);
    this._BarComponent_3_3 = new import12.Wrapper_BarComponent(this._ProgressDirective_1_3.context);
    this._text_4 = this.renderer.createText((null as any),'\n          ',(null as any));
    this._text_5 = this.renderer.createText((null as any),'\n      ',(null as any));
    this.compView_3.create(this._BarComponent_3_3.context);
    this._text_6 = this.renderer.createText(this._el_1,'\n    ',(null as any));
    this._text_7 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._text_5,
      this._text_6,
      this._text_7
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import11.BarComponent) && ((3 <= requestNodeIndex) && (requestNodeIndex <= 5)))) { return this._BarComponent_3_3.context; }
    if (((token === import13.ProgressDirective) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 6)))) { return this._ProgressDirective_1_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1_0_0:any = this.context.animate;
    this._ProgressDirective_1_3.check_animate(currVal_1_0_0,throwOnChange,false);
    const currVal_1_0_1:any = this.context.max;
    this._ProgressDirective_1_3.check_max(currVal_1_0_1,throwOnChange,false);
    this._ProgressDirective_1_3.ngDoCheck(this,this._el_1,throwOnChange);
    const currVal_3_0_0:any = this.context.type;
    this._BarComponent_3_3.check_type(currVal_3_0_0,throwOnChange,false);
    const currVal_3_0_1:any = this.context.value;
    this._BarComponent_3_3.check_value(currVal_3_0_1,throwOnChange,false);
    this._BarComponent_3_3.ngDoCheck(this,this._el_3,throwOnChange);
    this._ProgressDirective_1_3.checkHost(this,this,this._el_1,throwOnChange);
    this.compView_3.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_3.destroy();
    this._BarComponent_3_3.ngOnDestroy();
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 3) && (ngContentIndex == 0))) {
      cb(this._text_4,ctx);
      this.visitProjectedNodes(0,cb,ctx);
      cb(this._text_5,ctx);
    }
  }
}