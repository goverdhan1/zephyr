/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../../app/view/components/mapTestReq/map_test_req.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '../../../../../app/actions/mapTestReq.action';
import * as import7 from '../../../../../app/actions/testcase.action';
import * as import8 from '@angular/core/src/linker/view_type';
import * as import9 from '@angular/core/src/change_detection/constants';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from '@angular/http/src/http';
import * as import12 from '../../../../../app/view/components/grid/grid.component';
import * as import13 from '../../../../../app/actions/grid.action';
import * as import14 from '../../../../../app/actions/global.action';
import * as import15 from '../../../../../app/utils/scripts/utils';
import * as import16 from '../grid/grid.component.ngfactory';
import * as import17 from '@angular/core/src/linker/view_container';
import * as import18 from '../../../../../app/services/pouch.db.service';
import * as import19 from '@angular/core/src/linker/element_ref';
import * as import20 from '@angular/core/src/zone/ng_zone';
import * as import21 from '@angular/router/src/router';
import * as import22 from '../../../../../app/services/toastr.service';
import * as import23 from '../../../../../app/view/components/testcase/testcase.component';
import * as import24 from '../../../../../app/actions/notification.action';
import * as import25 from '../testcase/testcase.component.ngfactory';
import * as import26 from '../../../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import27 from '../../../../../app/view/components/requirements/requirement_details.component';
import * as import28 from '../../../../../app/actions/requirements.action';
import * as import29 from '../requirements/requirement_details.component.ngfactory';
import * as import30 from '@angular/core/src/linker/template_ref';
import * as import31 from '@angular/common/src/directives/ng_if';
import * as import32 from '@angular/core/src/linker/query_list';
import * as import33 from '../../../../node_modules/@angular/common/src/directives/ng_class.ngfactory';
import * as import34 from '../../../../../app/view/components/common/modal/modal.component';
import * as import35 from '../common/modal/modal.component.ngfactory';
import * as import36 from '../../../../../app/view/components/common/tree/tree.component';
import * as import37 from '../common/tree/tree.component.ngfactory';
import * as import38 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import39 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import40 from '@angular/common/src/directives/ng_class';
export class Wrapper_MapTestReqComponent {
  /*private*/ _eventHandler:Function;
  context:import0.MapTestReqComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  subscription0:any;
  constructor(p0:any,p1:any,p2:any) {
    this._changed = false;
    this.context = new import0.MapTestReqComponent(p0,p1,p2);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
    this._expr_6 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    this.context.ngOnDestroy();
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_buttonId(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.buttonId = currValue;
      this._expr_0 = currValue;
    }
  }
  check_editable(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.editable = currValue;
      this._expr_1 = currValue;
    }
  }
  check_buttonText(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.buttonText = currValue;
      this._expr_2 = currValue;
    }
  }
  check_title(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.title = currValue;
      this._expr_3 = currValue;
    }
  }
  check_type(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.type = currValue;
      this._expr_4 = currValue;
    }
  }
  check_gridId(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_5,currValue))) {
      this._changed = true;
      this.context.gridId = currValue;
      this._expr_5 = currValue;
    }
  }
  check_isBulk(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_6,currValue))) {
      this._changed = true;
      this.context.isBulk = currValue;
      this._expr_6 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.onSaveMap.subscribe(_eventHandler.bind(view,'onSaveMap'))); }
  }
}
var renderType_MapTestReqComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_MapTestReqComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.MapTestReqComponent>;
  _MapTestReqAction_0_3:import6.MapTestReqAction;
  _TestcaseAction_0_4:import7.TestcaseAction;
  _MapTestReqComponent_0_5:Wrapper_MapTestReqComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MapTestReqComponent_Host0,renderType_MapTestReqComponent_Host,import8.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'map-req-test',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_MapTestReqComponent0(this.viewUtils,this,0,this._el_0);
    this._MapTestReqAction_0_3 = new import6.MapTestReqAction(this.injectorGet(import11.Http,this.parentIndex));
    this._TestcaseAction_0_4 = new import7.TestcaseAction(this.injectorGet(import11.Http,this.parentIndex));
    this._MapTestReqComponent_0_5 = new Wrapper_MapTestReqComponent(this._MapTestReqAction_0_3,this._TestcaseAction_0_4,this.compView_0.ref);
    this.compView_0.create(this._MapTestReqComponent_0_5.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import10.ComponentRef_<any>(0,this,this._el_0,this._MapTestReqComponent_0_5.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import6.MapTestReqAction) && (0 === requestNodeIndex))) { return this._MapTestReqAction_0_3; }
    if (((token === import7.TestcaseAction) && (0 === requestNodeIndex))) { return this._TestcaseAction_0_4; }
    if (((token === import0.MapTestReqComponent) && (0 === requestNodeIndex))) { return this._MapTestReqComponent_0_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (this._MapTestReqComponent_0_5.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { this._MapTestReqComponent_0_5.context.ngAfterViewChecked(); }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._MapTestReqComponent_0_5.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const MapTestReqComponentNgFactory:import10.ComponentFactory<import0.MapTestReqComponent> = new import10.ComponentFactory<import0.MapTestReqComponent>('map-req-test',View_MapTestReqComponent_Host0,import0.MapTestReqComponent);
const styles_MapTestReqComponent:any[] = ([] as any[]);
class View_MapTestReqComponent1 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  compView_2:import2.AppView<import12.GridComponent>;
  _GridAction_2_3:import13.GridAction;
  _GlobalAction_2_4:import14.GlobalAction;
  _UtililtyFunctions_2_5:import15.UtililtyFunctions;
  _GridComponent_2_6:import16.Wrapper_GridComponent;
  _text_3:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import17.ViewContainer) {
    super(View_MapTestReqComponent1,renderType_MapTestReqComponent,import8.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',new import3.InlineArray4(4,'class','col-xs-9 map-grid','id','map-grid'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n                ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'grid',new import3.InlineArray2(2,'class','tcr-grid-table'),(null as any));
    this.compView_2 = new import16.View_GridComponent0(this.viewUtils,this,2,this._el_2);
    this._GridAction_2_3 = new import13.GridAction(this.parentView.parentView.injectorGet(import11.Http,this.parentView.parentIndex),this.parentView.parentView.injectorGet(import18.PouchDBPrefsServices,this.parentView.parentIndex));
    this._GlobalAction_2_4 = new import14.GlobalAction(this.parentView.parentView.injectorGet(import11.Http,this.parentView.parentIndex));
    this._UtililtyFunctions_2_5 = new import15.UtililtyFunctions();
    this._GridComponent_2_6 = new import16.Wrapper_GridComponent(this._GridAction_2_3,this._GlobalAction_2_4,new import19.ElementRef(this._el_2),this._UtililtyFunctions_2_5,this.compView_2.ref,this.parentView.parentView.injectorGet(import20.NgZone,this.parentView.parentIndex),this.parentView.parentView.injectorGet(import21.Router,this.parentView.parentIndex),this.parentView.parentView.injectorGet(import18.PouchDBPrefsServices,this.parentView.parentIndex),this.parentView.parentView.injectorGet(import22.ToastrService,this.parentView.parentIndex));
    this.compView_2.create(this._GridComponent_2_6.context);
    this._text_3 = this.renderer.createText(this._el_0,'\n            ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_2,new import3.InlineArray16(14,'onGridRowClick',(null as any),'onGridPrevClick',(null as any),'onGridNextClick',(null as any),'onGridPageSizeChange',(null as any),'onGridPaginateByIndex',(null as any),'onGridRowSelection',(null as any),'onClearSelectedTctIds',(null as any)),this.eventHandler(this.handleEvent_2));
    this._GridComponent_2_6.subscribe(this,this.eventHandler(this.handleEvent_2),false,true,true,false,false,true,true,false,false,true,true,false,false,false,false,false,false);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import13.GridAction) && (2 === requestNodeIndex))) { return this._GridAction_2_3; }
    if (((token === import14.GlobalAction) && (2 === requestNodeIndex))) { return this._GlobalAction_2_4; }
    if (((token === import15.UtililtyFunctions) && (2 === requestNodeIndex))) { return this._UtililtyFunctions_2_5; }
    if (((token === import12.GridComponent) && (2 === requestNodeIndex))) { return this._GridComponent_2_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = this.parentView.context.rows;
    this._GridComponent_2_6.check_rows(currVal_2_0_0,throwOnChange,false);
    const currVal_2_0_1:any = this.parentView.context._mapGridType;
    this._GridComponent_2_6.check_gridType(currVal_2_0_1,throwOnChange,false);
    const currVal_2_0_2:any = this.parentView.context.gridSelectIds;
    this._GridComponent_2_6.check_rowIds(currVal_2_0_2,throwOnChange,false);
    const currVal_2_0_3:any = this.parentView.context.secondaryIds;
    this._GridComponent_2_6.check_secondaryIds(currVal_2_0_3,throwOnChange,false);
    const currVal_2_0_4:any = this.parentView.context.paginationOptions;
    this._GridComponent_2_6.check_paginationOptions(currVal_2_0_4,throwOnChange,false);
    this._GridComponent_2_6.ngDoCheck(this,this._el_2,throwOnChange);
    this.compView_2.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._GridComponent_2_6.context.ngAfterViewInit(); } }
  }
  dirtyParentQueriesInternal():void {
    (<View_MapTestReqComponent0>this.parentView)._viewQuery_GridComponent_0.setDirty();
  }
  destroyInternal():void {
    this.compView_2.destroy();
    this._GridComponent_2_6.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onGridRowClick')) {
      const pd_sub_0:any = ((<any>this.parentView.context.onGridClick($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'onGridPrevClick')) {
      const pd_sub_1:any = ((<any>this.parentView.context.onPrevClick($event)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'onGridNextClick')) {
      const pd_sub_2:any = ((<any>this.parentView.context.onNextClick($event)) !== false);
      result = (pd_sub_2 && result);
    }
    if ((eventName == 'onGridPageSizeChange')) {
      const pd_sub_3:any = ((<any>this.parentView.context.onPageSizeChange($event)) !== false);
      result = (pd_sub_3 && result);
    }
    if ((eventName == 'onGridPaginateByIndex')) {
      const pd_sub_4:any = ((<any>this.parentView.context.onIndexClick($event)) !== false);
      result = (pd_sub_4 && result);
    }
    if ((eventName == 'onGridRowSelection')) {
      const pd_sub_5:any = ((<any>this.parentView.context.onGridSelection($event)) !== false);
      result = (pd_sub_5 && result);
    }
    if ((eventName == 'onClearSelectedTctIds')) {
      const pd_sub_6:any = ((<any>this.parentView.context.clearSelectedNodes()) !== false);
      result = (pd_sub_6 && result);
    }
    return result;
  }
}
class View_MapTestReqComponent3 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  compView_2:import2.AppView<import23.TestcaseComponent>;
  _TestcaseAction_2_3:import7.TestcaseAction;
  _NotificationAction_2_4:import24.NotificationAction;
  _GlobalAction_2_5:import14.GlobalAction;
  _TestcaseComponent_2_6:import25.Wrapper_TestcaseComponent;
  _text_3:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import17.ViewContainer) {
    super(View_MapTestReqComponent3,renderType_MapTestReqComponent,import8.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n                ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'zee-testcase',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_2 = new import25.View_TestcaseComponent0(this.viewUtils,this,2,this._el_2);
    this._TestcaseAction_2_3 = new import7.TestcaseAction(this.parentView.parentView.parentView.injectorGet(import11.Http,this.parentView.parentView.parentIndex));
    this._NotificationAction_2_4 = new import24.NotificationAction(this.parentView.parentView.parentView.injectorGet(import11.Http,this.parentView.parentView.parentIndex));
    this._GlobalAction_2_5 = new import14.GlobalAction(this.parentView.parentView.parentView.injectorGet(import11.Http,this.parentView.parentView.parentIndex));
    this._TestcaseComponent_2_6 = new import25.Wrapper_TestcaseComponent(this._TestcaseAction_2_3,this._NotificationAction_2_4,this._GlobalAction_2_5);
    this.compView_2.create(this._TestcaseComponent_2_6.context);
    this._text_3 = this.renderer.createText(this._el_0,'\n            ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_2,new import3.InlineArray2(2,'onRecordChange',(null as any)),this.eventHandler(this.handleEvent_2));
    this._TestcaseComponent_2_6.subscribe(this,this.eventHandler(this.handleEvent_2),false,false,true,false,false);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import7.TestcaseAction) && (2 === requestNodeIndex))) { return this._TestcaseAction_2_3; }
    if (((token === import24.NotificationAction) && (2 === requestNodeIndex))) { return this._NotificationAction_2_4; }
    if (((token === import14.GlobalAction) && (2 === requestNodeIndex))) { return this._GlobalAction_2_5; }
    if (((token === import23.TestcaseComponent) && (2 === requestNodeIndex))) { return this._TestcaseComponent_2_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = this.parentView.parentView.context.mapId;
    this._TestcaseComponent_2_6.check_testcaseId(currVal_2_0_0,throwOnChange,false);
    const currVal_2_0_1:any = this.parentView.parentView.context.tcTestcaseId;
    this._TestcaseComponent_2_6.check_tcTestcaseId(currVal_2_0_1,throwOnChange,false);
    const currVal_2_0_2:any = false;
    this._TestcaseComponent_2_6.check_editable(currVal_2_0_2,throwOnChange,false);
    const currVal_2_0_3:any = false;
    this._TestcaseComponent_2_6.check_allowRequirementMapping(currVal_2_0_3,throwOnChange,false);
    const currVal_2_0_4:any = this.parentView.parentView.context.treeType;
    this._TestcaseComponent_2_6.check_treeType(currVal_2_0_4,throwOnChange,false);
    const currVal_2_0_5:any = this.parentView.parentView.context.releaseId;
    this._TestcaseComponent_2_6.check_releaseId(currVal_2_0_5,throwOnChange,false);
    const currVal_2_0_6:any = this.parentView.parentView.context.currentRecord;
    this._TestcaseComponent_2_6.check_currentRecord(currVal_2_0_6,throwOnChange,false);
    const currVal_2_0_7:any = this.parentView.parentView.context.totalCount;
    this._TestcaseComponent_2_6.check_totalRecords(currVal_2_0_7,throwOnChange,false);
    const currVal_2_0_8:any = true;
    this._TestcaseComponent_2_6.check_hideDocker(currVal_2_0_8,throwOnChange,false);
    this._TestcaseComponent_2_6.ngDoCheck(this,this._el_2,throwOnChange);
    this.compView_2.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._TestcaseComponent_2_6.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_2.destroy();
    this._TestcaseComponent_2_6.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onRecordChange')) {
      const pd_sub_0:any = ((<any>this.parentView.parentView.context.recordChanged($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
class View_MapTestReqComponent2 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _vc_2:import17.ViewContainer;
  _TemplateRef_2_5:any;
  _NgIf_2_6:import26.Wrapper_NgIf;
  _text_3:any;
  _el_4:any;
  compView_4:import2.AppView<import27.RequirementDetailsComponent>;
  _RequirementsAction_4_3:import28.RequirementsAction;
  _GlobalAction_4_4:import14.GlobalAction;
  _RequirementDetailsComponent_4_5:import29.Wrapper_RequirementDetailsComponent;
  _text_5:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import17.ViewContainer) {
    super(View_MapTestReqComponent2,renderType_MapTestReqComponent,import8.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',new import3.InlineArray2(2,'class','map-details hide'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n            ',(null as any));
    this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_2 = new import17.ViewContainer(2,0,this,this._anchor_2);
    this._TemplateRef_2_5 = new import30.TemplateRef_(this,2,this._anchor_2);
    this._NgIf_2_6 = new import26.Wrapper_NgIf(this._vc_2.vcRef,this._TemplateRef_2_5);
    this._text_3 = this.renderer.createText(this._el_0,'\n            ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_0,'zee-requirement-details',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_4 = new import29.View_RequirementDetailsComponent0(this.viewUtils,this,4,this._el_4);
    this._RequirementsAction_4_3 = new import28.RequirementsAction(this.parentView.parentView.injectorGet(import11.Http,this.parentView.parentIndex));
    this._GlobalAction_4_4 = new import14.GlobalAction(this.parentView.parentView.injectorGet(import11.Http,this.parentView.parentIndex));
    this._RequirementDetailsComponent_4_5 = new import29.Wrapper_RequirementDetailsComponent(this._RequirementsAction_4_3,this._GlobalAction_4_4,this.parentView.parentView.injectorGet(import20.NgZone,this.parentView.parentIndex));
    this.compView_4.create(this._RequirementDetailsComponent_4_5.context);
    this._text_5 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_4,new import3.InlineArray2(2,'onRecordChange',(null as any)),this.eventHandler(this.handleEvent_4));
    this._RequirementDetailsComponent_4_5.subscribe(this,this.eventHandler(this.handleEvent_4),true,false);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._anchor_2,
      this._text_3,
      this._el_4,
      this._text_5
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import30.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import31.NgIf) && (2 === requestNodeIndex))) { return this._NgIf_2_6.context; }
    if (((token === import28.RequirementsAction) && (4 === requestNodeIndex))) { return this._RequirementsAction_4_3; }
    if (((token === import14.GlobalAction) && (4 === requestNodeIndex))) { return this._GlobalAction_4_4; }
    if (((token === import27.RequirementDetailsComponent) && (4 === requestNodeIndex))) { return this._RequirementDetailsComponent_4_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = this.parentView.context.mapId;
    this._NgIf_2_6.check_ngIf(currVal_2_0_0,throwOnChange,false);
    this._NgIf_2_6.ngDoCheck(this,this._anchor_2,throwOnChange);
    const currVal_4_0_0:any = this.parentView.context.releaseId;
    this._RequirementDetailsComponent_4_5.check_releaseId(currVal_4_0_0,throwOnChange,false);
    const currVal_4_0_1:any = this.parentView.context.selectedTreeNode;
    this._RequirementDetailsComponent_4_5.check_selectedTreeId(currVal_4_0_1,throwOnChange,false);
    const currVal_4_0_2:any = false;
    this._RequirementDetailsComponent_4_5.check_editable(currVal_4_0_2,throwOnChange,false);
    const currVal_4_0_3:any = false;
    this._RequirementDetailsComponent_4_5.check_allowMapping(currVal_4_0_3,throwOnChange,false);
    const currVal_4_0_4:any = this.parentView.context.currentRecord;
    this._RequirementDetailsComponent_4_5.check_currentRecord(currVal_4_0_4,throwOnChange,false);
    const currVal_4_0_5:any = this.parentView.context.totalCount;
    this._RequirementDetailsComponent_4_5.check_totalRecords(currVal_4_0_5,throwOnChange,false);
    const currVal_4_0_6:any = true;
    this._RequirementDetailsComponent_4_5.check_hideDocker(currVal_4_0_6,throwOnChange,false);
    this._RequirementDetailsComponent_4_5.ngDoCheck(this,this._el_4,throwOnChange);
    this._vc_2.detectChangesInNestedViews(throwOnChange);
    this.compView_4.internalDetectChanges(throwOnChange);
  }
  dirtyParentQueriesInternal():void {
    (<View_MapTestReqComponent0>this.parentView)._viewQuery_RequirementDetailsComponent_1.setDirty();
  }
  destroyInternal():void {
    this._vc_2.destroyNestedViews();
    this.compView_4.destroy();
    this._RequirementDetailsComponent_4_5.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 2)) { return new View_MapTestReqComponent3(this.viewUtils,this,2,this._anchor_2,this._vc_2); }
    return (null as any);
  }
  handleEvent_4(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onRecordChange')) {
      const pd_sub_0:any = ((<any>this.parentView.context.recordChanged($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
class View_MapTestReqComponent4 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _text_6:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import17.ViewContainer) {
    super(View_MapTestReqComponent4,renderType_MapTestReqComponent,import8.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',new import3.InlineArray2(2,'class','zui-checkbox2 pull-right'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n                    ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'input',new import3.InlineArray4(4,'id','override','type','checkbox'),(null as any));
    this._text_3 = this.renderer.createText(this._el_0,'\n                    ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_0,'label',new import3.InlineArray4(4,'class','control-label','for','override'),(null as any));
    this._text_5 = this.renderer.createText(this._el_4,'Over-write Existing Maps',(null as any));
    this._text_6 = this.renderer.createText(this._el_0,'\n                ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_2,new import3.InlineArray2(2,'change',(null as any)),this.eventHandler(this.handleEvent_2));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._text_6
    ]
    ),[disposable_0]);
    return (null as any);
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'change')) {
      const pd_sub_0:any = ((<any>this.parentView.context.cdr.markForCheck()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
var renderType_MapTestReqComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,styles_MapTestReqComponent,{});
export class View_MapTestReqComponent0 extends import2.AppView<import0.MapTestReqComponent> {
  _viewQuery_GridComponent_0:import32.QueryList<any>;
  _viewQuery_RequirementDetailsComponent_1:import32.QueryList<any>;
  _el_0:any;
  _NgClass_0_3:import33.Wrapper_NgClass;
  _text_1:any;
  _text_2:any;
  _el_3:any;
  compView_3:import2.AppView<import34.ModalComponent>;
  _ModalComponent_3_3:import35.Wrapper_ModalComponent;
  _text_4:any;
  _el_5:any;
  _text_6:any;
  _el_7:any;
  _text_8:any;
  _el_9:any;
  _text_10:any;
  _el_11:any;
  compView_11:import2.AppView<import36.TreeComponent>;
  _NgClass_11_3:import33.Wrapper_NgClass;
  _GlobalAction_11_4:import14.GlobalAction;
  _TreeComponent_11_5:import37.Wrapper_TreeComponent;
  _text_12:any;
  _text_13:any;
  _anchor_14:any;
  /*private*/ _vc_14:import17.ViewContainer;
  _TemplateRef_14_5:any;
  _NgIf_14_6:import26.Wrapper_NgIf;
  _text_15:any;
  _text_16:any;
  _anchor_17:any;
  /*private*/ _vc_17:import17.ViewContainer;
  _TemplateRef_17_5:any;
  _NgIf_17_6:import26.Wrapper_NgIf;
  _text_18:any;
  _text_19:any;
  _el_20:any;
  _text_21:any;
  _el_22:any;
  _text_23:any;
  _el_24:any;
  _text_25:any;
  _el_26:any;
  _text_27:any;
  _text_28:any;
  _el_29:any;
  _text_30:any;
  _text_31:any;
  _anchor_32:any;
  /*private*/ _vc_32:import17.ViewContainer;
  _TemplateRef_32_5:any;
  _NgIf_32_6:import26.Wrapper_NgIf;
  _text_33:any;
  _text_34:any;
  _text_35:any;
  _text_36:any;
  _text_37:any;
  /*private*/ _expr_56:any;
  /*private*/ _expr_57:any;
  /*private*/ _expr_58:any;
  /*private*/ _expr_59:any;
  _map_60:any;
  _arr_61:any;
  /*private*/ _expr_62:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MapTestReqComponent0,renderType_MapTestReqComponent,import8.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckOnce);
    this._expr_56 = import1.UNINITIALIZED;
    this._expr_57 = import1.UNINITIALIZED;
    this._expr_58 = import1.UNINITIALIZED;
    this._expr_59 = import1.UNINITIALIZED;
    this._map_60 = import3.pureProxy1((p0:any):{[key: string]:any} => {
      return {disabled: p0};
    });
    this._arr_61 = import3.pureProxy3((p0:any,p1:any,p2:any):any[] => {
      return [
        p0,
        p1,
        p2
      ]
      ;
    });
    this._expr_62 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_GridComponent_0 = new import32.QueryList<any>();
    this._viewQuery_RequirementDetailsComponent_1 = new import32.QueryList<any>();
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'button',new import3.InlineArray8(6,'class','zui-btn','data-toggle','modal','type','button'),(null as any));
    this._NgClass_0_3 = new import33.Wrapper_NgClass(this.parentView.injectorGet(import38.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import39.KeyValueDiffers,this.parentIndex),new import19.ElementRef(this._el_0),this.renderer);
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this._text_2 = this.renderer.createText(parentRenderNode,'\n\n',(null as any));
    this._el_3 = import3.createRenderElement(this.renderer,parentRenderNode,'zui-modal',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_3 = new import35.View_ModalComponent0(this.viewUtils,this,3,this._el_3);
    this._ModalComponent_3_3 = new import35.Wrapper_ModalComponent(new import19.ElementRef(this._el_3),this.compView_3.ref);
    this._text_4 = this.renderer.createText((null as any),'\n    ',(null as any));
    this._el_5 = import3.createRenderElement(this.renderer,(null as any),'zui-modal-body',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_6 = this.renderer.createText(this._el_5,'\n        ',(null as any));
    this._el_7 = import3.createRenderElement(this.renderer,this._el_5,'div',new import3.InlineArray2(2,'class','row'),(null as any));
    this._text_8 = this.renderer.createText(this._el_7,'\n            ',(null as any));
    this._el_9 = import3.createRenderElement(this.renderer,this._el_7,'div',new import3.InlineArray2(2,'class','col-xs-3 tree-tcr js-tree-checkbox'),(null as any));
    this._text_10 = this.renderer.createText(this._el_9,'\n                ',(null as any));
    this._el_11 = import3.createRenderElement(this.renderer,this._el_9,'tree-view',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_11 = new import37.View_TreeComponent0(this.viewUtils,this,11,this._el_11);
    this._NgClass_11_3 = new import33.Wrapper_NgClass(this.parentView.injectorGet(import38.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import39.KeyValueDiffers,this.parentIndex),new import19.ElementRef(this._el_11),this.renderer);
    this._GlobalAction_11_4 = new import14.GlobalAction(this.parentView.injectorGet(import11.Http,this.parentIndex));
    this._TreeComponent_11_5 = new import37.Wrapper_TreeComponent(this._GlobalAction_11_4,this.parentView.injectorGet(import22.ToastrService,this.parentIndex));
    this.compView_11.create(this._TreeComponent_11_5.context);
    this._text_12 = this.renderer.createText(this._el_9,'\n            ',(null as any));
    this._text_13 = this.renderer.createText(this._el_7,'\n            ',(null as any));
    this._anchor_14 = this.renderer.createTemplateAnchor(this._el_7,(null as any));
    this._vc_14 = new import17.ViewContainer(14,7,this,this._anchor_14);
    this._TemplateRef_14_5 = new import30.TemplateRef_(this,14,this._anchor_14);
    this._NgIf_14_6 = new import26.Wrapper_NgIf(this._vc_14.vcRef,this._TemplateRef_14_5);
    this._text_15 = this.renderer.createText(this._el_7,'\n        ',(null as any));
    this._text_16 = this.renderer.createText(this._el_5,'\n        ',(null as any));
    this._anchor_17 = this.renderer.createTemplateAnchor(this._el_5,(null as any));
    this._vc_17 = new import17.ViewContainer(17,5,this,this._anchor_17);
    this._TemplateRef_17_5 = new import30.TemplateRef_(this,17,this._anchor_17);
    this._NgIf_17_6 = new import26.Wrapper_NgIf(this._vc_17.vcRef,this._TemplateRef_17_5);
    this._text_18 = this.renderer.createText(this._el_5,'\n    ',(null as any));
    this._text_19 = this.renderer.createText((null as any),'\n    ',(null as any));
    this._el_20 = import3.createRenderElement(this.renderer,(null as any),'zui-modal-footer',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_21 = this.renderer.createText(this._el_20,'\n        ',(null as any));
    this._el_22 = import3.createRenderElement(this.renderer,this._el_20,'div',new import3.InlineArray2(2,'class','row map-save'),(null as any));
    this._text_23 = this.renderer.createText(this._el_22,'\n            ',(null as any));
    this._el_24 = import3.createRenderElement(this.renderer,this._el_22,'div',new import3.InlineArray2(2,'class','col-xs-12'),(null as any));
    this._text_25 = this.renderer.createText(this._el_24,'\n                ',(null as any));
    this._el_26 = import3.createRenderElement(this.renderer,this._el_24,'button',new import3.InlineArray4(4,'class','zui-btn zui-btn-sec pull-right','data-dismiss','modal'),(null as any));
    this._text_27 = this.renderer.createText(this._el_26,'Cancel',(null as any));
    this._text_28 = this.renderer.createText(this._el_24,'\n                ',(null as any));
    this._el_29 = import3.createRenderElement(this.renderer,this._el_24,'button',new import3.InlineArray2(2,'class','zui-btn zui-btn-primary pull-right'),(null as any));
    this._text_30 = this.renderer.createText(this._el_29,'Save',(null as any));
    this._text_31 = this.renderer.createText(this._el_24,'\n                ',(null as any));
    this._anchor_32 = this.renderer.createTemplateAnchor(this._el_24,(null as any));
    this._vc_32 = new import17.ViewContainer(32,24,this,this._anchor_32);
    this._TemplateRef_32_5 = new import30.TemplateRef_(this,32,this._anchor_32);
    this._NgIf_32_6 = new import26.Wrapper_NgIf(this._vc_32.vcRef,this._TemplateRef_32_5);
    this._text_33 = this.renderer.createText(this._el_24,'\n            ',(null as any));
    this._text_34 = this.renderer.createText(this._el_22,'\n        ',(null as any));
    this._text_35 = this.renderer.createText(this._el_20,'\n    ',(null as any));
    this._text_36 = this.renderer.createText((null as any),'\n',(null as any));
    this.compView_3.create(this._ModalComponent_3_3.context);
    this._text_37 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_3,new import3.InlineArray2(2,'onClose',(null as any)),this.eventHandler(this.handleEvent_3));
    this._ModalComponent_3_3.subscribe(this,this.eventHandler(this.handleEvent_3),true,false,false,false);
    var disposable_2:Function = import3.subscribeToRenderElement(this,this._el_11,new import3.InlineArray4(4,'onTreeNodeClick',(null as any),'onTreeNodeSelect',(null as any)),this.eventHandler(this.handleEvent_11));
    this._TreeComponent_11_5.subscribe(this,this.eventHandler(this.handleEvent_11),false,false,false,false,true,false,true,false,false,false,false);
    var disposable_3:Function = import3.subscribeToRenderElement(this,this._el_29,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_29));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._el_9,
      this._text_10,
      this._el_11,
      this._text_12,
      this._text_13,
      this._anchor_14,
      this._text_15,
      this._text_16,
      this._anchor_17,
      this._text_18,
      this._text_19,
      this._el_20,
      this._text_21,
      this._el_22,
      this._text_23,
      this._el_24,
      this._text_25,
      this._el_26,
      this._text_27,
      this._text_28,
      this._el_29,
      this._text_30,
      this._text_31,
      this._anchor_32,
      this._text_33,
      this._text_34,
      this._text_35,
      this._text_36,
      this._text_37
    ]
    ),[
      disposable_0,
      disposable_1,
      disposable_2,
      disposable_3
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import40.NgClass) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NgClass_0_3.context; }
    if (((token === import40.NgClass) && (11 === requestNodeIndex))) { return this._NgClass_11_3.context; }
    if (((token === import14.GlobalAction) && (11 === requestNodeIndex))) { return this._GlobalAction_11_4; }
    if (((token === import36.TreeComponent) && (11 === requestNodeIndex))) { return this._TreeComponent_11_5.context; }
    if (((token === import30.TemplateRef) && (14 === requestNodeIndex))) { return this._TemplateRef_14_5; }
    if (((token === import31.NgIf) && (14 === requestNodeIndex))) { return this._NgIf_14_6.context; }
    if (((token === import30.TemplateRef) && (17 === requestNodeIndex))) { return this._TemplateRef_17_5; }
    if (((token === import31.NgIf) && (17 === requestNodeIndex))) { return this._NgIf_17_6.context; }
    if (((token === import30.TemplateRef) && (32 === requestNodeIndex))) { return this._TemplateRef_32_5; }
    if (((token === import31.NgIf) && (32 === requestNodeIndex))) { return this._NgIf_32_6.context; }
    if (((token === import34.ModalComponent) && ((3 <= requestNodeIndex) && (requestNodeIndex <= 36)))) { return this._ModalComponent_3_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = 'zui-btn';
    this._NgClass_0_3.check_klass(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = (this.context.isBulk? 'zui-btn-tertiary': 'zui-btn-primary');
    this._NgClass_0_3.check_ngClass(currVal_0_0_1,throwOnChange,false);
    this._NgClass_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_3_0_0:any = this.context.title;
    this._ModalComponent_3_3.check_title(currVal_3_0_0,throwOnChange,false);
    const currVal_3_0_1:any = this.context.getId('zee-map-modal');
    this._ModalComponent_3_3.check_modalId(currVal_3_0_1,throwOnChange,false);
    const currVal_3_0_2:any = 'large';
    this._ModalComponent_3_3.check_modalSize(currVal_3_0_2,throwOnChange,false);
    this._ModalComponent_3_3.ngDoCheck(this,this._el_3,throwOnChange);
    const currVal_11_0_0:any = this._map_60(!this.context.isChildren);
    this._NgClass_11_3.check_ngClass(currVal_11_0_0,throwOnChange,false);
    this._NgClass_11_3.ngDoCheck(this,this._el_11,throwOnChange);
    const currVal_11_1_0:any = 'checkbox';
    this._TreeComponent_11_5.check_options(currVal_11_1_0,throwOnChange,false);
    const currVal_11_1_1:any = this.context.treeData;
    this._TreeComponent_11_5.check_treeData(currVal_11_1_1,throwOnChange,false);
    const currVal_11_1_2:any = this._arr_61('dnd','contextmenu','search');
    this._TreeComponent_11_5.check_removeFromDefault(currVal_11_1_2,throwOnChange,false);
    const currVal_11_1_3:any = false;
    this._TreeComponent_11_5.check_showFilter(currVal_11_1_3,throwOnChange,false);
    const currVal_11_1_4:any = this.context.getId('-mapTestReq');
    this._TreeComponent_11_5.check_treeContext(currVal_11_1_4,throwOnChange,false);
    const currVal_11_1_5:any = this.context.selectedNodes;
    this._TreeComponent_11_5.check_selectedNodes(currVal_11_1_5,throwOnChange,false);
    const currVal_11_1_6:any = true;
    this._TreeComponent_11_5.check_threeStateCheckbox(currVal_11_1_6,throwOnChange,false);
    this._TreeComponent_11_5.ngDoCheck(this,this._el_11,throwOnChange);
    const currVal_14_0_0:any = this.context.isModalShown;
    this._NgIf_14_6.check_ngIf(currVal_14_0_0,throwOnChange,false);
    this._NgIf_14_6.ngDoCheck(this,this._anchor_14,throwOnChange);
    const currVal_17_0_0:boolean = !this.context.isBulk;
    this._NgIf_17_6.check_ngIf(currVal_17_0_0,throwOnChange,false);
    this._NgIf_17_6.ngDoCheck(this,this._anchor_17,throwOnChange);
    const currVal_32_0_0:any = this.context.isBulk;
    this._NgIf_32_6.check_ngIf(currVal_32_0_0,throwOnChange,false);
    this._NgIf_32_6.ngDoCheck(this,this._anchor_32,throwOnChange);
    this._vc_14.detectChangesInNestedViews(throwOnChange);
    this._vc_17.detectChangesInNestedViews(throwOnChange);
    this._vc_32.detectChangesInNestedViews(throwOnChange);
    const currVal_56:any = import3.inlineInterpolate(1,'mapTest',this.context.buttonId,'');
    if (import3.checkBinding(throwOnChange,this._expr_56,currVal_56)) {
      this.renderer.setElementProperty(this._el_0,'id',currVal_56);
      this._expr_56 = currVal_56;
    }
    const currVal_57:boolean = !this.context.editable;
    if (import3.checkBinding(throwOnChange,this._expr_57,currVal_57)) {
      this.renderer.setElementProperty(this._el_0,'disabled',currVal_57);
      this._expr_57 = currVal_57;
    }
    const currVal_58:any = this.context.getId('#zee-map-modal');
    if (import3.checkBinding(throwOnChange,this._expr_58,currVal_58)) {
      this.renderer.setElementAttribute(this._el_0,'data-target',((currVal_58 == null)? (null as any): currVal_58.toString()));
      this._expr_58 = currVal_58;
    }
    const currVal_59:any = import3.inlineInterpolate(1,'',this.context.buttonText,'');
    if (import3.checkBinding(throwOnChange,this._expr_59,currVal_59)) {
      this.renderer.setText(this._text_1,currVal_59);
      this._expr_59 = currVal_59;
    }
    const currVal_62:any = this.context.isDisable();
    if (import3.checkBinding(throwOnChange,this._expr_62,currVal_62)) {
      this.renderer.setElementProperty(this._el_29,'disabled',currVal_62);
      this._expr_62 = currVal_62;
    }
    this.compView_3.internalDetectChanges(throwOnChange);
    this.compView_11.internalDetectChanges(throwOnChange);
    if (!throwOnChange) {
      if (this._viewQuery_GridComponent_0.dirty) {
          this._viewQuery_GridComponent_0.reset([this._vc_14.mapNestedViews(View_MapTestReqComponent1,(nestedView:View_MapTestReqComponent1):any => {
            return [nestedView._GridComponent_2_6.context];
        })]);
        this.context.gridComponent = this._viewQuery_GridComponent_0.first;
      }
      if (this._viewQuery_RequirementDetailsComponent_1.dirty) {
          this._viewQuery_RequirementDetailsComponent_1.reset([this._vc_17.mapNestedViews(View_MapTestReqComponent2,(nestedView:View_MapTestReqComponent2):any => {
            return [nestedView._RequirementDetailsComponent_4_5.context];
        })]);
        this.context.reqDetailsComponent = this._viewQuery_RequirementDetailsComponent_1.first;
      }
      if ((this.numberOfChecks === 0)) { this._ModalComponent_3_3.context.ngAfterViewInit(); }
    }
  }
  destroyInternal():void {
    this._vc_14.destroyNestedViews();
    this._vc_17.destroyNestedViews();
    this._vc_32.destroyNestedViews();
    this.compView_3.destroy();
    this.compView_11.destroy();
    this._TreeComponent_11_5.ngOnDestroy();
    this._ModalComponent_3_3.ngOnDestroy();
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 3) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 3) && (ngContentIndex == 1))) { cb(this._el_5,ctx); }
    if (((nodeIndex == 3) && (ngContentIndex == 2))) { cb(this._el_20,ctx); }
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 14)) { return new View_MapTestReqComponent1(this.viewUtils,this,14,this._anchor_14,this._vc_14); }
    if ((nodeIndex == 17)) { return new View_MapTestReqComponent2(this.viewUtils,this,17,this._anchor_17,this._vc_17); }
    if ((nodeIndex == 32)) { return new View_MapTestReqComponent4(this.viewUtils,this,32,this._anchor_32,this._vc_32); }
    return (null as any);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.getDetails()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_3(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onClose')) {
      const pd_sub_0:any = ((<any>this.context.onClose()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_11(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onTreeNodeClick')) {
      const pd_sub_0:any = ((<any>this.context.onTreeNodeClick($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'onTreeNodeSelect')) {
      const pd_sub_1:any = ((<any>this.context.onTreeSelect($event)) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
  handleEvent_29(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.saveMap()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}