/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../../../../../app/view/components/testcase-eas/phase/tree/export/eas_phase_export.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/constants';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '@angular/core/src/linker/query_list';
import * as import9 from '../../../../../../../../app/view/components/common/export/export.component';
import * as import10 from '../../../../../../../../app/actions/report.action';
import * as import11 from '../../../../../../../../app/actions/admin.action';
import * as import12 from '../../../../common/export/export.component.ngfactory';
import * as import13 from '@angular/http/src/http';
import * as import14 from '../../../../../../../../app/services/pouch.db.service';
export class Wrapper_EasPhaseExportComponent {
  /*private*/ _eventHandler:Function;
  context:import0.EasPhaseExportComponent;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import0.EasPhaseExportComponent();
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_EasPhaseExportComponent_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_EasPhaseExportComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.EasPhaseExportComponent>;
  _EasPhaseExportComponent_0_3:Wrapper_EasPhaseExportComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_EasPhaseExportComponent_Host0,renderType_EasPhaseExportComponent_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'ng-component',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_EasPhaseExportComponent0(this.viewUtils,this,0,this._el_0);
    this._EasPhaseExportComponent_0_3 = new Wrapper_EasPhaseExportComponent();
    this.compView_0.create(this._EasPhaseExportComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._EasPhaseExportComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.EasPhaseExportComponent) && (0 === requestNodeIndex))) { return this._EasPhaseExportComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._EasPhaseExportComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._EasPhaseExportComponent_0_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const EasPhaseExportComponentNgFactory:import7.ComponentFactory<import0.EasPhaseExportComponent> = new import7.ComponentFactory<import0.EasPhaseExportComponent>('ng-component',View_EasPhaseExportComponent_Host0,import0.EasPhaseExportComponent);
const styles_EasPhaseExportComponent:any[] = ([] as any[]);
var renderType_EasPhaseExportComponent:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,styles_EasPhaseExportComponent,{});
export class View_EasPhaseExportComponent0 extends import1.AppView<import0.EasPhaseExportComponent> {
  _viewQuery_ExportComponent_0:import8.QueryList<any>;
  _el_0:any;
  compView_0:import1.AppView<import9.ExportComponent>;
  _ReportAction_0_3:import10.ReportAction;
  _AdminAction_0_4:import11.AdminAction;
  _ExportComponent_0_5:import12.Wrapper_ExportComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_EasPhaseExportComponent0,renderType_EasPhaseExportComponent,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_ExportComponent_0 = new import8.QueryList<any>();
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'zui-export',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_0 = new import12.View_ExportComponent0(this.viewUtils,this,0,this._el_0);
    this._ReportAction_0_3 = new import10.ReportAction(this.parentView.injectorGet(import13.Http,this.parentIndex));
    this._AdminAction_0_4 = new import11.AdminAction(this.parentView.injectorGet(import13.Http,this.parentIndex),this.parentView.injectorGet(import14.PouchDBPrefsServices,this.parentIndex));
    this._ExportComponent_0_5 = new import12.Wrapper_ExportComponent(this._ReportAction_0_3,this._AdminAction_0_4,this.compView_0.ref);
    this.compView_0.create(this._ExportComponent_0_5.context);
    this._viewQuery_ExportComponent_0.reset([this._ExportComponent_0_5.context]);
    this.context.exportCmp = this._viewQuery_ExportComponent_0.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import10.ReportAction) && (0 === requestNodeIndex))) { return this._ReportAction_0_3; }
    if (((token === import11.AdminAction) && (0 === requestNodeIndex))) { return this._AdminAction_0_4; }
    if (((token === import9.ExportComponent) && (0 === requestNodeIndex))) { return this._ExportComponent_0_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.context.fieldOptions;
    this._ExportComponent_0_5.check_fieldOptions(currVal_0_0_0,throwOnChange,false);
    if (this._ExportComponent_0_5.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._ExportComponent_0_5.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._ExportComponent_0_5.ngOnDestroy();
  }
}