/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../../../../app/view/components/requirements/tree/rename/req_renameNode.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/constants';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '@angular/router/src/router_state';
import * as import9 from '@angular/forms/src/form_builder';
import * as import10 from '../../../../../../node_modules/@angular/forms/src/directives/reactive_directives/form_group_directive.ngfactory';
import * as import11 from '../../../../../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import12 from '../../../../../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import13 from '../../../../../../node_modules/@angular/forms/src/directives/validators.ngfactory';
import * as import14 from '../../../../../../node_modules/@angular/forms/src/directives/reactive_directives/form_control_name.ngfactory';
import * as import15 from '@angular/core/src/change_detection/change_detection_util';
import * as import16 from '@angular/core/src/linker/element_ref';
import * as import17 from '@angular/forms/src/directives/default_value_accessor';
import * as import18 from '@angular/forms/src/directives/validators';
import * as import19 from '@angular/forms/src/validators';
import * as import20 from '@angular/forms/src/directives/control_value_accessor';
import * as import21 from '@angular/forms/src/directives/reactive_directives/form_control_name';
import * as import22 from '@angular/forms/src/directives/ng_control';
import * as import23 from '@angular/forms/src/directives/ng_control_status';
import * as import24 from '@angular/forms/src/directives/reactive_directives/form_group_directive';
import * as import25 from '@angular/forms/src/directives/control_container';
export class Wrapper_ReqRenameNodeComponent {
  /*private*/ _eventHandler:Function;
  context:import0.ReqRenameNodeComponent;
  /*private*/ _changed:boolean;
  subscription0:any;
  constructor(p0:any,p1:any) {
    this._changed = false;
    this.context = new import0.ReqRenameNodeComponent(p0,p1);
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.renameNode.subscribe(_eventHandler.bind(view,'renameNode'))); }
  }
}
var renderType_ReqRenameNodeComponent_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_ReqRenameNodeComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.ReqRenameNodeComponent>;
  _ReqRenameNodeComponent_0_3:Wrapper_ReqRenameNodeComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ReqRenameNodeComponent_Host0,renderType_ReqRenameNodeComponent_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'ng-component',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_ReqRenameNodeComponent0(this.viewUtils,this,0,this._el_0);
    this._ReqRenameNodeComponent_0_3 = new Wrapper_ReqRenameNodeComponent(this.injectorGet(import8.ActivatedRoute,this.parentIndex),this.injectorGet(import9.FormBuilder,this.parentIndex));
    this.compView_0.create(this._ReqRenameNodeComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._ReqRenameNodeComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.ReqRenameNodeComponent) && (0 === requestNodeIndex))) { return this._ReqRenameNodeComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (this._ReqRenameNodeComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._ReqRenameNodeComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const ReqRenameNodeComponentNgFactory:import7.ComponentFactory<import0.ReqRenameNodeComponent> = new import7.ComponentFactory<import0.ReqRenameNodeComponent>('ng-component',View_ReqRenameNodeComponent_Host0,import0.ReqRenameNodeComponent);
const styles_ReqRenameNodeComponent:any[] = ([] as any[]);
var renderType_ReqRenameNodeComponent:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,styles_ReqRenameNodeComponent,{});
export class View_ReqRenameNodeComponent0 extends import1.AppView<import0.ReqRenameNodeComponent> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _el_6:any;
  _FormGroupDirective_6_3:import10.Wrapper_FormGroupDirective;
  _ControlContainer_6_4:any;
  _NgControlStatusGroup_6_5:import11.Wrapper_NgControlStatusGroup;
  _text_7:any;
  _el_8:any;
  _text_9:any;
  _el_10:any;
  _el_11:any;
  _text_12:any;
  _text_13:any;
  _el_14:any;
  _text_15:any;
  _text_16:any;
  _text_17:any;
  _el_18:any;
  _text_19:any;
  _el_20:any;
  _text_21:any;
  _el_22:any;
  _text_23:any;
  _el_24:any;
  _el_25:any;
  _text_26:any;
  _text_27:any;
  _el_28:any;
  _el_29:any;
  _DefaultValueAccessor_29_3:import12.Wrapper_DefaultValueAccessor;
  _MaxLengthValidator_29_4:import13.Wrapper_MaxLengthValidator;
  _NG_VALIDATORS_29_5:any[];
  _NG_VALUE_ACCESSOR_29_6:any[];
  _FormControlName_29_7:import14.Wrapper_FormControlName;
  _NgControl_29_8:any;
  _NgControlStatus_29_9:import11.Wrapper_NgControlStatus;
  _text_30:any;
  _text_31:any;
  _el_32:any;
  _text_33:any;
  _el_34:any;
  _el_35:any;
  _text_36:any;
  _text_37:any;
  _el_38:any;
  _el_39:any;
  _DefaultValueAccessor_39_3:import12.Wrapper_DefaultValueAccessor;
  _MaxLengthValidator_39_4:import13.Wrapper_MaxLengthValidator;
  _NG_VALIDATORS_39_5:any[];
  _NG_VALUE_ACCESSOR_39_6:any[];
  _FormControlName_39_7:import14.Wrapper_FormControlName;
  _NgControl_39_8:any;
  _NgControlStatus_39_9:import11.Wrapper_NgControlStatus;
  _text_40:any;
  _text_41:any;
  _text_42:any;
  _text_43:any;
  _el_44:any;
  _text_45:any;
  _el_46:any;
  _text_47:any;
  _text_48:any;
  _el_49:any;
  _text_50:any;
  _text_51:any;
  _text_52:any;
  _text_53:any;
  _text_54:any;
  _text_55:any;
  _text_56:any;
  _text_57:any;
  _text_58:any;
  _text_59:any;
  /*private*/ _expr_77:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ReqRenameNodeComponent0,renderType_ReqRenameNodeComponent,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckOnce);
    this._expr_77 = import15.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray16(10,'class','modal fade','data-backdrop','static','id','reqRenameNodeModal','role','dialog','tabindex','-1'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','modal-dialog'),(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'\n        ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_2,'div',new import3.InlineArray2(2,'class','modal-content'),(null as any));
    this._text_5 = this.renderer.createText(this._el_4,'\n            ',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_4,'form',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._FormGroupDirective_6_3 = new import10.Wrapper_FormGroupDirective((null as any),(null as any));
    this._ControlContainer_6_4 = this._FormGroupDirective_6_3.context;
    this._NgControlStatusGroup_6_5 = new import11.Wrapper_NgControlStatusGroup(this._ControlContainer_6_4);
    this._text_7 = this.renderer.createText(this._el_6,'\n                ',(null as any));
    this._el_8 = import3.createRenderElement(this.renderer,this._el_6,'div',new import3.InlineArray2(2,'class','modal-header'),(null as any));
    this._text_9 = this.renderer.createText(this._el_8,'\n                    ',(null as any));
    this._el_10 = import3.createRenderElement(this.renderer,this._el_8,'button',new import3.InlineArray8(8,'aria-label','Close','class','close','data-dismiss','modal','type','button'),(null as any));
    this._el_11 = import3.createRenderElement(this.renderer,this._el_10,'span',new import3.InlineArray2(2,'aria-hidden','true'),(null as any));
    this._text_12 = this.renderer.createText(this._el_11,'×',(null as any));
    this._text_13 = this.renderer.createText(this._el_8,'\n                    ',(null as any));
    this._el_14 = import3.createRenderElement(this.renderer,this._el_8,'h4',new import3.InlineArray2(2,'class','modal-title capitalize'),(null as any));
    this._text_15 = this.renderer.createText(this._el_14,'Rename Node',(null as any));
    this._text_16 = this.renderer.createText(this._el_8,'\n                ',(null as any));
    this._text_17 = this.renderer.createText(this._el_6,'\n                ',(null as any));
    this._el_18 = import3.createRenderElement(this.renderer,this._el_6,'div',new import3.InlineArray4(4,'class','modal-body','id','tree-modal-content'),(null as any));
    this._text_19 = this.renderer.createText(this._el_18,'\n                    ',(null as any));
    this._el_20 = import3.createRenderElement(this.renderer,this._el_18,'span',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_21 = this.renderer.createText(this._el_20,'\n						',(null as any));
    this._el_22 = import3.createRenderElement(this.renderer,this._el_20,'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_23 = this.renderer.createText(this._el_22,'\n							',(null as any));
    this._el_24 = import3.createRenderElement(this.renderer,this._el_22,'span',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._el_25 = import3.createRenderElement(this.renderer,this._el_24,'label',new import3.InlineArray2(2,'for','renameNodeName'),(null as any));
    this._text_26 = this.renderer.createText(this._el_25,'Name:',(null as any));
    this._text_27 = this.renderer.createText(this._el_22,'\n                            ',(null as any));
    this._el_28 = import3.createRenderElement(this.renderer,this._el_22,'span',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._el_29 = import3.createRenderElement(this.renderer,this._el_28,'input',new import3.InlineArray16(14,'class','form-control','formControlName','name','id','renameNodeName','maxlength','255','name','reqNodeName','type','text','value',''),(null as any));
    this._DefaultValueAccessor_29_3 = new import12.Wrapper_DefaultValueAccessor(this.renderer,new import16.ElementRef(this._el_29));
    this._MaxLengthValidator_29_4 = new import13.Wrapper_MaxLengthValidator();
    this._NG_VALIDATORS_29_5 = [this._MaxLengthValidator_29_4.context];
    this._NG_VALUE_ACCESSOR_29_6 = [this._DefaultValueAccessor_29_3.context];
    this._FormControlName_29_7 = new import14.Wrapper_FormControlName(this._ControlContainer_6_4,this._NG_VALIDATORS_29_5,(null as any),this._NG_VALUE_ACCESSOR_29_6);
    this._NgControl_29_8 = this._FormControlName_29_7.context;
    this._NgControlStatus_29_9 = new import11.Wrapper_NgControlStatus(this._NgControl_29_8);
    this._text_30 = this.renderer.createText(this._el_22,'\n                        ',(null as any));
    this._text_31 = this.renderer.createText(this._el_20,'\n                        ',(null as any));
    this._el_32 = import3.createRenderElement(this.renderer,this._el_20,'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_33 = this.renderer.createText(this._el_32,'\n                            ',(null as any));
    this._el_34 = import3.createRenderElement(this.renderer,this._el_32,'span',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._el_35 = import3.createRenderElement(this.renderer,this._el_34,'label',new import3.InlineArray2(2,'for','nodeDescription'),(null as any));
    this._text_36 = this.renderer.createText(this._el_35,'Description:',(null as any));
    this._text_37 = this.renderer.createText(this._el_32,'\n                            ',(null as any));
    this._el_38 = import3.createRenderElement(this.renderer,this._el_32,'span',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._el_39 = import3.createRenderElement(this.renderer,this._el_38,'textarea',new import3.InlineArray16(16,'class','form-control','formControlName','description','id','nodeDescription','maxlength','1024','name','nodeDescription','rows','5','type','text','value',''),(null as any));
    this._DefaultValueAccessor_39_3 = new import12.Wrapper_DefaultValueAccessor(this.renderer,new import16.ElementRef(this._el_39));
    this._MaxLengthValidator_39_4 = new import13.Wrapper_MaxLengthValidator();
    this._NG_VALIDATORS_39_5 = [this._MaxLengthValidator_39_4.context];
    this._NG_VALUE_ACCESSOR_39_6 = [this._DefaultValueAccessor_39_3.context];
    this._FormControlName_39_7 = new import14.Wrapper_FormControlName(this._ControlContainer_6_4,this._NG_VALIDATORS_39_5,(null as any),this._NG_VALUE_ACCESSOR_39_6);
    this._NgControl_39_8 = this._FormControlName_39_7.context;
    this._NgControlStatus_39_9 = new import11.Wrapper_NgControlStatus(this._NgControl_39_8);
    this._text_40 = this.renderer.createText(this._el_32,'\n                        ',(null as any));
    this._text_41 = this.renderer.createText(this._el_20,'\n                    ',(null as any));
    this._text_42 = this.renderer.createText(this._el_18,'\n                ',(null as any));
    this._text_43 = this.renderer.createText(this._el_6,'\n                ',(null as any));
    this._el_44 = import3.createRenderElement(this.renderer,this._el_6,'div',new import3.InlineArray2(2,'class','modal-footer'),(null as any));
    this._text_45 = this.renderer.createText(this._el_44,'\n                    ',(null as any));
    this._el_46 = import3.createRenderElement(this.renderer,this._el_44,'button',new import3.InlineArray8(6,'class','zui-btn zui-btn-sec','data-dismiss','modal','type','button'),(null as any));
    this._text_47 = this.renderer.createText(this._el_46,'Cancel',(null as any));
    this._text_48 = this.renderer.createText(this._el_44,'\n                    ',(null as any));
    this._el_49 = import3.createRenderElement(this.renderer,this._el_44,'button',new import3.InlineArray8(6,'class','zui-btn zui-btn-primary','id','reqRenameNodeModalSave','type','button'),(null as any));
    this._text_50 = this.renderer.createText(this._el_49,'Rename',(null as any));
    this._text_51 = this.renderer.createText(this._el_44,'\n                ',(null as any));
    this._text_52 = this.renderer.createText(this._el_6,'\n            ',(null as any));
    this._text_53 = this.renderer.createText(this._el_4,'\n        ',(null as any));
    this._text_54 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._text_55 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._text_56 = this.renderer.createText(this._el_0,'\n',(null as any));
    this._text_57 = this.renderer.createText(this._el_0,'\n',(null as any));
    this._text_58 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._text_59 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_6,new import3.InlineArray4(4,'submit',(null as any),'reset',(null as any)),this.eventHandler(this.handleEvent_6));
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_29,new import3.InlineArray8(6,'keypress',(null as any),'input',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_29));
    var disposable_2:Function = import3.subscribeToRenderElement(this,this._el_39,new import3.InlineArray4(4,'input',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_39));
    var disposable_3:Function = import3.subscribeToRenderElement(this,this._el_49,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_49));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._el_10,
      this._el_11,
      this._text_12,
      this._text_13,
      this._el_14,
      this._text_15,
      this._text_16,
      this._text_17,
      this._el_18,
      this._text_19,
      this._el_20,
      this._text_21,
      this._el_22,
      this._text_23,
      this._el_24,
      this._el_25,
      this._text_26,
      this._text_27,
      this._el_28,
      this._el_29,
      this._text_30,
      this._text_31,
      this._el_32,
      this._text_33,
      this._el_34,
      this._el_35,
      this._text_36,
      this._text_37,
      this._el_38,
      this._el_39,
      this._text_40,
      this._text_41,
      this._text_42,
      this._text_43,
      this._el_44,
      this._text_45,
      this._el_46,
      this._text_47,
      this._text_48,
      this._el_49,
      this._text_50,
      this._text_51,
      this._text_52,
      this._text_53,
      this._text_54,
      this._text_55,
      this._text_56,
      this._text_57,
      this._text_58,
      this._text_59
    ]
    ),[
      disposable_0,
      disposable_1,
      disposable_2,
      disposable_3
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import17.DefaultValueAccessor) && (29 === requestNodeIndex))) { return this._DefaultValueAccessor_29_3.context; }
    if (((token === import18.MaxLengthValidator) && (29 === requestNodeIndex))) { return this._MaxLengthValidator_29_4.context; }
    if (((token === import19.NG_VALIDATORS) && (29 === requestNodeIndex))) { return this._NG_VALIDATORS_29_5; }
    if (((token === import20.NG_VALUE_ACCESSOR) && (29 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_29_6; }
    if (((token === import21.FormControlName) && (29 === requestNodeIndex))) { return this._FormControlName_29_7.context; }
    if (((token === import22.NgControl) && (29 === requestNodeIndex))) { return this._NgControl_29_8; }
    if (((token === import23.NgControlStatus) && (29 === requestNodeIndex))) { return this._NgControlStatus_29_9.context; }
    if (((token === import17.DefaultValueAccessor) && (39 === requestNodeIndex))) { return this._DefaultValueAccessor_39_3.context; }
    if (((token === import18.MaxLengthValidator) && (39 === requestNodeIndex))) { return this._MaxLengthValidator_39_4.context; }
    if (((token === import19.NG_VALIDATORS) && (39 === requestNodeIndex))) { return this._NG_VALIDATORS_39_5; }
    if (((token === import20.NG_VALUE_ACCESSOR) && (39 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_39_6; }
    if (((token === import21.FormControlName) && (39 === requestNodeIndex))) { return this._FormControlName_39_7.context; }
    if (((token === import22.NgControl) && (39 === requestNodeIndex))) { return this._NgControl_39_8; }
    if (((token === import23.NgControlStatus) && (39 === requestNodeIndex))) { return this._NgControlStatus_39_9.context; }
    if (((token === import24.FormGroupDirective) && ((6 <= requestNodeIndex) && (requestNodeIndex <= 52)))) { return this._FormGroupDirective_6_3.context; }
    if (((token === import25.ControlContainer) && ((6 <= requestNodeIndex) && (requestNodeIndex <= 52)))) { return this._ControlContainer_6_4; }
    if (((token === import23.NgControlStatusGroup) && ((6 <= requestNodeIndex) && (requestNodeIndex <= 52)))) { return this._NgControlStatusGroup_6_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_6_0_0:any = this.context.editNodeForm;
    this._FormGroupDirective_6_3.check_form(currVal_6_0_0,throwOnChange,false);
    this._FormGroupDirective_6_3.ngDoCheck(this,this._el_6,throwOnChange);
    this._NgControlStatusGroup_6_5.ngDoCheck(this,this._el_6,throwOnChange);
    this._DefaultValueAccessor_29_3.ngDoCheck(this,this._el_29,throwOnChange);
    const currVal_29_1_0:any = '255';
    this._MaxLengthValidator_29_4.check_maxlength(currVal_29_1_0,throwOnChange,false);
    this._MaxLengthValidator_29_4.ngDoCheck(this,this._el_29,throwOnChange);
    const currVal_29_2_0:any = 'name';
    this._FormControlName_29_7.check_name(currVal_29_2_0,throwOnChange,false);
    this._FormControlName_29_7.ngDoCheck(this,this._el_29,throwOnChange);
    this._NgControlStatus_29_9.ngDoCheck(this,this._el_29,throwOnChange);
    this._DefaultValueAccessor_39_3.ngDoCheck(this,this._el_39,throwOnChange);
    const currVal_39_1_0:any = '1024';
    this._MaxLengthValidator_39_4.check_maxlength(currVal_39_1_0,throwOnChange,false);
    this._MaxLengthValidator_39_4.ngDoCheck(this,this._el_39,throwOnChange);
    const currVal_39_2_0:any = 'description';
    this._FormControlName_39_7.check_name(currVal_39_2_0,throwOnChange,false);
    this._FormControlName_39_7.ngDoCheck(this,this._el_39,throwOnChange);
    this._NgControlStatus_39_9.ngDoCheck(this,this._el_39,throwOnChange);
    this._NgControlStatusGroup_6_5.checkHost(this,this,this._el_6,throwOnChange);
    this._MaxLengthValidator_29_4.checkHost(this,this,this._el_29,throwOnChange);
    this._NgControlStatus_29_9.checkHost(this,this,this._el_29,throwOnChange);
    this._MaxLengthValidator_39_4.checkHost(this,this,this._el_39,throwOnChange);
    this._NgControlStatus_39_9.checkHost(this,this,this._el_39,throwOnChange);
    const currVal_77:any = this.context.editNodeForm.invalid;
    if (import3.checkBinding(throwOnChange,this._expr_77,currVal_77)) {
      this.renderer.setElementProperty(this._el_49,'disabled',currVal_77);
      this._expr_77 = currVal_77;
    }
  }
  destroyInternal():void {
    this._FormControlName_29_7.ngOnDestroy();
    this._FormControlName_39_7.ngOnDestroy();
    this._FormGroupDirective_6_3.ngOnDestroy();
  }
  handleEvent_6(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._FormGroupDirective_6_3.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_29(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_29_3.handleEvent(eventName,$event) && result);
    if ((eventName == 'keypress')) {
      const pd_sub_0:any = ((<any>this.context.inputKeyPress($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_39(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_39_3.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_49(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.renameReqNode()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}