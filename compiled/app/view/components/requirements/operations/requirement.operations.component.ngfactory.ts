/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../../../app/view/components/requirements/operations/requirement.operations.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '../../../../../../app/view/components/requirements/operations/requirement_create.component';
import * as import10 from './requirement_create.component.ngfactory';
import * as import11 from '@angular/core/src/linker/view_container';
import * as import12 from '../../../../../../app/actions/requirements.action';
import * as import13 from '@angular/router/src/router_state';
import * as import14 from '../../../../../../app/view/components/requirements/operations/requirement_delete.component';
import * as import15 from './requirement_delete.component.ngfactory';
import * as import16 from '../../../../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import17 from '../../../../../../app/view/components/requirements/operations/requirement_export.component';
import * as import18 from './requirement_export.component.ngfactory';
import * as import19 from '@angular/core/src/linker/template_ref';
import * as import20 from '@angular/common/src/directives/ng_if';
export class Wrapper_ReqOperationComponent {
  /*private*/ _eventHandler:Function;
  context:import0.ReqOperationComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  /*private*/ _expr_10:any;
  /*private*/ _expr_11:any;
  /*private*/ _expr_12:any;
  /*private*/ _expr_13:any;
  constructor() {
    this._changed = false;
    this.context = new import0.ReqOperationComponent();
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
    this._expr_6 = import1.UNINITIALIZED;
    this._expr_7 = import1.UNINITIALIZED;
    this._expr_8 = import1.UNINITIALIZED;
    this._expr_9 = import1.UNINITIALIZED;
    this._expr_10 = import1.UNINITIALIZED;
    this._expr_11 = import1.UNINITIALIZED;
    this._expr_12 = import1.UNINITIALIZED;
    this._expr_13 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  check_releaseId(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.releaseId = currValue;
      this._expr_0 = currValue;
    }
  }
  check_isMenuShown(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.isMenuShown = currValue;
      this._expr_1 = currValue;
    }
  }
  check_treeType(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.treeType = currValue;
      this._expr_2 = currValue;
    }
  }
  check_reqCatalogTreeId(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.reqCatalogTreeId = currValue;
      this._expr_3 = currValue;
    }
  }
  check_reqIDs(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.reqIDs = currValue;
      this._expr_4 = currValue;
    }
  }
  check_reqOpeartionConstants(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_5,currValue))) {
      this._changed = true;
      this.context.reqOpeartionConstants = currValue;
      this._expr_5 = currValue;
    }
  }
  check_isSearchView(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_6,currValue))) {
      this._changed = true;
      this.context.isSearchView = currValue;
      this._expr_6 = currValue;
    }
  }
  check_isDeAllocate(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_7,currValue))) {
      this._changed = true;
      this.context.isDeAllocate = currValue;
      this._expr_7 = currValue;
    }
  }
  check_isGlobal(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_8,currValue))) {
      this._changed = true;
      this.context.isGlobal = currValue;
      this._expr_8 = currValue;
    }
  }
  check_isImported(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_9,currValue))) {
      this._changed = true;
      this.context.isImported = currValue;
      this._expr_9 = currValue;
    }
  }
  check_projectId(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_10,currValue))) {
      this._changed = true;
      this.context.projectId = currValue;
      this._expr_10 = currValue;
    }
  }
  check_searchText(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_11,currValue))) {
      this._changed = true;
      this.context.searchText = currValue;
      this._expr_11 = currValue;
    }
  }
  check_isAdvancedSearch(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_12,currValue))) {
      this._changed = true;
      this.context.isAdvancedSearch = currValue;
      this._expr_12 = currValue;
    }
  }
  check_inRelease(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_13,currValue))) {
      this._changed = true;
      this.context.inRelease = currValue;
      this._expr_13 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_ReqOperationComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_ReqOperationComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.ReqOperationComponent>;
  _ReqOperationComponent_0_3:Wrapper_ReqOperationComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ReqOperationComponent_Host0,renderType_ReqOperationComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'zui-req-operations',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_ReqOperationComponent0(this.viewUtils,this,0,this._el_0);
    this._ReqOperationComponent_0_3 = new Wrapper_ReqOperationComponent();
    this.compView_0.create(this._ReqOperationComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._ReqOperationComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.ReqOperationComponent) && (0 === requestNodeIndex))) { return this._ReqOperationComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._ReqOperationComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const ReqOperationComponentNgFactory:import8.ComponentFactory<import0.ReqOperationComponent> = new import8.ComponentFactory<import0.ReqOperationComponent>('zui-req-operations',View_ReqOperationComponent_Host0,import0.ReqOperationComponent);
const styles_ReqOperationComponent:any[] = ([] as any[]);
class View_ReqOperationComponent1 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import9.RequirementCreateComponent>;
  _RequirementCreateComponent_0_3:import10.Wrapper_RequirementCreateComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import11.ViewContainer) {
    super(View_ReqOperationComponent1,renderType_ReqOperationComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'zee-create-dialog-requirement',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_0 = new import10.View_RequirementCreateComponent0(this.viewUtils,this,0,this._el_0);
    this._RequirementCreateComponent_0_3 = new import10.Wrapper_RequirementCreateComponent(this.parentView.parentView.injectorGet(import12.RequirementsAction,this.parentView.parentIndex),this.parentView.parentView.injectorGet(import13.ActivatedRoute,this.parentView.parentIndex));
    this.compView_0.create(this._RequirementCreateComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import9.RequirementCreateComponent) && (0 === requestNodeIndex))) { return this._RequirementCreateComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.parentView.context.reqOpeartionConstants.create;
    this._RequirementCreateComponent_0_3.check_fieldOptions(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:boolean = !this.parentView.context.isMenuShown;
    this._RequirementCreateComponent_0_3.check_isDisabled(currVal_0_0_1,throwOnChange,false);
    const currVal_0_0_2:any = this.parentView.context.reqCatalogTreeId;
    this._RequirementCreateComponent_0_3.check_reqCatalogTreeId(currVal_0_0_2,throwOnChange,false);
    const currVal_0_0_3:any = this.parentView.context.reqIDs;
    this._RequirementCreateComponent_0_3.check_reqIDs(currVal_0_0_3,throwOnChange,false);
    const currVal_0_0_4:any = this.parentView.context.isGlobal;
    this._RequirementCreateComponent_0_3.check_isGlobal(currVal_0_0_4,throwOnChange,false);
    const currVal_0_0_5:any = this.parentView.context.isImported;
    this._RequirementCreateComponent_0_3.check_isImported(currVal_0_0_5,throwOnChange,false);
    const currVal_0_0_6:any = 'ADD / SELECT node to create requirements';
    this._RequirementCreateComponent_0_3.check_tooltip(currVal_0_0_6,throwOnChange,false);
    this._RequirementCreateComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_ReqOperationComponent2 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import11.ViewContainer) {
    super(View_ReqOperationComponent2,renderType_ReqOperationComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'button',new import3.InlineArray8(6,'class','zui-btn zui-btn-tertiary','id','zui-modal-trigger-import-requirements','type','button'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'Import',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),[disposable_0]);
    return (null as any);
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.context.openImportModal()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
class View_ReqOperationComponent3 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import9.RequirementCreateComponent>;
  _RequirementCreateComponent_0_3:import10.Wrapper_RequirementCreateComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import11.ViewContainer) {
    super(View_ReqOperationComponent3,renderType_ReqOperationComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'zee-create-dialog-requirement',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_0 = new import10.View_RequirementCreateComponent0(this.viewUtils,this,0,this._el_0);
    this._RequirementCreateComponent_0_3 = new import10.Wrapper_RequirementCreateComponent(this.parentView.parentView.injectorGet(import12.RequirementsAction,this.parentView.parentIndex),this.parentView.parentView.injectorGet(import13.ActivatedRoute,this.parentView.parentIndex));
    this.compView_0.create(this._RequirementCreateComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import9.RequirementCreateComponent) && (0 === requestNodeIndex))) { return this._RequirementCreateComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.parentView.context.reqOpeartionConstants.clone;
    this._RequirementCreateComponent_0_3.check_fieldOptions(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:boolean = !this.parentView.context.isMenuShown;
    this._RequirementCreateComponent_0_3.check_isDisabled(currVal_0_0_1,throwOnChange,false);
    const currVal_0_0_2:any = this.parentView.context.reqCatalogTreeId;
    this._RequirementCreateComponent_0_3.check_reqCatalogTreeId(currVal_0_0_2,throwOnChange,false);
    const currVal_0_0_3:any = this.parentView.context.reqIDs;
    this._RequirementCreateComponent_0_3.check_reqIDs(currVal_0_0_3,throwOnChange,false);
    const currVal_0_0_4:any = this.parentView.context.isGlobal;
    this._RequirementCreateComponent_0_3.check_isGlobal(currVal_0_0_4,throwOnChange,false);
    const currVal_0_0_5:any = this.parentView.context.isImported;
    this._RequirementCreateComponent_0_3.check_isImported(currVal_0_0_5,throwOnChange,false);
    const currVal_0_0_6:any = this.parentView.context.projectId;
    this._RequirementCreateComponent_0_3.check_projectId(currVal_0_0_6,throwOnChange,false);
    this._RequirementCreateComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_ReqOperationComponent4 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import14.RequirementDeleteComponent>;
  _RequirementDeleteComponent_0_3:import15.Wrapper_RequirementDeleteComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import11.ViewContainer) {
    super(View_ReqOperationComponent4,renderType_ReqOperationComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'zee-delete-dialog-requirement',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_0 = new import15.View_RequirementDeleteComponent0(this.viewUtils,this,0,this._el_0);
    this._RequirementDeleteComponent_0_3 = new import15.Wrapper_RequirementDeleteComponent(this.parentView.parentView.injectorGet(import12.RequirementsAction,this.parentView.parentIndex),this.parentView.parentView.injectorGet(import13.ActivatedRoute,this.parentView.parentIndex));
    this.compView_0.create(this._RequirementDeleteComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import14.RequirementDeleteComponent) && (0 === requestNodeIndex))) { return this._RequirementDeleteComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.parentView.context.isDeAllocate;
    this._RequirementDeleteComponent_0_3.check_isDeAllocate(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = this.parentView.context.reqOpeartionConstants.delete;
    this._RequirementDeleteComponent_0_3.check_fieldOptions(currVal_0_0_1,throwOnChange,false);
    const currVal_0_0_2:boolean = !this.parentView.context.isMenuShown;
    this._RequirementDeleteComponent_0_3.check_isDisabled(currVal_0_0_2,throwOnChange,false);
    const currVal_0_0_3:any = this.parentView.context.reqCatalogTreeId;
    this._RequirementDeleteComponent_0_3.check_reqCatalogTreeId(currVal_0_0_3,throwOnChange,false);
    const currVal_0_0_4:any = this.parentView.context.reqIDs;
    this._RequirementDeleteComponent_0_3.check_reqIDs(currVal_0_0_4,throwOnChange,false);
    this._RequirementDeleteComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._RequirementDeleteComponent_0_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_ReqOperationComponent5 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import9.RequirementCreateComponent>;
  _RequirementCreateComponent_0_3:import10.Wrapper_RequirementCreateComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import11.ViewContainer) {
    super(View_ReqOperationComponent5,renderType_ReqOperationComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'zee-create-dialog-requirement',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_0 = new import10.View_RequirementCreateComponent0(this.viewUtils,this,0,this._el_0);
    this._RequirementCreateComponent_0_3 = new import10.Wrapper_RequirementCreateComponent(this.parentView.parentView.injectorGet(import12.RequirementsAction,this.parentView.parentIndex),this.parentView.parentView.injectorGet(import13.ActivatedRoute,this.parentView.parentIndex));
    this.compView_0.create(this._RequirementCreateComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import9.RequirementCreateComponent) && (0 === requestNodeIndex))) { return this._RequirementCreateComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.parentView.context.reqOpeartionConstants.allocate;
    this._RequirementCreateComponent_0_3.check_fieldOptions(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:boolean = !this.parentView.context.isGlobal;
    this._RequirementCreateComponent_0_3.check_isDisabled(currVal_0_0_1,throwOnChange,false);
    const currVal_0_0_2:any = this.parentView.context.reqIDs;
    this._RequirementCreateComponent_0_3.check_reqIDs(currVal_0_0_2,throwOnChange,false);
    const currVal_0_0_3:any = this.parentView.context.isImported;
    this._RequirementCreateComponent_0_3.check_isImported(currVal_0_0_3,throwOnChange,false);
    this._RequirementCreateComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
var renderType_ReqOperationComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,styles_ReqOperationComponent,{});
export class View_ReqOperationComponent0 extends import2.AppView<import0.ReqOperationComponent> {
  _el_0:any;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _vc_2:import11.ViewContainer;
  _TemplateRef_2_5:any;
  _NgIf_2_6:import16.Wrapper_NgIf;
  _text_3:any;
  _anchor_4:any;
  /*private*/ _vc_4:import11.ViewContainer;
  _TemplateRef_4_5:any;
  _NgIf_4_6:import16.Wrapper_NgIf;
  _text_5:any;
  _anchor_6:any;
  /*private*/ _vc_6:import11.ViewContainer;
  _TemplateRef_6_5:any;
  _NgIf_6_6:import16.Wrapper_NgIf;
  _text_7:any;
  _anchor_8:any;
  /*private*/ _vc_8:import11.ViewContainer;
  _TemplateRef_8_5:any;
  _NgIf_8_6:import16.Wrapper_NgIf;
  _text_9:any;
  _anchor_10:any;
  /*private*/ _vc_10:import11.ViewContainer;
  _TemplateRef_10_5:any;
  _NgIf_10_6:import16.Wrapper_NgIf;
  _text_11:any;
  _el_12:any;
  compView_12:import2.AppView<import17.RequirementExportComponent>;
  _RequirementExportComponent_12_3:import18.Wrapper_RequirementExportComponent;
  _text_13:any;
  _text_14:any;
  /*private*/ _expr_32:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ReqOperationComponent0,renderType_ReqOperationComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
    this._expr_32 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_2 = new import11.ViewContainer(2,0,this,this._anchor_2);
    this._TemplateRef_2_5 = new import19.TemplateRef_(this,2,this._anchor_2);
    this._NgIf_2_6 = new import16.Wrapper_NgIf(this._vc_2.vcRef,this._TemplateRef_2_5);
    this._text_3 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._anchor_4 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_4 = new import11.ViewContainer(4,0,this,this._anchor_4);
    this._TemplateRef_4_5 = new import19.TemplateRef_(this,4,this._anchor_4);
    this._NgIf_4_6 = new import16.Wrapper_NgIf(this._vc_4.vcRef,this._TemplateRef_4_5);
    this._text_5 = this.renderer.createText(this._el_0,'\n\n    ',(null as any));
    this._anchor_6 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_6 = new import11.ViewContainer(6,0,this,this._anchor_6);
    this._TemplateRef_6_5 = new import19.TemplateRef_(this,6,this._anchor_6);
    this._NgIf_6_6 = new import16.Wrapper_NgIf(this._vc_6.vcRef,this._TemplateRef_6_5);
    this._text_7 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._anchor_8 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_8 = new import11.ViewContainer(8,0,this,this._anchor_8);
    this._TemplateRef_8_5 = new import19.TemplateRef_(this,8,this._anchor_8);
    this._NgIf_8_6 = new import16.Wrapper_NgIf(this._vc_8.vcRef,this._TemplateRef_8_5);
    this._text_9 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._anchor_10 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_10 = new import11.ViewContainer(10,0,this,this._anchor_10);
    this._TemplateRef_10_5 = new import19.TemplateRef_(this,10,this._anchor_10);
    this._NgIf_10_6 = new import16.Wrapper_NgIf(this._vc_10.vcRef,this._TemplateRef_10_5);
    this._text_11 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_12 = import3.createRenderElement(this.renderer,this._el_0,'zee-export-dialog-requirement',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_12 = new import18.View_RequirementExportComponent0(this.viewUtils,this,12,this._el_12);
    this._RequirementExportComponent_12_3 = new import18.Wrapper_RequirementExportComponent();
    this.compView_12.create(this._RequirementExportComponent_12_3.context);
    this._text_13 = this.renderer.createText(this._el_0,'\n',(null as any));
    this._text_14 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._anchor_2,
      this._text_3,
      this._anchor_4,
      this._text_5,
      this._anchor_6,
      this._text_7,
      this._anchor_8,
      this._text_9,
      this._anchor_10,
      this._text_11,
      this._el_12,
      this._text_13,
      this._text_14
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import19.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import20.NgIf) && (2 === requestNodeIndex))) { return this._NgIf_2_6.context; }
    if (((token === import19.TemplateRef) && (4 === requestNodeIndex))) { return this._TemplateRef_4_5; }
    if (((token === import20.NgIf) && (4 === requestNodeIndex))) { return this._NgIf_4_6.context; }
    if (((token === import19.TemplateRef) && (6 === requestNodeIndex))) { return this._TemplateRef_6_5; }
    if (((token === import20.NgIf) && (6 === requestNodeIndex))) { return this._NgIf_6_6.context; }
    if (((token === import19.TemplateRef) && (8 === requestNodeIndex))) { return this._TemplateRef_8_5; }
    if (((token === import20.NgIf) && (8 === requestNodeIndex))) { return this._NgIf_8_6.context; }
    if (((token === import19.TemplateRef) && (10 === requestNodeIndex))) { return this._TemplateRef_10_5; }
    if (((token === import20.NgIf) && (10 === requestNodeIndex))) { return this._NgIf_10_6.context; }
    if (((token === import17.RequirementExportComponent) && (12 === requestNodeIndex))) { return this._RequirementExportComponent_12_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:boolean = !this.context.isSearchView;
    this._NgIf_2_6.check_ngIf(currVal_2_0_0,throwOnChange,false);
    this._NgIf_2_6.ngDoCheck(this,this._anchor_2,throwOnChange);
    const currVal_4_0_0:boolean = !this.context.isSearchView;
    this._NgIf_4_6.check_ngIf(currVal_4_0_0,throwOnChange,false);
    this._NgIf_4_6.ngDoCheck(this,this._anchor_4,throwOnChange);
    const currVal_6_0_0:boolean = !this.context.isSearchView;
    this._NgIf_6_6.check_ngIf(currVal_6_0_0,throwOnChange,false);
    this._NgIf_6_6.ngDoCheck(this,this._anchor_6,throwOnChange);
    const currVal_8_0_0:boolean = !this.context.isSearchView;
    this._NgIf_8_6.check_ngIf(currVal_8_0_0,throwOnChange,false);
    this._NgIf_8_6.ngDoCheck(this,this._anchor_8,throwOnChange);
    const currVal_10_0_0:boolean = !this.context.isSearchView;
    this._NgIf_10_6.check_ngIf(currVal_10_0_0,throwOnChange,false);
    this._NgIf_10_6.ngDoCheck(this,this._anchor_10,throwOnChange);
    const currVal_12_0_0:any = this.context.reqOpeartionConstants.export;
    this._RequirementExportComponent_12_3.check_fieldOptions(currVal_12_0_0,throwOnChange,false);
    const currVal_12_0_1:any = this.context.reqIDs;
    this._RequirementExportComponent_12_3.check_reqIDs(currVal_12_0_1,throwOnChange,false);
    const currVal_12_0_2:any = this.context.reqCatalogTreeId;
    this._RequirementExportComponent_12_3.check_reqCatalogTreeId(currVal_12_0_2,throwOnChange,false);
    const currVal_12_0_3:boolean = (!this.context.isMenuShown || (this.context.treeType == 'import'));
    this._RequirementExportComponent_12_3.check_isDisabled(currVal_12_0_3,throwOnChange,false);
    const currVal_12_0_4:any = this.context.releaseId;
    this._RequirementExportComponent_12_3.check_releaseId(currVal_12_0_4,throwOnChange,false);
    const currVal_12_0_5:any = this.context.inRelease;
    this._RequirementExportComponent_12_3.check_inRelease(currVal_12_0_5,throwOnChange,false);
    const currVal_12_0_6:any = this.context.isSearchView;
    this._RequirementExportComponent_12_3.check_isSearchView(currVal_12_0_6,throwOnChange,false);
    const currVal_12_0_7:any = this.context.isGlobal;
    this._RequirementExportComponent_12_3.check_isGlobal(currVal_12_0_7,throwOnChange,false);
    const currVal_12_0_8:any = this.context.projectId;
    this._RequirementExportComponent_12_3.check_projectId(currVal_12_0_8,throwOnChange,false);
    const currVal_12_0_9:any = this.context.isAdvancedSearch;
    this._RequirementExportComponent_12_3.check_isAdvancedSearch(currVal_12_0_9,throwOnChange,false);
    const currVal_12_0_10:any = this.context.searchText;
    this._RequirementExportComponent_12_3.check_searchText(currVal_12_0_10,throwOnChange,false);
    this._RequirementExportComponent_12_3.ngDoCheck(this,this._el_12,throwOnChange);
    this._vc_2.detectChangesInNestedViews(throwOnChange);
    this._vc_4.detectChangesInNestedViews(throwOnChange);
    this._vc_6.detectChangesInNestedViews(throwOnChange);
    this._vc_8.detectChangesInNestedViews(throwOnChange);
    this._vc_10.detectChangesInNestedViews(throwOnChange);
    const currVal_32:any = 'zee-primary-buttons';
    if (import3.checkBinding(throwOnChange,this._expr_32,currVal_32)) {
      this.renderer.setElementProperty(this._el_0,'className',currVal_32);
      this._expr_32 = currVal_32;
    }
    this.compView_12.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._RequirementExportComponent_12_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this._vc_2.destroyNestedViews();
    this._vc_4.destroyNestedViews();
    this._vc_6.destroyNestedViews();
    this._vc_8.destroyNestedViews();
    this._vc_10.destroyNestedViews();
    this.compView_12.destroy();
    this._RequirementExportComponent_12_3.ngOnDestroy();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 2)) { return new View_ReqOperationComponent1(this.viewUtils,this,2,this._anchor_2,this._vc_2); }
    if ((nodeIndex == 4)) { return new View_ReqOperationComponent2(this.viewUtils,this,4,this._anchor_4,this._vc_4); }
    if ((nodeIndex == 6)) { return new View_ReqOperationComponent3(this.viewUtils,this,6,this._anchor_6,this._vc_6); }
    if ((nodeIndex == 8)) { return new View_ReqOperationComponent4(this.viewUtils,this,8,this._anchor_8,this._vc_8); }
    if ((nodeIndex == 10)) { return new View_ReqOperationComponent5(this.viewUtils,this,10,this._anchor_10,this._vc_10); }
    return (null as any);
  }
}