/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../../../app/view/components/tce/operations/tce_bulk_edit.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '../../../../../../app/actions/testcaseExecution.action';
import * as import10 from '../../../../../../app/view/components/common/select/select.component';
import * as import11 from '../../common/select/select.component.ngfactory';
import * as import12 from '@angular/core/src/linker/element_ref';
export class Wrapper_TceBulkEditComponent {
  /*private*/ _eventHandler:Function;
  context:import0.TceBulkEditComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import0.TceBulkEditComponent(p0);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  check_typeOfBulkExecution(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.typeOfBulkExecution = currValue;
      this._expr_0 = currValue;
    }
  }
  check_tctIds(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.tctIds = currValue;
      this._expr_1 = currValue;
    }
  }
  check_tceGridRows(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.tceGridRows = currValue;
      this._expr_2 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_TceBulkEditComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_TceBulkEditComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.TceBulkEditComponent>;
  _TceBulkEditComponent_0_3:Wrapper_TceBulkEditComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TceBulkEditComponent_Host0,renderType_TceBulkEditComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'tce-bulk-edit',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_TceBulkEditComponent0(this.viewUtils,this,0,this._el_0);
    this._TceBulkEditComponent_0_3 = new Wrapper_TceBulkEditComponent(this.injectorGet(import9.TestcaseExecutionAction,this.parentIndex));
    this.compView_0.create(this._TceBulkEditComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._TceBulkEditComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.TceBulkEditComponent) && (0 === requestNodeIndex))) { return this._TceBulkEditComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._TceBulkEditComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const TceBulkEditComponentNgFactory:import8.ComponentFactory<import0.TceBulkEditComponent> = new import8.ComponentFactory<import0.TceBulkEditComponent>('tce-bulk-edit',View_TceBulkEditComponent_Host0,import0.TceBulkEditComponent);
const styles_TceBulkEditComponent:any[] = ([] as any[]);
var renderType_TceBulkEditComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,styles_TceBulkEditComponent,{});
export class View_TceBulkEditComponent0 extends import2.AppView<import0.TceBulkEditComponent> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _el_6:any;
  _text_7:any;
  _el_8:any;
  _text_9:any;
  _el_10:any;
  _text_11:any;
  _el_12:any;
  _text_13:any;
  _el_14:any;
  _text_15:any;
  _text_16:any;
  _el_17:any;
  _text_18:any;
  _el_19:any;
  compView_19:import2.AppView<import10.SelectComponent>;
  _SelectComponent_19_3:import11.Wrapper_SelectComponent;
  _text_20:any;
  _text_21:any;
  _text_22:any;
  _text_23:any;
  _text_24:any;
  _text_25:any;
  _text_26:any;
  _text_27:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TceBulkEditComponent0,renderType_TceBulkEditComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','row'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','col-md-12'),(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'\n        ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_2,'div',new import3.InlineArray2(2,'class','zee-testcase-details-wrapper'),(null as any));
    this._text_5 = this.renderer.createText(this._el_4,'\n            ',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_4,'div',new import3.InlineArray2(2,'class','subform bulk-edit-form clearfix'),(null as any));
    this._text_7 = this.renderer.createText(this._el_6,'\n                ',(null as any));
    this._el_8 = import3.createRenderElement(this.renderer,this._el_6,'div',new import3.InlineArray2(2,'class','row'),(null as any));
    this._text_9 = this.renderer.createText(this._el_8,'\n                    ',(null as any));
    this._el_10 = import3.createRenderElement(this.renderer,this._el_8,'div',new import3.InlineArray2(2,'class','col-md-6'),(null as any));
    this._text_11 = this.renderer.createText(this._el_10,'\n                        ',(null as any));
    this._el_12 = import3.createRenderElement(this.renderer,this._el_10,'div',new import3.InlineArray2(2,'class','clearfix'),(null as any));
    this._text_13 = this.renderer.createText(this._el_12,'\n                            ',(null as any));
    this._el_14 = import3.createRenderElement(this.renderer,this._el_12,'label',new import3.InlineArray2(2,'for','release-priority'),(null as any));
    this._text_15 = this.renderer.createText(this._el_14,'Change multiple :',(null as any));
    this._text_16 = this.renderer.createText(this._el_12,'\n                            ',(null as any));
    this._el_17 = import3.createRenderElement(this.renderer,this._el_12,'div',new import3.InlineArray2(2,'class','zui-ng-select'),(null as any));
    this._text_18 = this.renderer.createText(this._el_17,'\n                                ',(null as any));
    this._el_19 = import3.createRenderElement(this.renderer,this._el_17,'zee-select',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_19 = new import11.View_SelectComponent0(this.viewUtils,this,19,this._el_19);
    this._SelectComponent_19_3 = new import11.Wrapper_SelectComponent(new import12.ElementRef(this._el_19));
    this.compView_19.create(this._SelectComponent_19_3.context);
    this._text_20 = this.renderer.createText(this._el_17,'\n                            ',(null as any));
    this._text_21 = this.renderer.createText(this._el_12,'\n                        ',(null as any));
    this._text_22 = this.renderer.createText(this._el_10,'\n                    ',(null as any));
    this._text_23 = this.renderer.createText(this._el_8,'\n                ',(null as any));
    this._text_24 = this.renderer.createText(this._el_6,'\n            ',(null as any));
    this._text_25 = this.renderer.createText(this._el_4,'\n        ',(null as any));
    this._text_26 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._text_27 = this.renderer.createText(this._el_0,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_19,new import3.InlineArray2(2,'onSelect',(null as any)),this.eventHandler(this.handleEvent_19));
    this._SelectComponent_19_3.subscribe(this,this.eventHandler(this.handleEvent_19),true,false,false,false);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._el_12,
      this._text_13,
      this._el_14,
      this._text_15,
      this._text_16,
      this._el_17,
      this._text_18,
      this._el_19,
      this._text_20,
      this._text_21,
      this._text_22,
      this._text_23,
      this._text_24,
      this._text_25,
      this._text_26,
      this._text_27
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import10.SelectComponent) && (19 === requestNodeIndex))) { return this._SelectComponent_19_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_19_0_0:any = true;
    this._SelectComponent_19_3.check_allowClear(currVal_19_0_0,throwOnChange,false);
    const currVal_19_0_1:any = this.context.statuses;
    this._SelectComponent_19_3.check_items(currVal_19_0_1,throwOnChange,false);
    const currVal_19_0_2:any = 'Select Status...';
    this._SelectComponent_19_3.check_placeholder(currVal_19_0_2,throwOnChange,false);
    this._SelectComponent_19_3.ngDoCheck(this,this._el_19,throwOnChange);
    this.compView_19.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._SelectComponent_19_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_19.destroy();
    this._SelectComponent_19_3.ngOnDestroy();
  }
  handleEvent_19(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onSelect')) {
      const pd_sub_0:any = ((<any>this.context.updateStatus($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}