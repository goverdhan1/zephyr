/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../../../app/view/components/common/change_password/change_password.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '@angular/forms/src/form_builder';
import * as import10 from '@angular/core/src/linker/view_container';
import * as import11 from '../../../../../node_modules/@angular/forms/src/directives/reactive_directives/form_group_directive.ngfactory';
import * as import12 from '../../../../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import13 from '../../../../../../app/view/components/common/modal/modal.component';
import * as import14 from '../modal/modal.component.ngfactory';
import * as import15 from '../../../../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import16 from '../../../../../node_modules/@angular/forms/src/directives/reactive_directives/form_control_directive.ngfactory';
import * as import17 from '../../../../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import18 from '../../../../../node_modules/@angular/common/src/directives/ng_class.ngfactory';
import * as import19 from '@angular/core/src/linker/element_ref';
import * as import20 from '@angular/core/src/linker/template_ref';
import * as import21 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import22 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import23 from '@angular/forms/src/directives/default_value_accessor';
import * as import24 from '@angular/forms/src/directives/control_value_accessor';
import * as import25 from '@angular/forms/src/directives/reactive_directives/form_control_directive';
import * as import26 from '@angular/forms/src/directives/ng_control';
import * as import27 from '@angular/forms/src/directives/ng_control_status';
import * as import28 from '@angular/common/src/directives/ng_if';
import * as import29 from '@angular/common/src/directives/ng_class';
import * as import30 from '@angular/forms/src/directives/reactive_directives/form_group_directive';
import * as import31 from '@angular/forms/src/directives/control_container';
export class Wrapper_ChangePasswordComponent {
  /*private*/ _eventHandler:Function;
  context:import0.ChangePasswordComponent;
  /*private*/ _changed:boolean;
  /*private*/ _changes:{[key: string]:any};
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  subscription0:any;
  constructor(p0:any) {
    this._changed = false;
    this._changes = {};
    this.context = new import0.ChangePasswordComponent(p0);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_changePasswordObject(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.changePasswordObject = currValue;
      this._changes['changePasswordObject'] = new import1.SimpleChange(this._expr_0,currValue);
      this._expr_0 = currValue;
    }
  }
  check_passwordValidationFunction(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.passwordValidationFunction = currValue;
      this._changes['passwordValidationFunction'] = new import1.SimpleChange(this._expr_1,currValue);
      this._expr_1 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if (changed) {
      this.context.ngOnChanges(this._changes);
      this._changes = {};
    } }
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.changePasswordUpdate.subscribe(_eventHandler.bind(view,'changePasswordUpdate'))); }
  }
}
var renderType_ChangePasswordComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_ChangePasswordComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.ChangePasswordComponent>;
  _ChangePasswordComponent_0_3:Wrapper_ChangePasswordComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ChangePasswordComponent_Host0,renderType_ChangePasswordComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'change-password',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_ChangePasswordComponent0(this.viewUtils,this,0,this._el_0);
    this._ChangePasswordComponent_0_3 = new Wrapper_ChangePasswordComponent(this.injectorGet(import9.FormBuilder,this.parentIndex));
    this.compView_0.create(this._ChangePasswordComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._ChangePasswordComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.ChangePasswordComponent) && (0 === requestNodeIndex))) { return this._ChangePasswordComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._ChangePasswordComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._ChangePasswordComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const ChangePasswordComponentNgFactory:import8.ComponentFactory<import0.ChangePasswordComponent> = new import8.ComponentFactory<import0.ChangePasswordComponent>('change-password',View_ChangePasswordComponent_Host0,import0.ChangePasswordComponent);
const styles_ChangePasswordComponent:any[] = ([] as any[]);
class View_ChangePasswordComponent1 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import10.ViewContainer) {
    super(View_ChangePasswordComponent1,renderType_ChangePasswordComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'span',new import3.InlineArray2(2,'class','show-password-image cursor-pointer'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,' ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),[disposable_0]);
    return (null as any);
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.context.showpasswordClicked('NEW_PASSWORD')) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
class View_ChangePasswordComponent2 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import10.ViewContainer) {
    super(View_ChangePasswordComponent2,renderType_ChangePasswordComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'span',new import3.InlineArray2(2,'class','hide-password-image  cursor-pointer'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,' ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),[disposable_0]);
    return (null as any);
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.context.hidePasswordClicked('NEW_PASSWORD')) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
class View_ChangePasswordComponent3 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import10.ViewContainer) {
    super(View_ChangePasswordComponent3,renderType_ChangePasswordComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'span',new import3.InlineArray2(2,'class','show-password-image cursor-pointer'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,' ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),[disposable_0]);
    return (null as any);
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.context.showpasswordClicked('CONFIRM_PASSWORD')) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
class View_ChangePasswordComponent4 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import10.ViewContainer) {
    super(View_ChangePasswordComponent4,renderType_ChangePasswordComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'span',new import3.InlineArray2(2,'class','hide-password-image  cursor-pointer'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,' ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),[disposable_0]);
    return (null as any);
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.context.hidePasswordClicked('CONFIRM_PASSWORD')) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
var renderType_ChangePasswordComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,styles_ChangePasswordComponent,{});
export class View_ChangePasswordComponent0 extends import2.AppView<import0.ChangePasswordComponent> {
  _el_0:any;
  _FormGroupDirective_0_3:import11.Wrapper_FormGroupDirective;
  _ControlContainer_0_4:any;
  _NgControlStatusGroup_0_5:import12.Wrapper_NgControlStatusGroup;
  _text_1:any;
  _el_2:any;
  compView_2:import2.AppView<import13.ModalComponent>;
  _ModalComponent_2_3:import14.Wrapper_ModalComponent;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _el_6:any;
  _text_7:any;
  _el_8:any;
  _text_9:any;
  _text_10:any;
  _el_11:any;
  _text_12:any;
  _el_13:any;
  _text_14:any;
  _el_15:any;
  _text_16:any;
  _text_17:any;
  _text_18:any;
  _el_19:any;
  _DefaultValueAccessor_19_3:import15.Wrapper_DefaultValueAccessor;
  _NG_VALUE_ACCESSOR_19_4:any[];
  _FormControlDirective_19_5:import16.Wrapper_FormControlDirective;
  _NgControl_19_6:any;
  _NgControlStatus_19_7:import12.Wrapper_NgControlStatus;
  _text_20:any;
  _anchor_21:any;
  /*private*/ _vc_21:import10.ViewContainer;
  _TemplateRef_21_5:any;
  _NgIf_21_6:import17.Wrapper_NgIf;
  _text_22:any;
  _anchor_23:any;
  /*private*/ _vc_23:import10.ViewContainer;
  _TemplateRef_23_5:any;
  _NgIf_23_6:import17.Wrapper_NgIf;
  _text_24:any;
  _text_25:any;
  _el_26:any;
  _text_27:any;
  _el_28:any;
  _text_29:any;
  _el_30:any;
  _text_31:any;
  _text_32:any;
  _text_33:any;
  _el_34:any;
  _NgClass_34_3:import18.Wrapper_NgClass;
  _DefaultValueAccessor_34_4:import15.Wrapper_DefaultValueAccessor;
  _NG_VALUE_ACCESSOR_34_5:any[];
  _FormControlDirective_34_6:import16.Wrapper_FormControlDirective;
  _NgControl_34_7:any;
  _NgControlStatus_34_8:import12.Wrapper_NgControlStatus;
  _text_35:any;
  _anchor_36:any;
  /*private*/ _vc_36:import10.ViewContainer;
  _TemplateRef_36_5:any;
  _NgIf_36_6:import17.Wrapper_NgIf;
  _text_37:any;
  _anchor_38:any;
  /*private*/ _vc_38:import10.ViewContainer;
  _TemplateRef_38_5:any;
  _NgIf_38_6:import17.Wrapper_NgIf;
  _text_39:any;
  _text_40:any;
  _text_41:any;
  _el_42:any;
  _text_43:any;
  _text_44:any;
  _text_45:any;
  _text_46:any;
  _el_47:any;
  _text_48:any;
  _text_49:any;
  _el_50:any;
  _text_51:any;
  _text_52:any;
  _el_53:any;
  _text_54:any;
  _text_55:any;
  _text_56:any;
  _text_57:any;
  _text_58:any;
  /*private*/ _expr_87:any;
  /*private*/ _expr_88:any;
  /*private*/ _expr_89:any;
  _map_90:any;
  /*private*/ _expr_91:any;
  /*private*/ _expr_92:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ChangePasswordComponent0,renderType_ChangePasswordComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
    this._expr_87 = import1.UNINITIALIZED;
    this._expr_88 = import1.UNINITIALIZED;
    this._expr_89 = import1.UNINITIALIZED;
    this._map_90 = import3.pureProxy1((p0:any):{[key: string]:any} => {
      return {error: p0};
    });
    this._expr_91 = import1.UNINITIALIZED;
    this._expr_92 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'form',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._FormGroupDirective_0_3 = new import11.Wrapper_FormGroupDirective((null as any),(null as any));
    this._ControlContainer_0_4 = this._FormGroupDirective_0_3.context;
    this._NgControlStatusGroup_0_5 = new import12.Wrapper_NgControlStatusGroup(this._ControlContainer_0_4);
    this._text_1 = this.renderer.createText(this._el_0,'\n	',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'zui-modal',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_2 = new import14.View_ModalComponent0(this.viewUtils,this,2,this._el_2);
    this._ModalComponent_2_3 = new import14.Wrapper_ModalComponent(new import19.ElementRef(this._el_2),this.compView_2.ref);
    this._text_3 = this.renderer.createText((null as any),'\n	    ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,(null as any),'zui-modal-body',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_5 = this.renderer.createText(this._el_4,'\n		 	',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_4,'div',new import3.InlineArray2(2,'class','subform'),(null as any));
    this._text_7 = this.renderer.createText(this._el_6,'\n		     	',(null as any));
    this._el_8 = import3.createRenderElement(this.renderer,this._el_6,'p',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_9 = this.renderer.createText(this._el_8,'',(null as any));
    this._text_10 = this.renderer.createText(this._el_6,'\n			    ',(null as any));
    this._el_11 = import3.createRenderElement(this.renderer,this._el_6,'div',new import3.InlineArray2(2,'class','clearfix new-password'),(null as any));
    this._text_12 = this.renderer.createText(this._el_11,'\n 	        		',(null as any));
    this._el_13 = import3.createRenderElement(this.renderer,this._el_11,'label',new import3.InlineArray2(2,'for','new-password'),(null as any));
    this._text_14 = this.renderer.createText(this._el_13,'New Password',(null as any));
    this._el_15 = import3.createRenderElement(this.renderer,this._el_13,'span',new import3.InlineArray2(2,'class','input-required'),(null as any));
    this._text_16 = this.renderer.createText(this._el_15,'*',(null as any));
    this._text_17 = this.renderer.createText(this._el_13,':',(null as any));
    this._text_18 = this.renderer.createText(this._el_11,'\n	        		',(null as any));
    this._el_19 = import3.createRenderElement(this.renderer,this._el_11,'input',new import3.InlineArray8(6,'class','form-control','id','new-password','placeholder','New Password'),(null as any));
    this._DefaultValueAccessor_19_3 = new import15.Wrapper_DefaultValueAccessor(this.renderer,new import19.ElementRef(this._el_19));
    this._NG_VALUE_ACCESSOR_19_4 = [this._DefaultValueAccessor_19_3.context];
    this._FormControlDirective_19_5 = new import16.Wrapper_FormControlDirective((null as any),(null as any),this._NG_VALUE_ACCESSOR_19_4);
    this._NgControl_19_6 = this._FormControlDirective_19_5.context;
    this._NgControlStatus_19_7 = new import12.Wrapper_NgControlStatus(this._NgControl_19_6);
    this._text_20 = this.renderer.createText(this._el_11,'\n 	        		',(null as any));
    this._anchor_21 = this.renderer.createTemplateAnchor(this._el_11,(null as any));
    this._vc_21 = new import10.ViewContainer(21,11,this,this._anchor_21);
    this._TemplateRef_21_5 = new import20.TemplateRef_(this,21,this._anchor_21);
    this._NgIf_21_6 = new import17.Wrapper_NgIf(this._vc_21.vcRef,this._TemplateRef_21_5);
    this._text_22 = this.renderer.createText(this._el_11,'\n 	        		',(null as any));
    this._anchor_23 = this.renderer.createTemplateAnchor(this._el_11,(null as any));
    this._vc_23 = new import10.ViewContainer(23,11,this,this._anchor_23);
    this._TemplateRef_23_5 = new import20.TemplateRef_(this,23,this._anchor_23);
    this._NgIf_23_6 = new import17.Wrapper_NgIf(this._vc_23.vcRef,this._TemplateRef_23_5);
    this._text_24 = this.renderer.createText(this._el_11,'\n 	        	',(null as any));
    this._text_25 = this.renderer.createText(this._el_6,'\n 	        	',(null as any));
    this._el_26 = import3.createRenderElement(this.renderer,this._el_6,'div',new import3.InlineArray2(2,'class','clearfix confirm-password'),(null as any));
    this._text_27 = this.renderer.createText(this._el_26,'\n 	        		',(null as any));
    this._el_28 = import3.createRenderElement(this.renderer,this._el_26,'label',new import3.InlineArray2(2,'for','confirm-password'),(null as any));
    this._text_29 = this.renderer.createText(this._el_28,'Retype Password',(null as any));
    this._el_30 = import3.createRenderElement(this.renderer,this._el_28,'span',new import3.InlineArray2(2,'class','input-required'),(null as any));
    this._text_31 = this.renderer.createText(this._el_30,'*',(null as any));
    this._text_32 = this.renderer.createText(this._el_28,':',(null as any));
    this._text_33 = this.renderer.createText(this._el_26,'\n	        		',(null as any));
    this._el_34 = import3.createRenderElement(this.renderer,this._el_26,'input',new import3.InlineArray8(6,'class','form-control','id','confirm-password','placeholder','Confirm Password'),(null as any));
    this._NgClass_34_3 = new import18.Wrapper_NgClass(this.parentView.injectorGet(import21.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import22.KeyValueDiffers,this.parentIndex),new import19.ElementRef(this._el_34),this.renderer);
    this._DefaultValueAccessor_34_4 = new import15.Wrapper_DefaultValueAccessor(this.renderer,new import19.ElementRef(this._el_34));
    this._NG_VALUE_ACCESSOR_34_5 = [this._DefaultValueAccessor_34_4.context];
    this._FormControlDirective_34_6 = new import16.Wrapper_FormControlDirective((null as any),(null as any),this._NG_VALUE_ACCESSOR_34_5);
    this._NgControl_34_7 = this._FormControlDirective_34_6.context;
    this._NgControlStatus_34_8 = new import12.Wrapper_NgControlStatus(this._NgControl_34_7);
    this._text_35 = this.renderer.createText(this._el_26,'\n 	        		',(null as any));
    this._anchor_36 = this.renderer.createTemplateAnchor(this._el_26,(null as any));
    this._vc_36 = new import10.ViewContainer(36,26,this,this._anchor_36);
    this._TemplateRef_36_5 = new import20.TemplateRef_(this,36,this._anchor_36);
    this._NgIf_36_6 = new import17.Wrapper_NgIf(this._vc_36.vcRef,this._TemplateRef_36_5);
    this._text_37 = this.renderer.createText(this._el_26,'\n 	        		',(null as any));
    this._anchor_38 = this.renderer.createTemplateAnchor(this._el_26,(null as any));
    this._vc_38 = new import10.ViewContainer(38,26,this,this._anchor_38);
    this._TemplateRef_38_5 = new import20.TemplateRef_(this,38,this._anchor_38);
    this._NgIf_38_6 = new import17.Wrapper_NgIf(this._vc_38.vcRef,this._TemplateRef_38_5);
    this._text_39 = this.renderer.createText(this._el_26,'\n 	        	',(null as any));
    this._text_40 = this.renderer.createText(this._el_6,'\n	        	',(null as any));
    this._text_41 = this.renderer.createText(this._el_6,'\n	        	',(null as any));
    this._el_42 = import3.createRenderElement(this.renderer,this._el_6,'p',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_43 = this.renderer.createText(this._el_42,'',(null as any));
    this._text_44 = this.renderer.createText(this._el_6,'\n 	        ',(null as any));
    this._text_45 = this.renderer.createText(this._el_4,'\n	    ',(null as any));
    this._text_46 = this.renderer.createText((null as any),'\n	    ',(null as any));
    this._el_47 = import3.createRenderElement(this.renderer,(null as any),'zui-modal-footer',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_48 = this.renderer.createText(this._el_47,'\n		    ',(null as any));
    this._text_49 = this.renderer.createText(this._el_47,'\n		    ',(null as any));
    this._el_50 = import3.createRenderElement(this.renderer,this._el_47,'button',new import3.InlineArray8(6,'class','zui-btn zui-btn-sec','data-dismiss','modal','type','button'),(null as any));
    this._text_51 = this.renderer.createText(this._el_50,'Cancel',(null as any));
    this._text_52 = this.renderer.createText(this._el_47,'\n		    ',(null as any));
    this._el_53 = import3.createRenderElement(this.renderer,this._el_47,'button',new import3.InlineArray4(4,'class','zui-btn zui-btn-primary','type','submit'),(null as any));
    this._text_54 = this.renderer.createText(this._el_53,'Update',(null as any));
    this._text_55 = this.renderer.createText(this._el_47,'\n			\n	    ',(null as any));
    this._text_56 = this.renderer.createText((null as any),'\n	',(null as any));
    this.compView_2.create(this._ModalComponent_2_3.context);
    this._text_57 = this.renderer.createText(this._el_0,'\n',(null as any));
    this._text_58 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray8(6,'ngSubmit',(null as any),'submit',(null as any),'reset',(null as any)),this.eventHandler(this.handleEvent_0));
    this._FormGroupDirective_0_3.subscribe(this,this.eventHandler(this.handleEvent_0),true);
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_19,new import3.InlineArray8(6,'ngModelChange',(null as any),'input',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_19));
    this._FormControlDirective_19_5.subscribe(this,this.eventHandler(this.handleEvent_19),true);
    var disposable_2:Function = import3.subscribeToRenderElement(this,this._el_34,new import3.InlineArray8(6,'ngModelChange',(null as any),'input',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_34));
    this._FormControlDirective_34_6.subscribe(this,this.eventHandler(this.handleEvent_34),true);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._text_10,
      this._el_11,
      this._text_12,
      this._el_13,
      this._text_14,
      this._el_15,
      this._text_16,
      this._text_17,
      this._text_18,
      this._el_19,
      this._text_20,
      this._anchor_21,
      this._text_22,
      this._anchor_23,
      this._text_24,
      this._text_25,
      this._el_26,
      this._text_27,
      this._el_28,
      this._text_29,
      this._el_30,
      this._text_31,
      this._text_32,
      this._text_33,
      this._el_34,
      this._text_35,
      this._anchor_36,
      this._text_37,
      this._anchor_38,
      this._text_39,
      this._text_40,
      this._text_41,
      this._el_42,
      this._text_43,
      this._text_44,
      this._text_45,
      this._text_46,
      this._el_47,
      this._text_48,
      this._text_49,
      this._el_50,
      this._text_51,
      this._text_52,
      this._el_53,
      this._text_54,
      this._text_55,
      this._text_56,
      this._text_57,
      this._text_58
    ]
    ),[
      disposable_0,
      disposable_1,
      disposable_2
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import23.DefaultValueAccessor) && (19 === requestNodeIndex))) { return this._DefaultValueAccessor_19_3.context; }
    if (((token === import24.NG_VALUE_ACCESSOR) && (19 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_19_4; }
    if (((token === import25.FormControlDirective) && (19 === requestNodeIndex))) { return this._FormControlDirective_19_5.context; }
    if (((token === import26.NgControl) && (19 === requestNodeIndex))) { return this._NgControl_19_6; }
    if (((token === import27.NgControlStatus) && (19 === requestNodeIndex))) { return this._NgControlStatus_19_7.context; }
    if (((token === import20.TemplateRef) && (21 === requestNodeIndex))) { return this._TemplateRef_21_5; }
    if (((token === import28.NgIf) && (21 === requestNodeIndex))) { return this._NgIf_21_6.context; }
    if (((token === import20.TemplateRef) && (23 === requestNodeIndex))) { return this._TemplateRef_23_5; }
    if (((token === import28.NgIf) && (23 === requestNodeIndex))) { return this._NgIf_23_6.context; }
    if (((token === import29.NgClass) && (34 === requestNodeIndex))) { return this._NgClass_34_3.context; }
    if (((token === import23.DefaultValueAccessor) && (34 === requestNodeIndex))) { return this._DefaultValueAccessor_34_4.context; }
    if (((token === import24.NG_VALUE_ACCESSOR) && (34 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_34_5; }
    if (((token === import25.FormControlDirective) && (34 === requestNodeIndex))) { return this._FormControlDirective_34_6.context; }
    if (((token === import26.NgControl) && (34 === requestNodeIndex))) { return this._NgControl_34_7; }
    if (((token === import27.NgControlStatus) && (34 === requestNodeIndex))) { return this._NgControlStatus_34_8.context; }
    if (((token === import20.TemplateRef) && (36 === requestNodeIndex))) { return this._TemplateRef_36_5; }
    if (((token === import28.NgIf) && (36 === requestNodeIndex))) { return this._NgIf_36_6.context; }
    if (((token === import20.TemplateRef) && (38 === requestNodeIndex))) { return this._TemplateRef_38_5; }
    if (((token === import28.NgIf) && (38 === requestNodeIndex))) { return this._NgIf_38_6.context; }
    if (((token === import13.ModalComponent) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 56)))) { return this._ModalComponent_2_3.context; }
    if (((token === import30.FormGroupDirective) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 57)))) { return this._FormGroupDirective_0_3.context; }
    if (((token === import31.ControlContainer) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 57)))) { return this._ControlContainer_0_4; }
    if (((token === import27.NgControlStatusGroup) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 57)))) { return this._NgControlStatusGroup_0_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.context.changePasswordForm;
    this._FormGroupDirective_0_3.check_form(currVal_0_0_0,throwOnChange,false);
    this._FormGroupDirective_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._NgControlStatusGroup_0_5.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_2_0_0:any = 'Change Password';
    this._ModalComponent_2_3.check_title(currVal_2_0_0,throwOnChange,false);
    const currVal_2_0_1:any = 'change-password-modal';
    this._ModalComponent_2_3.check_modalId(currVal_2_0_1,throwOnChange,false);
    const currVal_2_0_2:any = 'small';
    this._ModalComponent_2_3.check_modalSize(currVal_2_0_2,throwOnChange,false);
    this._ModalComponent_2_3.ngDoCheck(this,this._el_2,throwOnChange);
    this._DefaultValueAccessor_19_3.ngDoCheck(this,this._el_19,throwOnChange);
    const currVal_19_1_0:any = this.context.changePasswordForm.controls['newPassword'];
    this._FormControlDirective_19_5.check_form(currVal_19_1_0,throwOnChange,false);
    const currVal_19_1_1:any = this.context.changeNewPassword;
    this._FormControlDirective_19_5.check_model(currVal_19_1_1,throwOnChange,false);
    this._FormControlDirective_19_5.ngDoCheck(this,this._el_19,throwOnChange);
    this._NgControlStatus_19_7.ngDoCheck(this,this._el_19,throwOnChange);
    const currVal_21_0_0:any = this.context.newPassword.showPasswordIcon;
    this._NgIf_21_6.check_ngIf(currVal_21_0_0,throwOnChange,false);
    this._NgIf_21_6.ngDoCheck(this,this._anchor_21,throwOnChange);
    const currVal_23_0_0:boolean = !this.context.newPassword.showPasswordIcon;
    this._NgIf_23_6.check_ngIf(currVal_23_0_0,throwOnChange,false);
    this._NgIf_23_6.ngDoCheck(this,this._anchor_23,throwOnChange);
    const currVal_34_0_0:any = 'form-control';
    this._NgClass_34_3.check_klass(currVal_34_0_0,throwOnChange,false);
    const currVal_34_0_1:any = this._map_90((this.context.changeConfirmPassword !== this.context.changeNewPassword));
    this._NgClass_34_3.check_ngClass(currVal_34_0_1,throwOnChange,false);
    this._NgClass_34_3.ngDoCheck(this,this._el_34,throwOnChange);
    this._DefaultValueAccessor_34_4.ngDoCheck(this,this._el_34,throwOnChange);
    const currVal_34_2_0:any = this.context.changePasswordForm.controls['confirmPassword'];
    this._FormControlDirective_34_6.check_form(currVal_34_2_0,throwOnChange,false);
    const currVal_34_2_1:any = this.context.changeConfirmPassword;
    this._FormControlDirective_34_6.check_model(currVal_34_2_1,throwOnChange,false);
    this._FormControlDirective_34_6.ngDoCheck(this,this._el_34,throwOnChange);
    this._NgControlStatus_34_8.ngDoCheck(this,this._el_34,throwOnChange);
    const currVal_36_0_0:any = this.context.confirmPassword.showPasswordIcon;
    this._NgIf_36_6.check_ngIf(currVal_36_0_0,throwOnChange,false);
    this._NgIf_36_6.ngDoCheck(this,this._anchor_36,throwOnChange);
    const currVal_38_0_0:boolean = !this.context.confirmPassword.showPasswordIcon;
    this._NgIf_38_6.check_ngIf(currVal_38_0_0,throwOnChange,false);
    this._NgIf_38_6.ngDoCheck(this,this._anchor_38,throwOnChange);
    this._vc_21.detectChangesInNestedViews(throwOnChange);
    this._vc_23.detectChangesInNestedViews(throwOnChange);
    this._vc_36.detectChangesInNestedViews(throwOnChange);
    this._vc_38.detectChangesInNestedViews(throwOnChange);
    this._NgControlStatusGroup_0_5.checkHost(this,this,this._el_0,throwOnChange);
    const currVal_87:any = import3.inlineInterpolate(1,'  ',this.context.changePasswordObject.upperText,' ');
    if (import3.checkBinding(throwOnChange,this._expr_87,currVal_87)) {
      this.renderer.setText(this._text_9,currVal_87);
      this._expr_87 = currVal_87;
    }
    const currVal_88:any = this.context.newPassword.type;
    if (import3.checkBinding(throwOnChange,this._expr_88,currVal_88)) {
      this.renderer.setElementAttribute(this._el_19,'type',((currVal_88 == null)? (null as any): currVal_88.toString()));
      this._expr_88 = currVal_88;
    }
    this._NgControlStatus_19_7.checkHost(this,this,this._el_19,throwOnChange);
    const currVal_89:any = this.context.confirmPassword.type;
    if (import3.checkBinding(throwOnChange,this._expr_89,currVal_89)) {
      this.renderer.setElementAttribute(this._el_34,'type',((currVal_89 == null)? (null as any): currVal_89.toString()));
      this._expr_89 = currVal_89;
    }
    this._NgControlStatus_34_8.checkHost(this,this,this._el_34,throwOnChange);
    const currVal_91:any = import3.inlineInterpolate(1,'',this.context.changePasswordObject.description,'');
    if (import3.checkBinding(throwOnChange,this._expr_91,currVal_91)) {
      this.renderer.setText(this._text_43,currVal_91);
      this._expr_91 = currVal_91;
    }
    const currVal_92:boolean = (!this.context.changePasswordForm.valid || (this.context.changeConfirmPassword !== this.context.changeNewPassword));
    if (import3.checkBinding(throwOnChange,this._expr_92,currVal_92)) {
      this.renderer.setElementProperty(this._el_53,'disabled',currVal_92);
      this._expr_92 = currVal_92;
    }
    this.compView_2.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._ModalComponent_2_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this._vc_21.destroyNestedViews();
    this._vc_23.destroyNestedViews();
    this._vc_36.destroyNestedViews();
    this._vc_38.destroyNestedViews();
    this.compView_2.destroy();
    this._FormControlDirective_19_5.ngOnDestroy();
    this._FormControlDirective_34_6.ngOnDestroy();
    this._ModalComponent_2_3.ngOnDestroy();
    this._FormGroupDirective_0_3.ngOnDestroy();
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 2) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 2) && (ngContentIndex == 1))) { cb(this._el_4,ctx); }
    if (((nodeIndex == 2) && (ngContentIndex == 2))) { cb(this._el_47,ctx); }
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 21)) { return new View_ChangePasswordComponent1(this.viewUtils,this,21,this._anchor_21,this._vc_21); }
    if ((nodeIndex == 23)) { return new View_ChangePasswordComponent2(this.viewUtils,this,23,this._anchor_23,this._vc_23); }
    if ((nodeIndex == 36)) { return new View_ChangePasswordComponent3(this.viewUtils,this,36,this._anchor_36,this._vc_36); }
    if ((nodeIndex == 38)) { return new View_ChangePasswordComponent4(this.viewUtils,this,38,this._anchor_38,this._vc_38); }
    return (null as any);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._FormGroupDirective_0_3.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngSubmit')) {
      const pd_sub_0:any = ((<any>this.context.changePasswordFormSubmit(this.context.changePasswordForm.value)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_19(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_19_3.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>(this.context.changeNewPassword = $event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_34(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_34_4.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>(this.context.changeConfirmPassword = $event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}