/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../../../app/view/components/common/custom_context_menu/custom_context_menu.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '@angular/core/src/linker/view_container';
import * as import10 from '@angular/core/src/linker/query_list';
import * as import11 from '../inline_dialog/inline_dialog.directive.ngfactory';
import * as import12 from '../../../../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import13 from '@angular/core/src/linker/element_ref';
import * as import14 from '@angular/core/src/linker/template_ref';
import * as import15 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import16 from '@angular/common/src/directives/ng_for';
import * as import17 from '../../../../../../app/view/components/common/inline_dialog/inline_dialog.directive';
export class Wrapper_CustomContextMenuComponent {
  /*private*/ _eventHandler:Function;
  context:import0.CustomContextMenuComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  subscription0:any;
  constructor() {
    this._changed = false;
    this.context = new import0.CustomContextMenuComponent();
    this._expr_0 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_contextMenuItems(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.contextMenuItems = currValue;
      this._expr_0 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.onClickContextAction.subscribe(_eventHandler.bind(view,'onClickContextAction'))); }
  }
}
var renderType_CustomContextMenuComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_CustomContextMenuComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.CustomContextMenuComponent>;
  _CustomContextMenuComponent_0_3:Wrapper_CustomContextMenuComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CustomContextMenuComponent_Host0,renderType_CustomContextMenuComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'custom-context-menu',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_CustomContextMenuComponent0(this.viewUtils,this,0,this._el_0);
    this._CustomContextMenuComponent_0_3 = new Wrapper_CustomContextMenuComponent();
    this.compView_0.create(this._CustomContextMenuComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._CustomContextMenuComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.CustomContextMenuComponent) && (0 === requestNodeIndex))) { return this._CustomContextMenuComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._CustomContextMenuComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._CustomContextMenuComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const CustomContextMenuComponentNgFactory:import8.ComponentFactory<import0.CustomContextMenuComponent> = new import8.ComponentFactory<import0.CustomContextMenuComponent>('custom-context-menu',View_CustomContextMenuComponent_Host0,import0.CustomContextMenuComponent);
const styles_CustomContextMenuComponent:any[] = ([] as any[]);
class View_CustomContextMenuComponent1 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _text_4:any;
  /*private*/ _expr_5:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import9.ViewContainer) {
    super(View_CustomContextMenuComponent1,renderType_CustomContextMenuComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_5 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'li',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n                        ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'a',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'',(null as any));
    this._text_4 = this.renderer.createText(this._el_0,'\n                    ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_2,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_2));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._text_4
    ]
    ),[disposable_0]);
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_5:any = import3.inlineInterpolate(1,'',this.context.$implicit.label,'');
    if (import3.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      this.renderer.setText(this._text_3,currVal_5);
      this._expr_5 = currVal_5;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.context.contextAction($event,this.context.$implicit.label)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
var renderType_CustomContextMenuComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,styles_CustomContextMenuComponent,{});
export class View_CustomContextMenuComponent0 extends import2.AppView<import0.CustomContextMenuComponent> {
  _viewQuery_InlineDialogDirective_0:import10.QueryList<any>;
  _text_0:any;
  _el_1:any;
  _InlineDialogDirective_1_3:import11.Wrapper_InlineDialogDirective;
  _text_2:any;
  _el_3:any;
  _text_4:any;
  _el_5:any;
  _text_6:any;
  _text_7:any;
  _el_8:any;
  _text_9:any;
  _el_10:any;
  _text_11:any;
  _el_12:any;
  _text_13:any;
  _anchor_14:any;
  /*private*/ _vc_14:import9.ViewContainer;
  _TemplateRef_14_5:any;
  _NgFor_14_6:import12.Wrapper_NgFor;
  _text_15:any;
  _text_16:any;
  _text_17:any;
  _text_18:any;
  _text_19:any;
  /*private*/ _expr_25:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CustomContextMenuComponent0,renderType_CustomContextMenuComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
    this._expr_25 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_InlineDialogDirective_0 = new import10.QueryList<any>();
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray4(4,'class','zui-inline-dialog','zui-inline-dialog',''),(null as any));
    this._InlineDialogDirective_1_3 = new import11.Wrapper_InlineDialogDirective(new import13.ElementRef(this._el_1));
    this._text_2 = this.renderer.createText(this._el_1,'\n        ',(null as any));
    this._el_3 = import3.createRenderElement(this.renderer,this._el_1,'a',new import3.InlineArray2(2,'class','inline-dialog-trigger'),(null as any));
    this._text_4 = this.renderer.createText(this._el_3,'\n            ',(null as any));
    this._el_5 = import3.createRenderElement(this.renderer,this._el_3,'span',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_6 = this.renderer.createText(this._el_3,'\n        ',(null as any));
    this._text_7 = this.renderer.createText(this._el_1,'\n        ',(null as any));
    this._el_8 = import3.createRenderElement(this.renderer,this._el_1,'div',new import3.InlineArray2(2,'class','inline-dialog-body'),(null as any));
    this._text_9 = this.renderer.createText(this._el_8,'\n            ',(null as any));
    this._el_10 = import3.createRenderElement(this.renderer,this._el_8,'div',new import3.InlineArray2(2,'class','inline-dialog-content contextmenu'),(null as any));
    this._text_11 = this.renderer.createText(this._el_10,'\n                ',(null as any));
    this._el_12 = import3.createRenderElement(this.renderer,this._el_10,'ul',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_13 = this.renderer.createText(this._el_12,'\n                    ',(null as any));
    this._anchor_14 = this.renderer.createTemplateAnchor(this._el_12,(null as any));
    this._vc_14 = new import9.ViewContainer(14,12,this,this._anchor_14);
    this._TemplateRef_14_5 = new import14.TemplateRef_(this,14,this._anchor_14);
    this._NgFor_14_6 = new import12.Wrapper_NgFor(this._vc_14.vcRef,this._TemplateRef_14_5,this.parentView.injectorGet(import15.IterableDiffers,this.parentIndex),this.ref);
    this._text_15 = this.renderer.createText(this._el_12,'\n                ',(null as any));
    this._text_16 = this.renderer.createText(this._el_10,'\n            ',(null as any));
    this._text_17 = this.renderer.createText(this._el_8,'\n        ',(null as any));
    this._text_18 = this.renderer.createText(this._el_1,'\n    ',(null as any));
    this._text_19 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_8,new import3.InlineArray2(2,'contextmenu',(null as any)),this.eventHandler(this.handleEvent_8));
    this._viewQuery_InlineDialogDirective_0.reset([this._InlineDialogDirective_1_3.context]);
    this.context.idd = this._viewQuery_InlineDialogDirective_0.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._el_12,
      this._text_13,
      this._anchor_14,
      this._text_15,
      this._text_16,
      this._text_17,
      this._text_18,
      this._text_19
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import14.TemplateRef) && (14 === requestNodeIndex))) { return this._TemplateRef_14_5; }
    if (((token === import16.NgFor) && (14 === requestNodeIndex))) { return this._NgFor_14_6.context; }
    if (((token === import17.InlineDialogDirective) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 18)))) { return this._InlineDialogDirective_1_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._InlineDialogDirective_1_3.ngDoCheck(this,this._el_1,throwOnChange);
    const currVal_14_0_0:any = this.context.items;
    this._NgFor_14_6.check_ngForOf(currVal_14_0_0,throwOnChange,false);
    this._NgFor_14_6.ngDoCheck(this,this._anchor_14,throwOnChange);
    this._vc_14.detectChangesInNestedViews(throwOnChange);
    const currVal_25:any = 'fa fa-gear';
    if (import3.checkBinding(throwOnChange,this._expr_25,currVal_25)) {
      this.renderer.setElementProperty(this._el_5,'className',currVal_25);
      this._expr_25 = currVal_25;
    }
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._InlineDialogDirective_1_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this._vc_14.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 14)) { return new View_CustomContextMenuComponent1(this.viewUtils,this,14,this._anchor_14,this._vc_14); }
    return (null as any);
  }
  handleEvent_8(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'contextmenu')) {
      const pd_sub_0:any = ((<any>this.context.preventDefaultMenu($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}