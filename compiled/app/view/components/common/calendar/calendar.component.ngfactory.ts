/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../../../app/view/components/common/calendar/calendar.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '@angular/core/src/linker/element_ref';
import * as import10 from '../../../../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import11 from '../../../../../node_modules/@angular/forms/src/directives/reactive_directives/form_control_directive.ngfactory';
import * as import12 from '../../../../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import13 from '@angular/core/src/linker/view_container';
import * as import14 from '@angular/forms/src/directives/default_value_accessor';
import * as import15 from '@angular/forms/src/directives/control_value_accessor';
import * as import16 from '@angular/forms/src/directives/reactive_directives/form_control_directive';
import * as import17 from '@angular/forms/src/directives/ng_control';
import * as import18 from '@angular/forms/src/directives/ng_control_status';
import * as import19 from 'ng2-bootstrap/datepicker/datepicker.component';
import * as import20 from '../../../../../node_modules/ng2-bootstrap/datepicker/datepicker.component.ngfactory';
import * as import21 from '../../../../../node_modules/@angular/forms/src/directives/ng_model.ngfactory';
import * as import22 from '../position_calendar/position_calendar.directive.ngfactory';
import * as import23 from 'ng2-bootstrap/datepicker/datepicker.config';
import * as import24 from '@angular/forms/src/directives/ng_model';
import * as import25 from '../../../../../../app/view/components/common/position_calendar/position_calendar.directive';
import * as import26 from '../../../../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import27 from '@angular/common/src/pipes/date_pipe';
import * as import28 from '@angular/core/src/linker/template_ref';
import * as import29 from '@angular/core/src/i18n/tokens';
import * as import30 from '@angular/common/src/directives/ng_if';
export class Wrapper_CalendarComponent {
  /*private*/ _eventHandler:Function;
  context:import0.CalendarComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  subscription0:any;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import0.CalendarComponent(p0);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_formkey(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.formkey = currValue;
      this._expr_0 = currValue;
    }
  }
  check_model(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.model = currValue;
      this._expr_1 = currValue;
    }
  }
  check_minDate(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.minDate = currValue;
      this._expr_2 = currValue;
    }
  }
  check_maxDate(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.maxDate = currValue;
      this._expr_3 = currValue;
    }
  }
  check_dateDisabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.dateDisabled = currValue;
      this._expr_4 = currValue;
    }
  }
  check_group(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_5,currValue))) {
      this._changed = true;
      this.context.group = currValue;
      this._expr_5 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.validateDate.subscribe(_eventHandler.bind(view,'validateDate'))); }
  }
}
var renderType_CalendarComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_CalendarComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.CalendarComponent>;
  _CalendarComponent_0_3:Wrapper_CalendarComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CalendarComponent_Host0,renderType_CalendarComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'calendar',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_CalendarComponent0(this.viewUtils,this,0,this._el_0);
    this._CalendarComponent_0_3 = new Wrapper_CalendarComponent(new import9.ElementRef(this._el_0));
    this.compView_0.create(this._CalendarComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._CalendarComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.CalendarComponent) && (0 === requestNodeIndex))) { return this._CalendarComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._CalendarComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._CalendarComponent_0_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._CalendarComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const CalendarComponentNgFactory:import8.ComponentFactory<import0.CalendarComponent> = new import8.ComponentFactory<import0.CalendarComponent>('calendar',View_CalendarComponent_Host0,import0.CalendarComponent);
const styles_CalendarComponent:any[] = ([] as any[]);
class View_CalendarComponent1 extends import2.AppView<any> {
  _el_0:any;
  _DefaultValueAccessor_0_3:import10.Wrapper_DefaultValueAccessor;
  _NG_VALUE_ACCESSOR_0_4:any[];
  _FormControlDirective_0_5:import11.Wrapper_FormControlDirective;
  _NgControl_0_6:any;
  _NgControlStatus_0_7:import12.Wrapper_NgControlStatus;
  _pipe_date_0_0:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import13.ViewContainer) {
    super(View_CalendarComponent1,renderType_CalendarComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'input',new import3.InlineArray8(6,'class','form-control date-control','placeholder','mm/dd/yyyy','type','text'),(null as any));
    this._DefaultValueAccessor_0_3 = new import10.Wrapper_DefaultValueAccessor(this.renderer,new import9.ElementRef(this._el_0));
    this._NG_VALUE_ACCESSOR_0_4 = [this._DefaultValueAccessor_0_3.context];
    this._FormControlDirective_0_5 = new import11.Wrapper_FormControlDirective((null as any),(null as any),this._NG_VALUE_ACCESSOR_0_4);
    this._NgControl_0_6 = this._FormControlDirective_0_5.context;
    this._NgControlStatus_0_7 = new import12.Wrapper_NgControlStatus(this._NgControl_0_6);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray4(4,'input',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_0));
    this._pipe_date_0_0 = import3.pureProxy2((<View_CalendarComponent0>this.parentView)._pipe_date_0.transform.bind((<View_CalendarComponent0>this.parentView)._pipe_date_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import14.DefaultValueAccessor) && (0 === requestNodeIndex))) { return this._DefaultValueAccessor_0_3.context; }
    if (((token === import15.NG_VALUE_ACCESSOR) && (0 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_0_4; }
    if (((token === import16.FormControlDirective) && (0 === requestNodeIndex))) { return this._FormControlDirective_0_5.context; }
    if (((token === import17.NgControl) && (0 === requestNodeIndex))) { return this._NgControl_0_6; }
    if (((token === import18.NgControlStatus) && (0 === requestNodeIndex))) { return this._NgControlStatus_0_7.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const valUnwrapper:any = new import1.ValueUnwrapper();
    this._DefaultValueAccessor_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_0_1_0:any = this.parentView.context.formkey;
    this._FormControlDirective_0_5.check_form(currVal_0_1_0,throwOnChange,false);
    valUnwrapper.reset();
    const currVal_0_1_1:any = valUnwrapper.unwrap(import3.castByValue(this._pipe_date_0_0,(<View_CalendarComponent0>this.parentView)._pipe_date_0.transform)(this.parentView.context.model,'MM/dd/yyyy'));
    this._FormControlDirective_0_5.check_model(currVal_0_1_1,throwOnChange,valUnwrapper.hasWrappedValue);
    this._FormControlDirective_0_5.ngDoCheck(this,this._el_0,throwOnChange);
    this._NgControlStatus_0_7.ngDoCheck(this,this._el_0,throwOnChange);
    this._NgControlStatus_0_7.checkHost(this,this,this._el_0,throwOnChange);
  }
  destroyInternal():void {
    this._FormControlDirective_0_5.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_0_3.handleEvent(eventName,$event) && result);
    return result;
  }
}
class View_CalendarComponent2 extends import2.AppView<any> {
  _el_0:any;
  _DefaultValueAccessor_0_3:import10.Wrapper_DefaultValueAccessor;
  _NG_VALUE_ACCESSOR_0_4:any[];
  _FormControlDirective_0_5:import11.Wrapper_FormControlDirective;
  _NgControl_0_6:any;
  _NgControlStatus_0_7:import12.Wrapper_NgControlStatus;
  _pipe_date_0_1:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import13.ViewContainer) {
    super(View_CalendarComponent2,renderType_CalendarComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'input',new import3.InlineArray8(6,'class','form-control date-control','placeholder','mm/dd/yyyy','type','text'),(null as any));
    this._DefaultValueAccessor_0_3 = new import10.Wrapper_DefaultValueAccessor(this.renderer,new import9.ElementRef(this._el_0));
    this._NG_VALUE_ACCESSOR_0_4 = [this._DefaultValueAccessor_0_3.context];
    this._FormControlDirective_0_5 = new import11.Wrapper_FormControlDirective((null as any),(null as any),this._NG_VALUE_ACCESSOR_0_4);
    this._NgControl_0_6 = this._FormControlDirective_0_5.context;
    this._NgControlStatus_0_7 = new import12.Wrapper_NgControlStatus(this._NgControl_0_6);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray4(4,'input',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_0));
    this._pipe_date_0_1 = import3.pureProxy2((<View_CalendarComponent0>this.parentView)._pipe_date_0.transform.bind((<View_CalendarComponent0>this.parentView)._pipe_date_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import14.DefaultValueAccessor) && (0 === requestNodeIndex))) { return this._DefaultValueAccessor_0_3.context; }
    if (((token === import15.NG_VALUE_ACCESSOR) && (0 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_0_4; }
    if (((token === import16.FormControlDirective) && (0 === requestNodeIndex))) { return this._FormControlDirective_0_5.context; }
    if (((token === import17.NgControl) && (0 === requestNodeIndex))) { return this._NgControl_0_6; }
    if (((token === import18.NgControlStatus) && (0 === requestNodeIndex))) { return this._NgControlStatus_0_7.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const valUnwrapper:any = new import1.ValueUnwrapper();
    this._DefaultValueAccessor_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_0_1_0:any = this.parentView.context.formkey;
    this._FormControlDirective_0_5.check_form(currVal_0_1_0,throwOnChange,false);
    valUnwrapper.reset();
    const currVal_0_1_1:any = valUnwrapper.unwrap(import3.castByValue(this._pipe_date_0_1,(<View_CalendarComponent0>this.parentView)._pipe_date_0.transform)(this.parentView.context.model,'MM/dd/yyyy'));
    this._FormControlDirective_0_5.check_model(currVal_0_1_1,throwOnChange,valUnwrapper.hasWrappedValue);
    this._FormControlDirective_0_5.ngDoCheck(this,this._el_0,throwOnChange);
    this._NgControlStatus_0_7.ngDoCheck(this,this._el_0,throwOnChange);
    this._NgControlStatus_0_7.checkHost(this,this,this._el_0,throwOnChange);
  }
  destroyInternal():void {
    this._FormControlDirective_0_5.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_0_3.handleEvent(eventName,$event) && result);
    return result;
  }
}
class View_CalendarComponent3 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _text_4:any;
  _el_5:any;
  compView_5:import2.AppView<import19.DatePickerComponent>;
  _DatePickerComponent_5_3:import20.Wrapper_DatePickerComponent;
  _NG_VALUE_ACCESSOR_5_4:any[];
  _NgModel_5_5:import21.Wrapper_NgModel;
  _NgControl_5_6:any;
  _NgControlStatus_5_7:import12.Wrapper_NgControlStatus;
  _PositionCalendarDirective_5_8:import22.Wrapper_PositionCalendarDirective;
  _text_6:any;
  _map_14:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import13.ViewContainer) {
    super(View_CalendarComponent3,renderType_CalendarComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._map_14 = import3.pureProxy1((p0:any):{[key: string]:any} => {
      return {standalone: p0};
    });
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','inline-calendar-body'),(null as any));
    this._text_3 = this.renderer.createText(this._el_2,' ',(null as any));
    this._text_4 = this.renderer.createText(this._el_0,'\n          ',(null as any));
    this._el_5 = import3.createRenderElement(this.renderer,this._el_0,'datepicker',new import3.InlineArray2(2,'zui-position-calendar',''),(null as any));
    this.compView_5 = new import20.View_DatePickerComponent0(this.viewUtils,this,5,this._el_5);
    this._DatePickerComponent_5_3 = new import20.Wrapper_DatePickerComponent(this.parentView.parentView.injectorGet(import23.DatepickerConfig,this.parentView.parentIndex));
    this._NG_VALUE_ACCESSOR_5_4 = [this._DatePickerComponent_5_3.context];
    this._NgModel_5_5 = new import21.Wrapper_NgModel((null as any),(null as any),(null as any),this._NG_VALUE_ACCESSOR_5_4);
    this._NgControl_5_6 = this._NgModel_5_5.context;
    this._NgControlStatus_5_7 = new import12.Wrapper_NgControlStatus(this._NgControl_5_6);
    this._PositionCalendarDirective_5_8 = new import22.Wrapper_PositionCalendarDirective(new import9.ElementRef(this._el_5));
    this.compView_5.create(this._DatePickerComponent_5_3.context);
    this._text_6 = this.renderer.createText(this._el_0,'\n      ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_5,new import3.InlineArray2(2,'ngModelChange',(null as any)),this.eventHandler(this.handleEvent_5));
    this._NgModel_5_5.subscribe(this,this.eventHandler(this.handleEvent_5),true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._text_4,
      this._el_5,
      this._text_6
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import19.DatePickerComponent) && (5 === requestNodeIndex))) { return this._DatePickerComponent_5_3.context; }
    if (((token === import15.NG_VALUE_ACCESSOR) && (5 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_5_4; }
    if (((token === import24.NgModel) && (5 === requestNodeIndex))) { return this._NgModel_5_5.context; }
    if (((token === import17.NgControl) && (5 === requestNodeIndex))) { return this._NgControl_5_6; }
    if (((token === import18.NgControlStatus) && (5 === requestNodeIndex))) { return this._NgControlStatus_5_7.context; }
    if (((token === import25.PositionCalendarDirective) && (5 === requestNodeIndex))) { return this._PositionCalendarDirective_5_8.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_5_0_0:any = this.parentView.context.minDate;
    this._DatePickerComponent_5_3.check_minDate(currVal_5_0_0,throwOnChange,false);
    const currVal_5_0_1:any = this.parentView.context.maxDate;
    this._DatePickerComponent_5_3.check_maxDate(currVal_5_0_1,throwOnChange,false);
    const currVal_5_0_2:any = true;
    this._DatePickerComponent_5_3.check_onlyCurrentMonth(currVal_5_0_2,throwOnChange,false);
    this._DatePickerComponent_5_3.ngDoCheck(this,this._el_5,throwOnChange);
    const currVal_5_1_0:any = this.parentView.context.model;
    this._NgModel_5_5.check_model(currVal_5_1_0,throwOnChange,false);
    const currVal_5_1_1:any = this._map_14(true);
    this._NgModel_5_5.check_options(currVal_5_1_1,throwOnChange,false);
    this._NgModel_5_5.ngDoCheck(this,this._el_5,throwOnChange);
    this._NgControlStatus_5_7.ngDoCheck(this,this._el_5,throwOnChange);
    this._PositionCalendarDirective_5_8.ngDoCheck(this,this._el_5,throwOnChange);
    this._NgControlStatus_5_7.checkHost(this,this.compView_5,this._el_5,throwOnChange);
    this.compView_5.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._PositionCalendarDirective_5_8.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_5.destroy();
    this._DatePickerComponent_5_3.ngOnDestroy();
    this._NgModel_5_5.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_5(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>(this.parentView.context.model = $event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'ngModelChange')) {
      const pd_sub_1:any = ((<any>this.parentView.context.onChange($event,this.parentView.context.model)) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
}
var renderType_CalendarComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,styles_CalendarComponent,{});
export class View_CalendarComponent0 extends import2.AppView<import0.CalendarComponent> {
  _el_0:any;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _vc_2:import13.ViewContainer;
  _TemplateRef_2_5:any;
  _NgIf_2_6:import26.Wrapper_NgIf;
  _text_3:any;
  _anchor_4:any;
  /*private*/ _vc_4:import13.ViewContainer;
  _TemplateRef_4_5:any;
  _NgIf_4_6:import26.Wrapper_NgIf;
  _text_5:any;
  _el_6:any;
  _text_7:any;
  _el_8:any;
  _text_9:any;
  _anchor_10:any;
  /*private*/ _vc_10:import13.ViewContainer;
  _TemplateRef_10_5:any;
  _NgIf_10_6:import26.Wrapper_NgIf;
  _text_11:any;
  _text_12:any;
  _text_13:any;
  _pipe_date_0:import27.DatePipe;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CalendarComponent0,renderType_CalendarComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','input-group date-group'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n  ',(null as any));
    this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_2 = new import13.ViewContainer(2,0,this,this._anchor_2);
    this._TemplateRef_2_5 = new import28.TemplateRef_(this,2,this._anchor_2);
    this._NgIf_2_6 = new import26.Wrapper_NgIf(this._vc_2.vcRef,this._TemplateRef_2_5);
    this._text_3 = this.renderer.createText(this._el_0,'\n  ',(null as any));
    this._anchor_4 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_4 = new import13.ViewContainer(4,0,this,this._anchor_4);
    this._TemplateRef_4_5 = new import28.TemplateRef_(this,4,this._anchor_4);
    this._NgIf_4_6 = new import26.Wrapper_NgIf(this._vc_4.vcRef,this._TemplateRef_4_5);
    this._text_5 = this.renderer.createText(this._el_0,'\n  ',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','input-group-addon'),(null as any));
    this._text_7 = this.renderer.createText(this._el_6,'\n      ',(null as any));
    this._el_8 = import3.createRenderElement(this.renderer,this._el_6,'i',new import3.InlineArray2(2,'class','fa fa-calendar'),(null as any));
    this._text_9 = this.renderer.createText(this._el_6,'\n      ',(null as any));
    this._anchor_10 = this.renderer.createTemplateAnchor(this._el_6,(null as any));
    this._vc_10 = new import13.ViewContainer(10,6,this,this._anchor_10);
    this._TemplateRef_10_5 = new import28.TemplateRef_(this,10,this._anchor_10);
    this._NgIf_10_6 = new import26.Wrapper_NgIf(this._vc_10.vcRef,this._TemplateRef_10_5);
    this._text_11 = this.renderer.createText(this._el_6,'\n  ',(null as any));
    this._text_12 = this.renderer.createText(this._el_0,'\n',(null as any));
    this._text_13 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    this._pipe_date_0 = new import27.DatePipe(this.parentView.injectorGet(import29.LOCALE_ID,this.parentIndex));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._anchor_2,
      this._text_3,
      this._anchor_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._anchor_10,
      this._text_11,
      this._text_12,
      this._text_13
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import28.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import30.NgIf) && (2 === requestNodeIndex))) { return this._NgIf_2_6.context; }
    if (((token === import28.TemplateRef) && (4 === requestNodeIndex))) { return this._TemplateRef_4_5; }
    if (((token === import30.NgIf) && (4 === requestNodeIndex))) { return this._NgIf_4_6.context; }
    if (((token === import28.TemplateRef) && (10 === requestNodeIndex))) { return this._TemplateRef_10_5; }
    if (((token === import30.NgIf) && (10 === requestNodeIndex))) { return this._NgIf_10_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = this.context.formkey;
    this._NgIf_2_6.check_ngIf(currVal_2_0_0,throwOnChange,false);
    this._NgIf_2_6.ngDoCheck(this,this._anchor_2,throwOnChange);
    const currVal_4_0_0:boolean = !this.context.formkey;
    this._NgIf_4_6.check_ngIf(currVal_4_0_0,throwOnChange,false);
    this._NgIf_4_6.ngDoCheck(this,this._anchor_4,throwOnChange);
    const currVal_10_0_0:any = this.context.showDatePicker;
    this._NgIf_10_6.check_ngIf(currVal_10_0_0,throwOnChange,false);
    this._NgIf_10_6.ngDoCheck(this,this._anchor_10,throwOnChange);
    this._vc_2.detectChangesInNestedViews(throwOnChange);
    this._vc_4.detectChangesInNestedViews(throwOnChange);
    this._vc_10.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_2.destroyNestedViews();
    this._vc_4.destroyNestedViews();
    this._vc_10.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 2)) { return new View_CalendarComponent1(this.viewUtils,this,2,this._anchor_2,this._vc_2); }
    if ((nodeIndex == 4)) { return new View_CalendarComponent2(this.viewUtils,this,4,this._anchor_4,this._vc_4); }
    if ((nodeIndex == 10)) { return new View_CalendarComponent3(this.viewUtils,this,10,this._anchor_10,this._vc_10); }
    return (null as any);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.toggleDatepicker($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}