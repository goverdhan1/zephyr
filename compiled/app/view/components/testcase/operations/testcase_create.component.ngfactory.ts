/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../../../app/view/components/testcase/operations/testcase_create.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '../../../../../../app/actions/testcase.action';
import * as import7 from '../../../../../../app/actions/global.action';
import * as import8 from '@angular/core/src/linker/view_type';
import * as import9 from '@angular/core/src/change_detection/constants';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from '@angular/http/src/http';
import * as import12 from '../../../../../../app/actions/tcr.action';
import * as import13 from '../../../../../../app/view/components/tcr/operations/tcr_bulk_edit.component';
import * as import14 from '../../../../../../app/utils/scripts/utils';
import * as import15 from '../../tcr/operations/tcr_bulk_edit.component.ngfactory';
import * as import16 from '@angular/core/src/linker/view_container';
import * as import17 from '@angular/forms/src/form_builder';
import * as import18 from '../../../../../../app/services/toastr.service';
import * as import19 from '../../../../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import20 from '../../../../../../app/view/components/common/modal/modal.component';
import * as import21 from '../../common/modal/modal.component.ngfactory';
import * as import22 from '@angular/core/src/linker/template_ref';
import * as import23 from '@angular/core/src/linker/element_ref';
import * as import24 from '@angular/common/src/directives/ng_if';
export class Wrapper_TestcaseCreateComponent {
  /*private*/ _eventHandler:Function;
  context:import0.TestcaseCreateComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  constructor(p0:any,p1:any,p2:any) {
    this._changed = false;
    this.context = new import0.TestcaseCreateComponent(p0,p1,p2);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
    this._expr_6 = import1.UNINITIALIZED;
    this._expr_7 = import1.UNINITIALIZED;
    this._expr_8 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  check_fieldOptions(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.fieldOptions = currValue;
      this._expr_0 = currValue;
    }
  }
  check_isDisabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.isDisabled = currValue;
      this._expr_1 = currValue;
    }
  }
  check_tcrCatalogTreeId(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.tcrCatalogTreeId = currValue;
      this._expr_2 = currValue;
    }
  }
  check_tctIds(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.tctIds = currValue;
      this._expr_3 = currValue;
    }
  }
  check_releaseId(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.releaseId = currValue;
      this._expr_4 = currValue;
    }
  }
  check_tceGridRows(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_5,currValue))) {
      this._changed = true;
      this.context.tceGridRows = currValue;
      this._expr_5 = currValue;
    }
  }
  check_testcaseIds(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_6,currValue))) {
      this._changed = true;
      this.context.testcaseIds = currValue;
      this._expr_6 = currValue;
    }
  }
  check_doDirtyCheck(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_7,currValue))) {
      this._changed = true;
      this.context.doDirtyCheck = currValue;
      this._expr_7 = currValue;
    }
  }
  check_tooltip(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_8,currValue))) {
      this._changed = true;
      this.context.tooltip = currValue;
      this._expr_8 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_TestcaseCreateComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_TestcaseCreateComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.TestcaseCreateComponent>;
  _TestcaseAction_0_3:import6.TestcaseAction;
  _GlobalAction_0_4:import7.GlobalAction;
  _TestcaseCreateComponent_0_5:Wrapper_TestcaseCreateComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TestcaseCreateComponent_Host0,renderType_TestcaseCreateComponent_Host,import8.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'zee-create-dialog',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_TestcaseCreateComponent0(this.viewUtils,this,0,this._el_0);
    this._TestcaseAction_0_3 = new import6.TestcaseAction(this.injectorGet(import11.Http,this.parentIndex));
    this._GlobalAction_0_4 = new import7.GlobalAction(this.injectorGet(import11.Http,this.parentIndex));
    this._TestcaseCreateComponent_0_5 = new Wrapper_TestcaseCreateComponent(this._TestcaseAction_0_3,this._GlobalAction_0_4,this.injectorGet(import12.TCRAction,this.parentIndex));
    this.compView_0.create(this._TestcaseCreateComponent_0_5.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import10.ComponentRef_<any>(0,this,this._el_0,this._TestcaseCreateComponent_0_5.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import6.TestcaseAction) && (0 === requestNodeIndex))) { return this._TestcaseAction_0_3; }
    if (((token === import7.GlobalAction) && (0 === requestNodeIndex))) { return this._GlobalAction_0_4; }
    if (((token === import0.TestcaseCreateComponent) && (0 === requestNodeIndex))) { return this._TestcaseCreateComponent_0_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._TestcaseCreateComponent_0_5.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._TestcaseCreateComponent_0_5.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const TestcaseCreateComponentNgFactory:import10.ComponentFactory<import0.TestcaseCreateComponent> = new import10.ComponentFactory<import0.TestcaseCreateComponent>('zee-create-dialog',View_TestcaseCreateComponent_Host0,import0.TestcaseCreateComponent);
const styles_TestcaseCreateComponent:any[] = ([] as any[]);
class View_TestcaseCreateComponent1 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import13.TcrBulkEditComponent>;
  _TCRAction_0_3:import12.TCRAction;
  _UtililtyFunctions_0_4:import14.UtililtyFunctions;
  _TcrBulkEditComponent_0_5:import15.Wrapper_TcrBulkEditComponent;
  _text_1:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import16.ViewContainer) {
    super(View_TestcaseCreateComponent1,renderType_TestcaseCreateComponent,import8.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'tcr-bulk-edit',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_0 = new import15.View_TcrBulkEditComponent0(this.viewUtils,this,0,this._el_0);
    this._TCRAction_0_3 = new import12.TCRAction(this.parentView.injectorGet(import11.Http,this.parentIndex));
    this._UtililtyFunctions_0_4 = new import14.UtililtyFunctions();
    this._TcrBulkEditComponent_0_5 = new import15.Wrapper_TcrBulkEditComponent(this.parentView.injectorGet(import17.FormBuilder,this.parentIndex),this._TCRAction_0_3,this.parentView.injectorGet(import6.TestcaseAction,this.parentIndex),this.compView_0.ref,this.parentView.injectorGet(import18.ToastrService,this.parentIndex),this._UtililtyFunctions_0_4);
    this._text_1 = this.renderer.createText((null as any),'\n',(null as any));
    this.compView_0.create(this._TcrBulkEditComponent_0_5.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.TCRAction) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._TCRAction_0_3; }
    if (((token === import14.UtililtyFunctions) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._UtililtyFunctions_0_4; }
    if (((token === import13.TcrBulkEditComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._TcrBulkEditComponent_0_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.parentView.context.testcaseIds;
    this._TcrBulkEditComponent_0_5.check_testcaseIds(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = this.parentView.context.fieldOptions;
    this._TcrBulkEditComponent_0_5.check_fieldOptions(currVal_0_0_1,throwOnChange,false);
    if (this._TcrBulkEditComponent_0_5.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
var renderType_TestcaseCreateComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,styles_TestcaseCreateComponent,{});
export class View_TestcaseCreateComponent0 extends import2.AppView<import0.TestcaseCreateComponent> {
  _el_0:any;
  _text_1:any;
  _text_2:any;
  _anchor_3:any;
  /*private*/ _vc_3:import16.ViewContainer;
  _TemplateRef_3_5:any;
  _NgIf_3_6:import19.Wrapper_NgIf;
  _text_4:any;
  _el_5:any;
  compView_5:import2.AppView<import20.ModalComponent>;
  _ModalComponent_5_3:import21.Wrapper_ModalComponent;
  _text_6:any;
  _el_7:any;
  _text_8:any;
  _el_9:any;
  _text_10:any;
  _text_11:any;
  _el_12:any;
  _text_13:any;
  _el_14:any;
  _text_15:any;
  _text_16:any;
  _el_17:any;
  _text_18:any;
  _text_19:any;
  _text_20:any;
  _text_21:any;
  /*private*/ _expr_27:any;
  /*private*/ _expr_28:any;
  /*private*/ _expr_29:any;
  /*private*/ _expr_30:any;
  /*private*/ _expr_31:any;
  /*private*/ _expr_32:any;
  /*private*/ _expr_33:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TestcaseCreateComponent0,renderType_TestcaseCreateComponent,import8.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways);
    this._expr_27 = import1.UNINITIALIZED;
    this._expr_28 = import1.UNINITIALIZED;
    this._expr_29 = import1.UNINITIALIZED;
    this._expr_30 = import1.UNINITIALIZED;
    this._expr_31 = import1.UNINITIALIZED;
    this._expr_32 = import1.UNINITIALIZED;
    this._expr_33 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'button',new import3.InlineArray4(4,'data-toggle','modal','type','button'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this._text_2 = this.renderer.createText(parentRenderNode,'\n\n',(null as any));
    this._anchor_3 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._vc_3 = new import16.ViewContainer(3,(null as any),this,this._anchor_3);
    this._TemplateRef_3_5 = new import22.TemplateRef_(this,3,this._anchor_3);
    this._NgIf_3_6 = new import19.Wrapper_NgIf(this._vc_3.vcRef,this._TemplateRef_3_5);
    this._text_4 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_5 = import3.createRenderElement(this.renderer,parentRenderNode,'zui-modal',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_5 = new import21.View_ModalComponent0(this.viewUtils,this,5,this._el_5);
    this._ModalComponent_5_3 = new import21.Wrapper_ModalComponent(new import23.ElementRef(this._el_5),this.compView_5.ref);
    this._text_6 = this.renderer.createText((null as any),'\n    ',(null as any));
    this._el_7 = import3.createRenderElement(this.renderer,(null as any),'zui-modal-body',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_8 = this.renderer.createText(this._el_7,'',(null as any));
    this._el_9 = import3.createRenderElement(this.renderer,this._el_7,'br',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_10 = this.renderer.createText(this._el_7,'Do you want to proceed ?\n    ',(null as any));
    this._text_11 = this.renderer.createText((null as any),'\n    ',(null as any));
    this._el_12 = import3.createRenderElement(this.renderer,(null as any),'zui-modal-footer',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_13 = this.renderer.createText(this._el_12,'\n        ',(null as any));
    this._el_14 = import3.createRenderElement(this.renderer,this._el_12,'button',new import3.InlineArray8(6,'class','zui-btn zui-btn-sec','data-dismiss','modal','type','button'),(null as any));
    this._text_15 = this.renderer.createText(this._el_14,'No',(null as any));
    this._text_16 = this.renderer.createText(this._el_12,'\n        ',(null as any));
    this._el_17 = import3.createRenderElement(this.renderer,this._el_12,'button',new import3.InlineArray4(4,'class','zui-btn zui-btn-primary','type','button'),(null as any));
    this._text_18 = this.renderer.createText(this._el_17,'Yes',(null as any));
    this._text_19 = this.renderer.createText(this._el_12,'\n    ',(null as any));
    this._text_20 = this.renderer.createText((null as any),'\n',(null as any));
    this.compView_5.create(this._ModalComponent_5_3.context);
    this._text_21 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_17,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_17));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._text_2,
      this._anchor_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._el_9,
      this._text_10,
      this._text_11,
      this._el_12,
      this._text_13,
      this._el_14,
      this._text_15,
      this._text_16,
      this._el_17,
      this._text_18,
      this._text_19,
      this._text_20,
      this._text_21
    ]
    ),[
      disposable_0,
      disposable_1
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import22.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_5; }
    if (((token === import24.NgIf) && (3 === requestNodeIndex))) { return this._NgIf_3_6.context; }
    if (((token === import20.ModalComponent) && ((5 <= requestNodeIndex) && (requestNodeIndex <= 20)))) { return this._ModalComponent_5_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_3_0_0:any = this.context.isBulkEdit;
    this._NgIf_3_6.check_ngIf(currVal_3_0_0,throwOnChange,false);
    this._NgIf_3_6.ngDoCheck(this,this._anchor_3,throwOnChange);
    const currVal_5_0_0:any = 'Clone Testcase ?';
    this._ModalComponent_5_3.check_title(currVal_5_0_0,throwOnChange,false);
    const currVal_5_0_1:any = 'clone-limit-modal';
    this._ModalComponent_5_3.check_modalId(currVal_5_0_1,throwOnChange,false);
    const currVal_5_0_2:any = 'small';
    this._ModalComponent_5_3.check_modalSize(currVal_5_0_2,throwOnChange,false);
    this._ModalComponent_5_3.ngDoCheck(this,this._el_5,throwOnChange);
    this._vc_3.detectChangesInNestedViews(throwOnChange);
    const currVal_27:any = 'zui-btn zui-btn-tertiary zui-operations-trigger';
    if (import3.checkBinding(throwOnChange,this._expr_27,currVal_27)) {
      this.renderer.setElementProperty(this._el_0,'className',currVal_27);
      this._expr_27 = currVal_27;
    }
    const currVal_28:any = import3.inlineInterpolate(1,'',(this.context.disableButton()? this.context.tooltip: ''),'');
    if (import3.checkBinding(throwOnChange,this._expr_28,currVal_28)) {
      this.renderer.setElementProperty(this._el_0,'title',currVal_28);
      this._expr_28 = currVal_28;
    }
    const currVal_29:any = this.context.disableButton();
    if (import3.checkBinding(throwOnChange,this._expr_29,currVal_29)) {
      this.renderer.setElementProperty(this._el_0,'disabled',currVal_29);
      this._expr_29 = currVal_29;
    }
    const currVal_30:any = import3.inlineInterpolate(1,'zui-modal-trigger-',this.context.fieldOptions.id,'');
    if (import3.checkBinding(throwOnChange,this._expr_30,currVal_30)) {
      this.renderer.setElementProperty(this._el_0,'id',currVal_30);
      this._expr_30 = currVal_30;
    }
    const currVal_31:any = ('#zee-create-edit-modal-' + this.context.fieldOptions.id);
    if (import3.checkBinding(throwOnChange,this._expr_31,currVal_31)) {
      this.renderer.setElementAttribute(this._el_0,'data-target',((currVal_31 == null)? (null as any): currVal_31.toString()));
      this._expr_31 = currVal_31;
    }
    const currVal_32:any = import3.inlineInterpolate(1,'',this.context.fieldOptions.header,'');
    if (import3.checkBinding(throwOnChange,this._expr_32,currVal_32)) {
      this.renderer.setText(this._text_1,currVal_32);
      this._expr_32 = currVal_32;
    }
    const currVal_33:any = import3.inlineInterpolate(1,'\n        You have selected more than ',this.context.TESTCASE_CLONE_LIMIT,' testcases to clone. This operation may take time. ');
    if (import3.checkBinding(throwOnChange,this._expr_33,currVal_33)) {
      this.renderer.setText(this._text_8,currVal_33);
      this._expr_33 = currVal_33;
    }
    this.compView_5.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._ModalComponent_5_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this._vc_3.destroyNestedViews();
    this.compView_5.destroy();
    this._ModalComponent_5_3.ngOnDestroy();
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 5) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 5) && (ngContentIndex == 1))) { cb(this._el_7,ctx); }
    if (((nodeIndex == 5) && (ngContentIndex == 2))) { cb(this._el_12,ctx); }
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 3)) { return new View_TestcaseCreateComponent1(this.viewUtils,this,3,this._anchor_3,this._vc_3); }
    return (null as any);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.onAddClick()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_17(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.cloneTestcaseOnUserApproval()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}