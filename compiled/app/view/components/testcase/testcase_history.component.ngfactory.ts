/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../../app/view/components/testcase/testcase_history.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '../../../../../app/actions/testcase.action';
import * as import10 from '../../directives/expander/expander.directive.ngfactory';
import * as import11 from '../../../../../app/view/components/grid/grid.component';
import * as import12 from '../../../../../app/actions/grid.action';
import * as import13 from '../../../../../app/actions/global.action';
import * as import14 from '../../../../../app/utils/scripts/utils';
import * as import15 from '../grid/grid.component.ngfactory';
import * as import16 from '@angular/core/src/linker/element_ref';
import * as import17 from '@angular/http/src/http';
import * as import18 from '../../../../../app/services/pouch.db.service';
import * as import19 from '@angular/core/src/zone/ng_zone';
import * as import20 from '@angular/router/src/router';
import * as import21 from '../../../../../app/services/toastr.service';
import * as import22 from '../../../../../app/view/directives/expander/expander.directive';
export class Wrapper_TestcaseHistoryComponent {
  /*private*/ _eventHandler:Function;
  context:import0.TestcaseHistoryComponent;
  /*private*/ _changed:boolean;
  /*private*/ _changes:{[key: string]:any};
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  constructor(p0:any) {
    this._changed = false;
    this._changes = {};
    this.context = new import0.TestcaseHistoryComponent(p0);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    this.context.ngOnDestroy();
  }
  check_editable(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.editable = currValue;
      this._changes['editable'] = new import1.SimpleChange(this._expr_0,currValue);
      this._expr_0 = currValue;
    }
  }
  check_isExpanded(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.isExpanded = currValue;
      this._changes['isExpanded'] = new import1.SimpleChange(this._expr_1,currValue);
      this._expr_1 = currValue;
    }
  }
  check_testcaseId(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.testcaseId = currValue;
      this._changes['testcaseId'] = new import1.SimpleChange(this._expr_2,currValue);
      this._expr_2 = currValue;
    }
  }
  check_treeType(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.treeType = currValue;
      this._changes['treeType'] = new import1.SimpleChange(this._expr_3,currValue);
      this._expr_3 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if (changed) {
      this.context.ngOnChanges(this._changes);
      this._changes = {};
    } }
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_TestcaseHistoryComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_TestcaseHistoryComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.TestcaseHistoryComponent>;
  _TestcaseHistoryComponent_0_3:Wrapper_TestcaseHistoryComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TestcaseHistoryComponent_Host0,renderType_TestcaseHistoryComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'zee-panel-content6',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_TestcaseHistoryComponent0(this.viewUtils,this,0,this._el_0);
    this._TestcaseHistoryComponent_0_3 = new Wrapper_TestcaseHistoryComponent(this.injectorGet(import9.TestcaseAction,this.parentIndex));
    this.compView_0.create(this._TestcaseHistoryComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._TestcaseHistoryComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.TestcaseHistoryComponent) && (0 === requestNodeIndex))) { return this._TestcaseHistoryComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._TestcaseHistoryComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._TestcaseHistoryComponent_0_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._TestcaseHistoryComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const TestcaseHistoryComponentNgFactory:import8.ComponentFactory<import0.TestcaseHistoryComponent> = new import8.ComponentFactory<import0.TestcaseHistoryComponent>('zee-panel-content6',View_TestcaseHistoryComponent_Host0,import0.TestcaseHistoryComponent);
const styles_TestcaseHistoryComponent:any[] = ([] as any[]);
var renderType_TestcaseHistoryComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,styles_TestcaseHistoryComponent,{});
export class View_TestcaseHistoryComponent0 extends import2.AppView<import0.TestcaseHistoryComponent> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _ExpanderDirective_2_3:import10.Wrapper_ExpanderDirective;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _el_6:any;
  _text_7:any;
  _text_8:any;
  _text_9:any;
  _el_10:any;
  _text_11:any;
  _el_12:any;
  _text_13:any;
  _el_14:any;
  compView_14:import2.AppView<import11.GridComponent>;
  _GridAction_14_3:import12.GridAction;
  _GlobalAction_14_4:import13.GlobalAction;
  _UtililtyFunctions_14_5:import14.UtililtyFunctions;
  _GridComponent_14_6:import15.Wrapper_GridComponent;
  _text_15:any;
  _text_16:any;
  _text_17:any;
  _text_18:any;
  _text_19:any;
  _text_20:any;
  _text_21:any;
  _text_22:any;
  /*private*/ _expr_29:any;
  /*private*/ _expr_30:any;
  /*private*/ _expr_31:any;
  /*private*/ _expr_32:any;
  /*private*/ _expr_33:any;
  /*private*/ _expr_34:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TestcaseHistoryComponent0,renderType_TestcaseHistoryComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
    this._expr_29 = import1.UNINITIALIZED;
    this._expr_30 = import1.UNINITIALIZED;
    this._expr_31 = import1.UNINITIALIZED;
    this._expr_32 = import1.UNINITIALIZED;
    this._expr_33 = import1.UNINITIALIZED;
    this._expr_34 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'zee-expander',new import3.InlineArray2(2,'id','zee-testcase-history-details-module'),(null as any));
    this._ExpanderDirective_2_3 = new import10.Wrapper_ExpanderDirective(new import16.ElementRef(this._el_2));
    this._text_3 = this.renderer.createText(this._el_2,'\n        ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_2,'div',new import3.InlineArray2(2,'id','zee-testcase-details-module-heading'),(null as any));
    this._text_5 = this.renderer.createText(this._el_4,'\n            ',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_4,'h5',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_7 = this.renderer.createText(this._el_6,'Step Details History',(null as any));
    this._text_8 = this.renderer.createText(this._el_4,'\n         ',(null as any));
    this._text_9 = this.renderer.createText(this._el_2,'\n         ',(null as any));
    this._el_10 = import3.createRenderElement(this.renderer,this._el_2,'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_11 = this.renderer.createText(this._el_10,'\n            ',(null as any));
    this._el_12 = import3.createRenderElement(this.renderer,this._el_10,'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_13 = this.renderer.createText(this._el_12,'\n                ',(null as any));
    this._el_14 = import3.createRenderElement(this.renderer,this._el_12,'grid',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_14 = new import15.View_GridComponent0(this.viewUtils,this,14,this._el_14);
    this._GridAction_14_3 = new import12.GridAction(this.parentView.injectorGet(import17.Http,this.parentIndex),this.parentView.injectorGet(import18.PouchDBPrefsServices,this.parentIndex));
    this._GlobalAction_14_4 = new import13.GlobalAction(this.parentView.injectorGet(import17.Http,this.parentIndex));
    this._UtililtyFunctions_14_5 = new import14.UtililtyFunctions();
    this._GridComponent_14_6 = new import15.Wrapper_GridComponent(this._GridAction_14_3,this._GlobalAction_14_4,new import16.ElementRef(this._el_14),this._UtililtyFunctions_14_5,this.compView_14.ref,this.parentView.injectorGet(import19.NgZone,this.parentIndex),this.parentView.injectorGet(import20.Router,this.parentIndex),this.parentView.injectorGet(import18.PouchDBPrefsServices,this.parentIndex),this.parentView.injectorGet(import21.ToastrService,this.parentIndex));
    this.compView_14.create(this._GridComponent_14_6.context);
    this._text_15 = this.renderer.createText(this._el_12,'\n                ',(null as any));
    this._text_16 = this.renderer.createText(this._el_12,'\n                ',(null as any));
    this._text_17 = this.renderer.createText(this._el_12,'\n                                ',(null as any));
    this._text_18 = this.renderer.createText(this._el_12,'\n                                ',(null as any));
    this._text_19 = this.renderer.createText(this._el_12,'\n            ',(null as any));
    this._text_20 = this.renderer.createText(this._el_10,'\n        ',(null as any));
    this._text_21 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._text_22 = this.renderer.createText(this._el_0,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_2,new import3.InlineArray2(2,'onPanelToggle',(null as any)),this.eventHandler(this.handleEvent_2));
    this._ExpanderDirective_2_3.subscribe(this,this.eventHandler(this.handleEvent_2),true);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._text_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._el_12,
      this._text_13,
      this._el_14,
      this._text_15,
      this._text_16,
      this._text_17,
      this._text_18,
      this._text_19,
      this._text_20,
      this._text_21,
      this._text_22
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.GridAction) && (14 === requestNodeIndex))) { return this._GridAction_14_3; }
    if (((token === import13.GlobalAction) && (14 === requestNodeIndex))) { return this._GlobalAction_14_4; }
    if (((token === import14.UtililtyFunctions) && (14 === requestNodeIndex))) { return this._UtililtyFunctions_14_5; }
    if (((token === import11.GridComponent) && (14 === requestNodeIndex))) { return this._GridComponent_14_6.context; }
    if (((token === import22.ExpanderDirective) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 21)))) { return this._ExpanderDirective_2_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = this.context.action;
    this._ExpanderDirective_2_3.check_action(currVal_2_0_0,throwOnChange,false);
    this._ExpanderDirective_2_3.ngDoCheck(this,this._el_2,throwOnChange);
    const currVal_14_0_0:any = this.context.histories;
    this._GridComponent_14_6.check_rows(currVal_14_0_0,throwOnChange,false);
    const currVal_14_0_1:any = this.context.noData;
    this._GridComponent_14_6.check_noData(currVal_14_0_1,throwOnChange,false);
    const currVal_14_0_2:any = this.context.historyGridType;
    this._GridComponent_14_6.check_gridType(currVal_14_0_2,throwOnChange,false);
    this._GridComponent_14_6.ngDoCheck(this,this._el_14,throwOnChange);
    const currVal_29:any = 'zee-testcase-history-wrapper';
    if (import3.checkBinding(throwOnChange,this._expr_29,currVal_29)) {
      this.renderer.setElementProperty(this._el_0,'className',currVal_29);
      this._expr_29 = currVal_29;
    }
    const currVal_30:any = 'zee-module zee-module-toggle-wrapper';
    if (import3.checkBinding(throwOnChange,this._expr_30,currVal_30)) {
      this.renderer.setElementProperty(this._el_2,'className',currVal_30);
      this._expr_30 = currVal_30;
    }
    const currVal_31:any = 'zee-module-header';
    if (import3.checkBinding(throwOnChange,this._expr_31,currVal_31)) {
      this.renderer.setElementProperty(this._el_4,'className',currVal_31);
      this._expr_31 = currVal_31;
    }
    const currVal_32:any = 'zee-module-title';
    if (import3.checkBinding(throwOnChange,this._expr_32,currVal_32)) {
      this.renderer.setElementProperty(this._el_6,'className',currVal_32);
      this._expr_32 = currVal_32;
    }
    const currVal_33:any = 'zee-module-content';
    if (import3.checkBinding(throwOnChange,this._expr_33,currVal_33)) {
      this.renderer.setElementProperty(this._el_10,'className',currVal_33);
      this._expr_33 = currVal_33;
    }
    const currVal_34:any = 'changehistory action-body';
    if (import3.checkBinding(throwOnChange,this._expr_34,currVal_34)) {
      this.renderer.setElementProperty(this._el_12,'className',currVal_34);
      this._expr_34 = currVal_34;
    }
    this.compView_14.internalDetectChanges(throwOnChange);
    if (!throwOnChange) {
      if ((this.numberOfChecks === 0)) { this._GridComponent_14_6.context.ngAfterViewInit(); }
      if ((this.numberOfChecks === 0)) { this._ExpanderDirective_2_3.context.ngAfterViewInit(); }
    }
  }
  destroyInternal():void {
    this.compView_14.destroy();
    this._GridComponent_14_6.ngOnDestroy();
    this._ExpanderDirective_2_3.ngOnDestroy();
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onPanelToggle')) {
      const pd_sub_0:any = ((<any>this.context.onPanelToggle($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}