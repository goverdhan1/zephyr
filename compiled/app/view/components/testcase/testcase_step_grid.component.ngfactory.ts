/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../../app/view/components/testcase/testcase_step_grid.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '../../../../../app/actions/testcase.action';
import * as import10 from '@angular/router/src/router_state';
import * as import11 from '../../../../../app/view/components/grid/grid.component';
import * as import12 from '../../../../../app/actions/grid.action';
import * as import13 from '../../../../../app/actions/global.action';
import * as import14 from '../../../../../app/utils/scripts/utils';
import * as import15 from '../grid/grid.component.ngfactory';
import * as import16 from '@angular/core/src/linker/view_container';
import * as import17 from '@angular/http/src/http';
import * as import18 from '../../../../../app/services/pouch.db.service';
import * as import19 from '@angular/core/src/linker/element_ref';
import * as import20 from '@angular/core/src/zone/ng_zone';
import * as import21 from '@angular/router/src/router';
import * as import22 from '../../../../../app/services/toastr.service';
import * as import23 from '../../directives/expander/expander.directive.ngfactory';
import * as import24 from '../../../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import25 from '@angular/core/src/linker/template_ref';
import * as import26 from '@angular/common/src/directives/ng_if';
import * as import27 from '../../../../../app/view/directives/expander/expander.directive';
export class Wrapper_TestcaseStepGridComponent {
  /*private*/ _eventHandler:Function;
  context:import0.TestcaseStepGridComponent;
  /*private*/ _changed:boolean;
  /*private*/ _changes:{[key: string]:any};
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  subscription0:any;
  constructor(p0:any,p1:any) {
    this._changed = false;
    this._changes = {};
    this.context = new import0.TestcaseStepGridComponent(p0,p1);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    this.context.ngOnDestroy();
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_editable(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.editable = currValue;
      this._changes['editable'] = new import1.SimpleChange(this._expr_0,currValue);
      this._expr_0 = currValue;
    }
  }
  check_cyclePhaseId(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.cyclePhaseId = currValue;
      this._changes['cyclePhaseId'] = new import1.SimpleChange(this._expr_1,currValue);
      this._expr_1 = currValue;
    }
  }
  check_rtsId(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.rtsId = currValue;
      this._changes['rtsId'] = new import1.SimpleChange(this._expr_2,currValue);
      this._expr_2 = currValue;
    }
  }
  check_isExpanded(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.isExpanded = currValue;
      this._changes['isExpanded'] = new import1.SimpleChange(this._expr_3,currValue);
      this._expr_3 = currValue;
    }
  }
  check_isSearchView(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.isSearchView = currValue;
      this._changes['isSearchView'] = new import1.SimpleChange(this._expr_4,currValue);
      this._expr_4 = currValue;
    }
  }
  check_areExecDetailsEnabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_5,currValue))) {
      this._changed = true;
      this.context.areExecDetailsEnabled = currValue;
      this._changes['areExecDetailsEnabled'] = new import1.SimpleChange(this._expr_5,currValue);
      this._expr_5 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if (changed) {
      this.context.ngOnChanges(this._changes);
      this._changes = {};
    } }
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.onTestStepAttachmentClicked.subscribe(_eventHandler.bind(view,'onTestStepAttachmentClicked'))); }
  }
}
var renderType_TestcaseStepGridComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_TestcaseStepGridComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.TestcaseStepGridComponent>;
  _TestcaseStepGridComponent_0_3:Wrapper_TestcaseStepGridComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TestcaseStepGridComponent_Host0,renderType_TestcaseStepGridComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'zee-panel-content11',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_TestcaseStepGridComponent0(this.viewUtils,this,0,this._el_0);
    this._TestcaseStepGridComponent_0_3 = new Wrapper_TestcaseStepGridComponent(this.injectorGet(import9.TestcaseAction,this.parentIndex),this.injectorGet(import10.ActivatedRoute,this.parentIndex));
    this.compView_0.create(this._TestcaseStepGridComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._TestcaseStepGridComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.TestcaseStepGridComponent) && (0 === requestNodeIndex))) { return this._TestcaseStepGridComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._TestcaseStepGridComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._TestcaseStepGridComponent_0_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._TestcaseStepGridComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const TestcaseStepGridComponentNgFactory:import8.ComponentFactory<import0.TestcaseStepGridComponent> = new import8.ComponentFactory<import0.TestcaseStepGridComponent>('zee-panel-content11',View_TestcaseStepGridComponent_Host0,import0.TestcaseStepGridComponent);
const styles_TestcaseStepGridComponent:any[] = ([] as any[]);
class View_TestcaseStepGridComponent1 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import11.GridComponent>;
  _GridAction_0_3:import12.GridAction;
  _GlobalAction_0_4:import13.GlobalAction;
  _UtililtyFunctions_0_5:import14.UtililtyFunctions;
  _GridComponent_0_6:import15.Wrapper_GridComponent;
  _text_1:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import16.ViewContainer) {
    super(View_TestcaseStepGridComponent1,renderType_TestcaseStepGridComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'grid',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_0 = new import15.View_GridComponent0(this.viewUtils,this,0,this._el_0);
    this._GridAction_0_3 = new import12.GridAction(this.parentView.parentView.injectorGet(import17.Http,this.parentView.parentIndex),this.parentView.parentView.injectorGet(import18.PouchDBPrefsServices,this.parentView.parentIndex));
    this._GlobalAction_0_4 = new import13.GlobalAction(this.parentView.parentView.injectorGet(import17.Http,this.parentView.parentIndex));
    this._UtililtyFunctions_0_5 = new import14.UtililtyFunctions();
    this._GridComponent_0_6 = new import15.Wrapper_GridComponent(this._GridAction_0_3,this._GlobalAction_0_4,new import19.ElementRef(this._el_0),this._UtililtyFunctions_0_5,this.compView_0.ref,this.parentView.parentView.injectorGet(import20.NgZone,this.parentView.parentIndex),this.parentView.parentView.injectorGet(import21.Router,this.parentView.parentIndex),this.parentView.parentView.injectorGet(import18.PouchDBPrefsServices,this.parentView.parentIndex),this.parentView.parentView.injectorGet(import22.ToastrService,this.parentView.parentIndex));
    this._text_1 = this.renderer.createText((null as any),'\n            ',(null as any));
    this.compView_0.create(this._GridComponent_0_6.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray4(4,'onGridLinkClick',(null as any),'onGridInlineEditSubmit',(null as any)),this.eventHandler(this.handleEvent_0));
    this._GridComponent_0_6.subscribe(this,this.eventHandler(this.handleEvent_0),true,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.GridAction) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._GridAction_0_3; }
    if (((token === import13.GlobalAction) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._GlobalAction_0_4; }
    if (((token === import14.UtililtyFunctions) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._UtililtyFunctions_0_5; }
    if (((token === import11.GridComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._GridComponent_0_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.parentView.context.testcaseGridRows;
    this._GridComponent_0_6.check_rows(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = this.parentView.context._testStepGridType;
    this._GridComponent_0_6.check_gridType(currVal_0_0_1,throwOnChange,false);
    const currVal_0_0_2:any = this.parentView.context.paginationOptions;
    this._GridComponent_0_6.check_paginationOptions(currVal_0_0_2,throwOnChange,false);
    this._GridComponent_0_6.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._GridComponent_0_6.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._GridComponent_0_6.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onGridLinkClick')) {
      const pd_sub_0:any = ((<any>this.parentView.context.testStepGridLinkClick($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'onGridInlineEditSubmit')) {
      const pd_sub_1:any = ((<any>this.parentView.context.testStepGridInlineEditSubmit($event)) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
}
class View_TestcaseStepGridComponent2 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import11.GridComponent>;
  _GridAction_0_3:import12.GridAction;
  _GlobalAction_0_4:import13.GlobalAction;
  _UtililtyFunctions_0_5:import14.UtililtyFunctions;
  _GridComponent_0_6:import15.Wrapper_GridComponent;
  _text_1:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import16.ViewContainer) {
    super(View_TestcaseStepGridComponent2,renderType_TestcaseStepGridComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'grid',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_0 = new import15.View_GridComponent0(this.viewUtils,this,0,this._el_0);
    this._GridAction_0_3 = new import12.GridAction(this.parentView.parentView.injectorGet(import17.Http,this.parentView.parentIndex),this.parentView.parentView.injectorGet(import18.PouchDBPrefsServices,this.parentView.parentIndex));
    this._GlobalAction_0_4 = new import13.GlobalAction(this.parentView.parentView.injectorGet(import17.Http,this.parentView.parentIndex));
    this._UtililtyFunctions_0_5 = new import14.UtililtyFunctions();
    this._GridComponent_0_6 = new import15.Wrapper_GridComponent(this._GridAction_0_3,this._GlobalAction_0_4,new import19.ElementRef(this._el_0),this._UtililtyFunctions_0_5,this.compView_0.ref,this.parentView.parentView.injectorGet(import20.NgZone,this.parentView.parentIndex),this.parentView.parentView.injectorGet(import21.Router,this.parentView.parentIndex),this.parentView.parentView.injectorGet(import18.PouchDBPrefsServices,this.parentView.parentIndex),this.parentView.parentView.injectorGet(import22.ToastrService,this.parentView.parentIndex));
    this._text_1 = this.renderer.createText((null as any),'\n            ',(null as any));
    this.compView_0.create(this._GridComponent_0_6.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray4(4,'onGridLinkClick',(null as any),'onGridInlineEditSubmit',(null as any)),this.eventHandler(this.handleEvent_0));
    this._GridComponent_0_6.subscribe(this,this.eventHandler(this.handleEvent_0),true,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.GridAction) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._GridAction_0_3; }
    if (((token === import13.GlobalAction) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._GlobalAction_0_4; }
    if (((token === import14.UtililtyFunctions) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._UtililtyFunctions_0_5; }
    if (((token === import11.GridComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._GridComponent_0_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.parentView.context.testcaseGridRows;
    this._GridComponent_0_6.check_rows(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = this.parentView.context._testStepSearchGridType;
    this._GridComponent_0_6.check_gridType(currVal_0_0_1,throwOnChange,false);
    const currVal_0_0_2:any = this.parentView.context.paginationOptions;
    this._GridComponent_0_6.check_paginationOptions(currVal_0_0_2,throwOnChange,false);
    this._GridComponent_0_6.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._GridComponent_0_6.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._GridComponent_0_6.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onGridLinkClick')) {
      const pd_sub_0:any = ((<any>this.parentView.context.testStepGridLinkClick($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'onGridInlineEditSubmit')) {
      const pd_sub_1:any = ((<any>this.parentView.context.testStepGridInlineEditSubmit($event)) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
}
var renderType_TestcaseStepGridComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,styles_TestcaseStepGridComponent,{});
export class View_TestcaseStepGridComponent0 extends import2.AppView<import0.TestcaseStepGridComponent> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _ExpanderDirective_2_3:import23.Wrapper_ExpanderDirective;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _el_6:any;
  _text_7:any;
  _text_8:any;
  _text_9:any;
  _el_10:any;
  _text_11:any;
  _anchor_12:any;
  /*private*/ _vc_12:import16.ViewContainer;
  _TemplateRef_12_5:any;
  _NgIf_12_6:import24.Wrapper_NgIf;
  _text_13:any;
  _anchor_14:any;
  /*private*/ _vc_14:import16.ViewContainer;
  _TemplateRef_14_5:any;
  _NgIf_14_6:import24.Wrapper_NgIf;
  _text_15:any;
  _text_16:any;
  _text_17:any;
  _text_18:any;
  /*private*/ _expr_26:any;
  /*private*/ _expr_27:any;
  /*private*/ _expr_28:any;
  /*private*/ _expr_29:any;
  /*private*/ _expr_30:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TestcaseStepGridComponent0,renderType_TestcaseStepGridComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
    this._expr_26 = import1.UNINITIALIZED;
    this._expr_27 = import1.UNINITIALIZED;
    this._expr_28 = import1.UNINITIALIZED;
    this._expr_29 = import1.UNINITIALIZED;
    this._expr_30 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'zee-expander',new import3.InlineArray2(2,'id','zee-testcase-step-details-grid-module'),(null as any));
    this._ExpanderDirective_2_3 = new import23.Wrapper_ExpanderDirective(new import19.ElementRef(this._el_2));
    this._text_3 = this.renderer.createText(this._el_2,'\n        ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_2,'div',new import3.InlineArray2(2,'id','zee-testcase-details-module-heading'),(null as any));
    this._text_5 = this.renderer.createText(this._el_4,'\n            ',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_4,'h5',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_7 = this.renderer.createText(this._el_6,'Step Details',(null as any));
    this._text_8 = this.renderer.createText(this._el_4,'\n        ',(null as any));
    this._text_9 = this.renderer.createText(this._el_2,'\n        ',(null as any));
    this._el_10 = import3.createRenderElement(this.renderer,this._el_2,'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_11 = this.renderer.createText(this._el_10,'\n            ',(null as any));
    this._anchor_12 = this.renderer.createTemplateAnchor(this._el_10,(null as any));
    this._vc_12 = new import16.ViewContainer(12,10,this,this._anchor_12);
    this._TemplateRef_12_5 = new import25.TemplateRef_(this,12,this._anchor_12);
    this._NgIf_12_6 = new import24.Wrapper_NgIf(this._vc_12.vcRef,this._TemplateRef_12_5);
    this._text_13 = this.renderer.createText(this._el_10,'\n            ',(null as any));
    this._anchor_14 = this.renderer.createTemplateAnchor(this._el_10,(null as any));
    this._vc_14 = new import16.ViewContainer(14,10,this,this._anchor_14);
    this._TemplateRef_14_5 = new import25.TemplateRef_(this,14,this._anchor_14);
    this._NgIf_14_6 = new import24.Wrapper_NgIf(this._vc_14.vcRef,this._TemplateRef_14_5);
    this._text_15 = this.renderer.createText(this._el_10,'\n        ',(null as any));
    this._text_16 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._text_17 = this.renderer.createText(this._el_0,'\n',(null as any));
    this._text_18 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._text_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._anchor_12,
      this._text_13,
      this._anchor_14,
      this._text_15,
      this._text_16,
      this._text_17,
      this._text_18
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import25.TemplateRef) && (12 === requestNodeIndex))) { return this._TemplateRef_12_5; }
    if (((token === import26.NgIf) && (12 === requestNodeIndex))) { return this._NgIf_12_6.context; }
    if (((token === import25.TemplateRef) && (14 === requestNodeIndex))) { return this._TemplateRef_14_5; }
    if (((token === import26.NgIf) && (14 === requestNodeIndex))) { return this._NgIf_14_6.context; }
    if (((token === import27.ExpanderDirective) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 16)))) { return this._ExpanderDirective_2_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = this.context.action;
    this._ExpanderDirective_2_3.check_action(currVal_2_0_0,throwOnChange,false);
    this._ExpanderDirective_2_3.ngDoCheck(this,this._el_2,throwOnChange);
    const currVal_12_0_0:any = this.context.areExecDetailsEnabled;
    this._NgIf_12_6.check_ngIf(currVal_12_0_0,throwOnChange,false);
    this._NgIf_12_6.ngDoCheck(this,this._anchor_12,throwOnChange);
    const currVal_14_0_0:any = (this.context.isSearchView && !this.context.areExecDetailsEnabled);
    this._NgIf_14_6.check_ngIf(currVal_14_0_0,throwOnChange,false);
    this._NgIf_14_6.ngDoCheck(this,this._anchor_14,throwOnChange);
    this._vc_12.detectChangesInNestedViews(throwOnChange);
    this._vc_14.detectChangesInNestedViews(throwOnChange);
    const currVal_26:any = 'zee-testcase-steps-wrapper';
    if (import3.checkBinding(throwOnChange,this._expr_26,currVal_26)) {
      this.renderer.setElementProperty(this._el_0,'className',currVal_26);
      this._expr_26 = currVal_26;
    }
    const currVal_27:any = 'zee-module zee-module-toggle-wrapper';
    if (import3.checkBinding(throwOnChange,this._expr_27,currVal_27)) {
      this.renderer.setElementProperty(this._el_2,'className',currVal_27);
      this._expr_27 = currVal_27;
    }
    const currVal_28:any = 'zee-module-header';
    if (import3.checkBinding(throwOnChange,this._expr_28,currVal_28)) {
      this.renderer.setElementProperty(this._el_4,'className',currVal_28);
      this._expr_28 = currVal_28;
    }
    const currVal_29:any = 'zee-module-title';
    if (import3.checkBinding(throwOnChange,this._expr_29,currVal_29)) {
      this.renderer.setElementProperty(this._el_6,'className',currVal_29);
      this._expr_29 = currVal_29;
    }
    const currVal_30:any = 'zee-module-content grid-10-row-fix';
    if (import3.checkBinding(throwOnChange,this._expr_30,currVal_30)) {
      this.renderer.setElementProperty(this._el_10,'className',currVal_30);
      this._expr_30 = currVal_30;
    }
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._ExpanderDirective_2_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this._vc_12.destroyNestedViews();
    this._vc_14.destroyNestedViews();
    this._ExpanderDirective_2_3.ngOnDestroy();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 12)) { return new View_TestcaseStepGridComponent1(this.viewUtils,this,12,this._anchor_12,this._vc_12); }
    if ((nodeIndex == 14)) { return new View_TestcaseStepGridComponent2(this.viewUtils,this,14,this._anchor_14,this._vc_14); }
    return (null as any);
  }
}