/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../../app/view/components/testcase/testcase_step_details.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '../../../../../app/actions/testcase.action';
import * as import10 from '@angular/router/src/router_state';
import * as import11 from '../../../../../app/actions/notification.action';
import * as import12 from '../../../../../app/actions/global.action';
import * as import13 from '../../directives/expander/expander.directive.ngfactory';
import * as import14 from '../../../../../app/view/components/inline_edit/inline_rows_edit.component';
import * as import15 from '../inline_edit/inline_rows_edit.component.ngfactory';
import * as import16 from '@angular/core/src/linker/element_ref';
import * as import17 from '../../../../../app/view/directives/expander/expander.directive';
export class Wrapper_TestcaseStepDetailsComponent {
  /*private*/ _eventHandler:Function;
  context:import0.TestcaseStepDetailsComponent;
  /*private*/ _changed:boolean;
  /*private*/ _changes:{[key: string]:any};
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  subscription0:any;
  constructor(p0:any,p1:any,p2:any,p3:any,p4:any) {
    this._changed = false;
    this._changes = {};
    this.context = new import0.TestcaseStepDetailsComponent(p0,p1,p2,p3,p4);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    this.context.ngOnDestroy();
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_editable(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.editable = currValue;
      this._changes['editable'] = new import1.SimpleChange(this._expr_0,currValue);
      this._expr_0 = currValue;
    }
  }
  check_testcaseId(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.testcaseId = currValue;
      this._changes['testcaseId'] = new import1.SimpleChange(this._expr_1,currValue);
      this._expr_1 = currValue;
    }
  }
  check_isExpanded(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.isExpanded = currValue;
      this._changes['isExpanded'] = new import1.SimpleChange(this._expr_2,currValue);
      this._expr_2 = currValue;
    }
  }
  check_isTce(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.isTce = currValue;
      this._changes['isTce'] = new import1.SimpleChange(this._expr_3,currValue);
      this._expr_3 = currValue;
    }
  }
  check_appId(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.appId = currValue;
      this._changes['appId'] = new import1.SimpleChange(this._expr_4,currValue);
      this._expr_4 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if (changed) {
      this.context.ngOnChanges(this._changes);
      this._changes = {};
    } }
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.onSendFieldsData.subscribe(_eventHandler.bind(view,'onSendFieldsData'))); }
  }
}
var renderType_TestcaseStepDetailsComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_TestcaseStepDetailsComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.TestcaseStepDetailsComponent>;
  _TestcaseStepDetailsComponent_0_3:Wrapper_TestcaseStepDetailsComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TestcaseStepDetailsComponent_Host0,renderType_TestcaseStepDetailsComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'zee-panel-content3',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_TestcaseStepDetailsComponent0(this.viewUtils,this,0,this._el_0);
    this._TestcaseStepDetailsComponent_0_3 = new Wrapper_TestcaseStepDetailsComponent(this.injectorGet(import9.TestcaseAction,this.parentIndex),this.injectorGet(import10.ActivatedRoute,this.parentIndex),this.compView_0.ref,this.injectorGet(import11.NotificationAction,this.parentIndex),this.injectorGet(import12.GlobalAction,this.parentIndex));
    this.compView_0.create(this._TestcaseStepDetailsComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._TestcaseStepDetailsComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.TestcaseStepDetailsComponent) && (0 === requestNodeIndex))) { return this._TestcaseStepDetailsComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._TestcaseStepDetailsComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._TestcaseStepDetailsComponent_0_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._TestcaseStepDetailsComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const TestcaseStepDetailsComponentNgFactory:import8.ComponentFactory<import0.TestcaseStepDetailsComponent> = new import8.ComponentFactory<import0.TestcaseStepDetailsComponent>('zee-panel-content3',View_TestcaseStepDetailsComponent_Host0,import0.TestcaseStepDetailsComponent);
const styles_TestcaseStepDetailsComponent:any[] = ([] as any[]);
var renderType_TestcaseStepDetailsComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,styles_TestcaseStepDetailsComponent,{});
export class View_TestcaseStepDetailsComponent0 extends import2.AppView<import0.TestcaseStepDetailsComponent> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _ExpanderDirective_2_3:import13.Wrapper_ExpanderDirective;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _el_6:any;
  _text_7:any;
  _text_8:any;
  _text_9:any;
  _el_10:any;
  _text_11:any;
  _el_12:any;
  compView_12:import2.AppView<import14.InlineRowsEditComponent>;
  _InlineRowsEditComponent_12_3:import15.Wrapper_InlineRowsEditComponent;
  _text_13:any;
  _text_14:any;
  _text_15:any;
  _text_16:any;
  /*private*/ _expr_20:any;
  /*private*/ _expr_21:any;
  /*private*/ _expr_22:any;
  /*private*/ _expr_23:any;
  /*private*/ _expr_24:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TestcaseStepDetailsComponent0,renderType_TestcaseStepDetailsComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
    this._expr_20 = import1.UNINITIALIZED;
    this._expr_21 = import1.UNINITIALIZED;
    this._expr_22 = import1.UNINITIALIZED;
    this._expr_23 = import1.UNINITIALIZED;
    this._expr_24 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'zee-expander',new import3.InlineArray2(2,'id','zee-testcase-step-details-module'),(null as any));
    this._ExpanderDirective_2_3 = new import13.Wrapper_ExpanderDirective(new import16.ElementRef(this._el_2));
    this._text_3 = this.renderer.createText(this._el_2,'\n        ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_2,'div',new import3.InlineArray2(2,'id','zee-testcase-details-module-heading'),(null as any));
    this._text_5 = this.renderer.createText(this._el_4,'\n            ',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_4,'h5',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_7 = this.renderer.createText(this._el_6,'Step Details',(null as any));
    this._text_8 = this.renderer.createText(this._el_4,'\n         ',(null as any));
    this._text_9 = this.renderer.createText(this._el_2,'\n         ',(null as any));
    this._el_10 = import3.createRenderElement(this.renderer,this._el_2,'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_11 = this.renderer.createText(this._el_10,'\n            ',(null as any));
    this._el_12 = import3.createRenderElement(this.renderer,this._el_10,'zephyr-inline-rows-edit',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_12 = new import15.View_InlineRowsEditComponent0(this.viewUtils,this,12,this._el_12);
    this._InlineRowsEditComponent_12_3 = new import15.Wrapper_InlineRowsEditComponent(new import16.ElementRef(this._el_12));
    this.compView_12.create(this._InlineRowsEditComponent_12_3.context);
    this._text_13 = this.renderer.createText(this._el_10,'\n        ',(null as any));
    this._text_14 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._text_15 = this.renderer.createText(this._el_0,'\n',(null as any));
    this._text_16 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_2,new import3.InlineArray2(2,'onPanelToggle',(null as any)),this.eventHandler(this.handleEvent_2));
    this._ExpanderDirective_2_3.subscribe(this,this.eventHandler(this.handleEvent_2),true);
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_12,new import3.InlineArray16(12,'onEditSubmit',(null as any),'onBulkSubmit',(null as any),'onCreateSubmit',(null as any),'onDeleteSubmit',(null as any),'onDirtyCheck',(null as any),'onSendFieldsData',(null as any)),this.eventHandler(this.handleEvent_12));
    this._InlineRowsEditComponent_12_3.subscribe(this,this.eventHandler(this.handleEvent_12),true,true,true,false,true,true,true);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._text_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._el_12,
      this._text_13,
      this._text_14,
      this._text_15,
      this._text_16
    ]
    ),[
      disposable_0,
      disposable_1
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import14.InlineRowsEditComponent) && (12 === requestNodeIndex))) { return this._InlineRowsEditComponent_12_3.context; }
    if (((token === import17.ExpanderDirective) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 14)))) { return this._ExpanderDirective_2_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = this.context.action;
    this._ExpanderDirective_2_3.check_action(currVal_2_0_0,throwOnChange,false);
    this._ExpanderDirective_2_3.ngDoCheck(this,this._el_2,throwOnChange);
    const currVal_12_0_0:any = this.context.stepOptions;
    this._InlineRowsEditComponent_12_3.check_fieldOptions(currVal_12_0_0,throwOnChange,false);
    const currVal_12_0_1:any = this.context.teststep.steps;
    this._InlineRowsEditComponent_12_3.check_fields(currVal_12_0_1,throwOnChange,false);
    const currVal_12_0_2:any = this.context.editable;
    this._InlineRowsEditComponent_12_3.check_editable(currVal_12_0_2,throwOnChange,false);
    this._InlineRowsEditComponent_12_3.ngDoCheck(this,this._el_12,throwOnChange);
    const currVal_20:any = 'zee-testcase-steps-wrapper';
    if (import3.checkBinding(throwOnChange,this._expr_20,currVal_20)) {
      this.renderer.setElementProperty(this._el_0,'className',currVal_20);
      this._expr_20 = currVal_20;
    }
    const currVal_21:any = 'zee-module zee-module-toggle-wrapper';
    if (import3.checkBinding(throwOnChange,this._expr_21,currVal_21)) {
      this.renderer.setElementProperty(this._el_2,'className',currVal_21);
      this._expr_21 = currVal_21;
    }
    const currVal_22:any = 'zee-module-header';
    if (import3.checkBinding(throwOnChange,this._expr_22,currVal_22)) {
      this.renderer.setElementProperty(this._el_4,'className',currVal_22);
      this._expr_22 = currVal_22;
    }
    const currVal_23:any = 'zee-module-title';
    if (import3.checkBinding(throwOnChange,this._expr_23,currVal_23)) {
      this.renderer.setElementProperty(this._el_6,'className',currVal_23);
      this._expr_23 = currVal_23;
    }
    const currVal_24:any = 'zee-module-content';
    if (import3.checkBinding(throwOnChange,this._expr_24,currVal_24)) {
      this.renderer.setElementProperty(this._el_10,'className',currVal_24);
      this._expr_24 = currVal_24;
    }
    this.compView_12.internalDetectChanges(throwOnChange);
    if (!throwOnChange) {
      this._InlineRowsEditComponent_12_3.context.ngAfterViewChecked();
      if ((this.numberOfChecks === 0)) { this._ExpanderDirective_2_3.context.ngAfterViewInit(); }
    }
  }
  destroyInternal():void {
    this.compView_12.destroy();
    this._InlineRowsEditComponent_12_3.ngOnDestroy();
    this._ExpanderDirective_2_3.ngOnDestroy();
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onPanelToggle')) {
      const pd_sub_0:any = ((<any>this.context.onPanelToggle($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_12(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onEditSubmit')) {
      const pd_sub_0:any = ((<any>this.context.saveUpdatedSteps($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'onBulkSubmit')) {
      const pd_sub_1:any = ((<any>this.context.saveBulkData($event)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'onCreateSubmit')) {
      const pd_sub_2:any = ((<any>this.context.createSteps($event)) !== false);
      result = (pd_sub_2 && result);
    }
    if ((eventName == 'onDeleteSubmit')) {
      const pd_sub_3:any = ((<any>this.context.deleteStep($event)) !== false);
      result = (pd_sub_3 && result);
    }
    if ((eventName == 'onDirtyCheck')) {
      const pd_sub_4:any = ((<any>this.context.onDirtyCheck($event)) !== false);
      result = (pd_sub_4 && result);
    }
    if ((eventName == 'onSendFieldsData')) {
      const pd_sub_5:any = ((<any>this.context.sendFieldsData($event)) !== false);
      result = (pd_sub_5 && result);
    }
    return result;
  }
}