/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../../../../app/view/components/defects/defect_link/create_defect/create_defect_form.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '../../../../../../../app/actions/defects.action';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/change_detection/constants';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '@angular/http/src/http';
import * as import11 from '@angular/forms/src/form_builder';
import * as import12 from '@angular/core/src/linker/view_container';
import * as import13 from '../../../../../../../app/view/components/defects/defect_link/create_defect/fields/cd_user.component';
import * as import14 from './fields/cd_user.component.ngfactory';
import * as import15 from '../../../../../../../app/view/components/defects/defect_link/create_defect/fields/cd_label.component';
import * as import16 from './fields/cd_label.component.ngfactory';
import * as import17 from '../../../../../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import18 from '../../../../../../node_modules/@angular/forms/src/directives/reactive_directives/form_control_directive.ngfactory';
import * as import19 from '../../../../../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import20 from '../../../../../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import21 from '@angular/core/src/linker/element_ref';
import * as import22 from '@angular/core/src/linker/template_ref';
import * as import23 from '@angular/forms/src/directives/default_value_accessor';
import * as import24 from '@angular/forms/src/directives/control_value_accessor';
import * as import25 from '@angular/forms/src/directives/reactive_directives/form_control_directive';
import * as import26 from '@angular/forms/src/directives/ng_control';
import * as import27 from '@angular/forms/src/directives/ng_control_status';
import * as import28 from '@angular/common/src/directives/ng_if';
import * as import29 from '../../../../../../../app/view/components/defects/defect_link/create_defect/fields/cd_date.component';
import * as import30 from './fields/cd_date.component.ngfactory';
import * as import31 from '../../../../../../../app/view/components/defects/defect_link/create_defect/fields/cd_text.component';
import * as import32 from './fields/cd_text.component.ngfactory';
import * as import33 from '../../../../../../../app/view/components/defects/defect_link/create_defect/fields/cd_array.component';
import * as import34 from './fields/cd_array.component.ngfactory';
import * as import35 from '../../../../../../../app/view/components/defects/defect_link/create_defect/fields/cd_optionwithchild.component';
import * as import36 from './fields/cd_optionwithchild.component.ngfactory';
import * as import37 from '../../../../../../../app/view/components/common/attachments/attachments.component';
import * as import38 from '../../../../../../../app/actions/global.action';
import * as import39 from '../../../common/attachments/attachments.component.ngfactory';
import * as import40 from '../../../../../../node_modules/@angular/common/src/directives/ng_class.ngfactory';
import * as import41 from '../../../../../../node_modules/@angular/forms/src/directives/reactive_directives/form_group_directive.ngfactory';
import * as import42 from '../../../../../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import43 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import44 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import45 from '@angular/common/src/directives/ng_for';
import * as import46 from '@angular/common/src/directives/ng_class';
import * as import47 from '@angular/forms/src/directives/reactive_directives/form_group_directive';
import * as import48 from '@angular/forms/src/directives/control_container';
export class Wrapper_CreateDefectFormComponent {
  /*private*/ _eventHandler:Function;
  context:import0.CreateDefectFormComponent;
  /*private*/ _changed:boolean;
  /*private*/ _changes:{[key: string]:any};
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  subscription0:any;
  constructor(p0:any,p1:any,p2:any) {
    this._changed = false;
    this._changes = {};
    this.context = new import0.CreateDefectFormComponent(p0,p1,p2);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
    this._expr_6 = import1.UNINITIALIZED;
    this._expr_7 = import1.UNINITIALIZED;
    this._expr_8 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_isUpdate(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.isUpdate = currValue;
      this._changes['isUpdate'] = new import1.SimpleChange(this._expr_0,currValue);
      this._expr_0 = currValue;
    }
  }
  check_disableCopyTestStep(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.disableCopyTestStep = currValue;
      this._changes['disableCopyTestStep'] = new import1.SimpleChange(this._expr_1,currValue);
      this._expr_1 = currValue;
    }
  }
  check_selectedDefect(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.selectedDefect = currValue;
      this._changes['selectedDefect'] = new import1.SimpleChange(this._expr_2,currValue);
      this._expr_2 = currValue;
    }
  }
  check_issueMetaData(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.issueMetaData = currValue;
      this._changes['issueMetaData'] = new import1.SimpleChange(this._expr_3,currValue);
      this._expr_3 = currValue;
    }
  }
  check_selectedProject(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.selectedProject = currValue;
      this._changes['selectedProject'] = new import1.SimpleChange(this._expr_4,currValue);
      this._expr_4 = currValue;
    }
  }
  check_selectedIssueType(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_5,currValue))) {
      this._changed = true;
      this.context.selectedIssueType = currValue;
      this._changes['selectedIssueType'] = new import1.SimpleChange(this._expr_5,currValue);
      this._expr_5 = currValue;
    }
  }
  check_selectedIssueTypeName(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_6,currValue))) {
      this._changed = true;
      this.context.selectedIssueTypeName = currValue;
      this._changes['selectedIssueTypeName'] = new import1.SimpleChange(this._expr_6,currValue);
      this._expr_6 = currValue;
    }
  }
  check_parentIssueKey(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_7,currValue))) {
      this._changed = true;
      this.context.parentIssueKey = currValue;
      this._changes['parentIssueKey'] = new import1.SimpleChange(this._expr_7,currValue);
      this._expr_7 = currValue;
    }
  }
  check_casCadeSelectDefault(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_8,currValue))) {
      this._changed = true;
      this.context.casCadeSelectDefault = currValue;
      this._changes['casCadeSelectDefault'] = new import1.SimpleChange(this._expr_8,currValue);
      this._expr_8 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if (changed) {
      this.context.ngOnChanges(this._changes);
      this._changes = {};
    } }
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.triggerChangeDetection.subscribe(_eventHandler.bind(view,'triggerChangeDetection'))); }
  }
}
var renderType_CreateDefectFormComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_CreateDefectFormComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.CreateDefectFormComponent>;
  _DefectsAction_0_3:import6.DefectsAction;
  _CreateDefectFormComponent_0_4:Wrapper_CreateDefectFormComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CreateDefectFormComponent_Host0,renderType_CreateDefectFormComponent_Host,import7.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'create-defect-form',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_CreateDefectFormComponent0(this.viewUtils,this,0,this._el_0);
    this._DefectsAction_0_3 = new import6.DefectsAction(this.injectorGet(import10.Http,this.parentIndex));
    this._CreateDefectFormComponent_0_4 = new Wrapper_CreateDefectFormComponent(this.injectorGet(import11.FormBuilder,this.parentIndex),this._DefectsAction_0_3,this.compView_0.ref);
    this.compView_0.create(this._CreateDefectFormComponent_0_4.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import9.ComponentRef_<any>(0,this,this._el_0,this._CreateDefectFormComponent_0_4.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import6.DefectsAction) && (0 === requestNodeIndex))) { return this._DefectsAction_0_3; }
    if (((token === import0.CreateDefectFormComponent) && (0 === requestNodeIndex))) { return this._CreateDefectFormComponent_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (this._CreateDefectFormComponent_0_4.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._CreateDefectFormComponent_0_4.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._CreateDefectFormComponent_0_4.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const CreateDefectFormComponentNgFactory:import9.ComponentFactory<import0.CreateDefectFormComponent> = new import9.ComponentFactory<import0.CreateDefectFormComponent>('create-defect-form',View_CreateDefectFormComponent_Host0,import0.CreateDefectFormComponent);
const styles_CreateDefectFormComponent:any[] = ([] as any[]);
class View_CreateDefectFormComponent1 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_CreateDefectFormComponent1,renderType_CreateDefectFormComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'Loading...',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_CreateDefectFormComponent4 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import13.CDUserComponent>;
  _CDUserComponent_0_3:import14.Wrapper_CDUserComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_CreateDefectFormComponent4,renderType_CreateDefectFormComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'cd-user',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_0 = new import14.View_CDUserComponent0(this.viewUtils,this,0,this._el_0);
    this._CDUserComponent_0_3 = new import14.Wrapper_CDUserComponent();
    this.compView_0.create(this._CDUserComponent_0_3.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray8(6,'onMultiUserUnselect',(null as any),'onUserUnselect',(null as any),'onUserSelect',(null as any)),this.eventHandler(this.handleEvent_0));
    this._CDUserComponent_0_3.subscribe(this,this.eventHandler(this.handleEvent_0),true,true,true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import13.CDUserComponent) && (0 === requestNodeIndex))) { return this._CDUserComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.parentView.parentView.context.$implicit;
    this._CDUserComponent_0_3.check_field(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = this.parentView.parentView.context.$implicit.fieldKey;
    this._CDUserComponent_0_3.check_formkey(currVal_0_0_1,throwOnChange,false);
    const currVal_0_0_2:any = this.parentView.parentView.parentView.context.selectedProject;
    this._CDUserComponent_0_3.check_projectkey(currVal_0_0_2,throwOnChange,false);
    this._CDUserComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._CDUserComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onMultiUserUnselect')) {
      const pd_sub_0:any = ((<any>this.parentView.parentView.parentView.context.onMultiUserUnselect($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'onUserUnselect')) {
      const pd_sub_1:any = ((<any>this.parentView.parentView.parentView.context.onUserUnselect($event)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'onUserSelect')) {
      const pd_sub_2:any = ((<any>this.parentView.parentView.parentView.context.setUser($event)) !== false);
      result = (pd_sub_2 && result);
    }
    return result;
  }
}
class View_CreateDefectFormComponent5 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import15.CDLabelComponent>;
  _CDLabelComponent_0_3:import16.Wrapper_CDLabelComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_CreateDefectFormComponent5,renderType_CreateDefectFormComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'cd-label',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_0 = new import16.View_CDLabelComponent0(this.viewUtils,this,0,this._el_0);
    this._CDLabelComponent_0_3 = new import16.Wrapper_CDLabelComponent();
    this.compView_0.create(this._CDLabelComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import15.CDLabelComponent) && (0 === requestNodeIndex))) { return this._CDLabelComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.parentView.parentView.context.$implicit;
    this._CDLabelComponent_0_3.check_field(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = this.parentView.parentView.parentView.context.selectedReporter;
    this._CDLabelComponent_0_3.check_fieldValue(currVal_0_0_1,throwOnChange,false);
    this._CDLabelComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_CreateDefectFormComponent3 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _DefaultValueAccessor_2_3:import17.Wrapper_DefaultValueAccessor;
  _NG_VALUE_ACCESSOR_2_4:any[];
  _FormControlDirective_2_5:import18.Wrapper_FormControlDirective;
  _NgControl_2_6:any;
  _NgControlStatus_2_7:import19.Wrapper_NgControlStatus;
  _text_3:any;
  _anchor_4:any;
  /*private*/ _vc_4:import12.ViewContainer;
  _TemplateRef_4_5:any;
  _NgIf_4_6:import20.Wrapper_NgIf;
  _text_5:any;
  _anchor_6:any;
  /*private*/ _vc_6:import12.ViewContainer;
  _TemplateRef_6_5:any;
  _NgIf_6_6:import20.Wrapper_NgIf;
  _text_7:any;
  /*private*/ _expr_19:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_CreateDefectFormComponent3,renderType_CreateDefectFormComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_19 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n            ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'input',new import3.InlineArray4(4,'class','form-control','type','hidden'),(null as any));
    this._DefaultValueAccessor_2_3 = new import17.Wrapper_DefaultValueAccessor(this.renderer,new import21.ElementRef(this._el_2));
    this._NG_VALUE_ACCESSOR_2_4 = [this._DefaultValueAccessor_2_3.context];
    this._FormControlDirective_2_5 = new import18.Wrapper_FormControlDirective((null as any),(null as any),this._NG_VALUE_ACCESSOR_2_4);
    this._NgControl_2_6 = this._FormControlDirective_2_5.context;
    this._NgControlStatus_2_7 = new import19.Wrapper_NgControlStatus(this._NgControl_2_6);
    this._text_3 = this.renderer.createText(this._el_0,'\n            ',(null as any));
    this._anchor_4 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_4 = new import12.ViewContainer(4,0,this,this._anchor_4);
    this._TemplateRef_4_5 = new import22.TemplateRef_(this,4,this._anchor_4);
    this._NgIf_4_6 = new import20.Wrapper_NgIf(this._vc_4.vcRef,this._TemplateRef_4_5);
    this._text_5 = this.renderer.createText(this._el_0,'\n            ',(null as any));
    this._anchor_6 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_6 = new import12.ViewContainer(6,0,this,this._anchor_6);
    this._TemplateRef_6_5 = new import22.TemplateRef_(this,6,this._anchor_6);
    this._NgIf_6_6 = new import20.Wrapper_NgIf(this._vc_6.vcRef,this._TemplateRef_6_5);
    this._text_7 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_2,new import3.InlineArray4(4,'input',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_2));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._anchor_4,
      this._text_5,
      this._anchor_6,
      this._text_7
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import23.DefaultValueAccessor) && (2 === requestNodeIndex))) { return this._DefaultValueAccessor_2_3.context; }
    if (((token === import24.NG_VALUE_ACCESSOR) && (2 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_2_4; }
    if (((token === import25.FormControlDirective) && (2 === requestNodeIndex))) { return this._FormControlDirective_2_5.context; }
    if (((token === import26.NgControl) && (2 === requestNodeIndex))) { return this._NgControl_2_6; }
    if (((token === import27.NgControlStatus) && (2 === requestNodeIndex))) { return this._NgControlStatus_2_7.context; }
    if (((token === import22.TemplateRef) && (4 === requestNodeIndex))) { return this._TemplateRef_4_5; }
    if (((token === import28.NgIf) && (4 === requestNodeIndex))) { return this._NgIf_4_6.context; }
    if (((token === import22.TemplateRef) && (6 === requestNodeIndex))) { return this._TemplateRef_6_5; }
    if (((token === import28.NgIf) && (6 === requestNodeIndex))) { return this._NgIf_6_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._DefaultValueAccessor_2_3.ngDoCheck(this,this._el_2,throwOnChange);
    const currVal_2_1_0:any = this.parentView.parentView.context.createDefectForm.controls[this.parentView.context.$implicit.fieldKey];
    this._FormControlDirective_2_5.check_form(currVal_2_1_0,throwOnChange,false);
    this._FormControlDirective_2_5.ngDoCheck(this,this._el_2,throwOnChange);
    this._NgControlStatus_2_7.ngDoCheck(this,this._el_2,throwOnChange);
    const currVal_4_0_0:any = (this.parentView.context.$implicit.fieldKey != 'reporter');
    this._NgIf_4_6.check_ngIf(currVal_4_0_0,throwOnChange,false);
    this._NgIf_4_6.ngDoCheck(this,this._anchor_4,throwOnChange);
    const currVal_6_0_0:any = (this.parentView.context.$implicit.fieldKey == 'reporter');
    this._NgIf_6_6.check_ngIf(currVal_6_0_0,throwOnChange,false);
    this._NgIf_6_6.ngDoCheck(this,this._anchor_6,throwOnChange);
    this._vc_4.detectChangesInNestedViews(throwOnChange);
    this._vc_6.detectChangesInNestedViews(throwOnChange);
    const currVal_19:any = import3.inlineInterpolate(1,'',this.parentView.context.$implicit.fieldKey,'');
    if (import3.checkBinding(throwOnChange,this._expr_19,currVal_19)) {
      this.renderer.setElementProperty(this._el_2,'name',currVal_19);
      this._expr_19 = currVal_19;
    }
    this._NgControlStatus_2_7.checkHost(this,this,this._el_2,throwOnChange);
  }
  destroyInternal():void {
    this._vc_4.destroyNestedViews();
    this._vc_6.destroyNestedViews();
    this._FormControlDirective_2_5.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 4)) { return new View_CreateDefectFormComponent4(this.viewUtils,this,4,this._anchor_4,this._vc_4); }
    if ((nodeIndex == 6)) { return new View_CreateDefectFormComponent5(this.viewUtils,this,6,this._anchor_6,this._vc_6); }
    return (null as any);
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_2_3.handleEvent(eventName,$event) && result);
    return result;
  }
}
class View_CreateDefectFormComponent6 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  compView_2:import2.AppView<import29.CDDateComponent>;
  _CDDateComponent_2_3:import30.Wrapper_CDDateComponent;
  _text_3:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_CreateDefectFormComponent6,renderType_CreateDefectFormComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n            ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'cd-date',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_2 = new import30.View_CDDateComponent0(this.viewUtils,this,2,this._el_2);
    this._CDDateComponent_2_3 = new import30.Wrapper_CDDateComponent();
    this.compView_2.create(this._CDDateComponent_2_3.context);
    this._text_3 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_2,new import3.InlineArray2(2,'dateChange',(null as any)),this.eventHandler(this.handleEvent_2));
    this._CDDateComponent_2_3.subscribe(this,this.eventHandler(this.handleEvent_2),true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import29.CDDateComponent) && (2 === requestNodeIndex))) { return this._CDDateComponent_2_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = this.parentView.context.$implicit;
    this._CDDateComponent_2_3.check_field(currVal_2_0_0,throwOnChange,false);
    const currVal_2_0_1:any = this.parentView.parentView.context.createDefectForm.controls[this.parentView.context.$implicit.fieldKey];
    this._CDDateComponent_2_3.check_formkey(currVal_2_0_1,throwOnChange,false);
    this._CDDateComponent_2_3.ngDoCheck(this,this._el_2,throwOnChange);
    this.compView_2.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_2.destroy();
    this._CDDateComponent_2_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'dateChange')) {
      const pd_sub_0:any = ((<any>this.parentView.parentView.context.dateChange($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
class View_CreateDefectFormComponent7 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  compView_2:import2.AppView<import31.CDTextComponent>;
  _DefectsAction_2_3:import6.DefectsAction;
  _CDTextComponent_2_4:import32.Wrapper_CDTextComponent;
  _text_3:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_CreateDefectFormComponent7,renderType_CreateDefectFormComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n            ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'cd-text',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_2 = new import32.View_CDTextComponent0(this.viewUtils,this,2,this._el_2);
    this._DefectsAction_2_3 = new import6.DefectsAction(this.parentView.parentView.parentView.injectorGet(import10.Http,this.parentView.parentView.parentIndex));
    this._CDTextComponent_2_4 = new import32.Wrapper_CDTextComponent(this._DefectsAction_2_3);
    this.compView_2.create(this._CDTextComponent_2_4.context);
    this._text_3 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_2,new import3.InlineArray8(6,'onSingleListUnselect',(null as any),'optionChange',(null as any),'onDescStepsParsing',(null as any)),this.eventHandler(this.handleEvent_2));
    this._CDTextComponent_2_4.subscribe(this,this.eventHandler(this.handleEvent_2),true,true,true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import6.DefectsAction) && (2 === requestNodeIndex))) { return this._DefectsAction_2_3; }
    if (((token === import31.CDTextComponent) && (2 === requestNodeIndex))) { return this._CDTextComponent_2_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = this.parentView.context.$implicit;
    this._CDTextComponent_2_4.check_field(currVal_2_0_0,throwOnChange,false);
    const currVal_2_0_1:any = this.parentView.parentView.context.createDefectForm.controls[this.parentView.context.$implicit.fieldKey];
    this._CDTextComponent_2_4.check_formkey(currVal_2_0_1,throwOnChange,false);
    const currVal_2_0_2:any = this.parentView.parentView.context.disableCopyTestStep;
    this._CDTextComponent_2_4.check_disableCopyTestStep(currVal_2_0_2,throwOnChange,false);
    this._CDTextComponent_2_4.ngDoCheck(this,this._el_2,throwOnChange);
    this.compView_2.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._CDTextComponent_2_4.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_2.destroy();
    this._CDTextComponent_2_4.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onSingleListUnselect')) {
      const pd_sub_0:any = ((<any>this.parentView.parentView.context.onSingleListUnselect($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'optionChange')) {
      const pd_sub_1:any = ((<any>this.parentView.parentView.context.listOptionChange($event)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'onDescStepsParsing')) {
      const pd_sub_2:any = ((<any>this.parentView.parentView.context.descStepsParsing($event)) !== false);
      result = (pd_sub_2 && result);
    }
    return result;
  }
}
class View_CreateDefectFormComponent8 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  compView_2:import2.AppView<import33.CDArrayComponent>;
  _CDArrayComponent_2_3:import34.Wrapper_CDArrayComponent;
  _text_3:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_CreateDefectFormComponent8,renderType_CreateDefectFormComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n            ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'cd-array',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_2 = new import34.View_CDArrayComponent0(this.viewUtils,this,2,this._el_2);
    this._CDArrayComponent_2_3 = new import34.Wrapper_CDArrayComponent(this.compView_2.ref);
    this.compView_2.create(this._CDArrayComponent_2_3.context);
    this._text_3 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_2,new import3.InlineArray16(12,'multiOptionChange',(null as any),'onMultiUserUnselect',(null as any),'onUserUnselect',(null as any),'multiOptionUnSelect',(null as any),'onSetUser',(null as any),'optionChange',(null as any)),this.eventHandler(this.handleEvent_2));
    this._CDArrayComponent_2_3.subscribe(this,this.eventHandler(this.handleEvent_2),true,true,true,true,true,true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import33.CDArrayComponent) && (2 === requestNodeIndex))) { return this._CDArrayComponent_2_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = this.parentView.context.$implicit;
    this._CDArrayComponent_2_3.check_field(currVal_2_0_0,throwOnChange,false);
    const currVal_2_0_1:any = this.parentView.parentView.context.createDefectForm.controls[this.parentView.context.$implicit.fieldKey];
    this._CDArrayComponent_2_3.check_formkey(currVal_2_0_1,throwOnChange,false);
    const currVal_2_0_2:any = this.parentView.parentView.context.selectedProject;
    this._CDArrayComponent_2_3.check_projectkey(currVal_2_0_2,throwOnChange,false);
    if (this._CDArrayComponent_2_3.ngDoCheck(this,this._el_2,throwOnChange)) { this.compView_2.markAsCheckOnce(); }
    this.compView_2.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._CDArrayComponent_2_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_2.destroy();
    this._CDArrayComponent_2_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'multiOptionChange')) {
      const pd_sub_0:any = ((<any>this.parentView.parentView.context.onMultiOptionChange($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'onMultiUserUnselect')) {
      const pd_sub_1:any = ((<any>this.parentView.parentView.context.onMultiUserUnselect($event)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'onUserUnselect')) {
      const pd_sub_2:any = ((<any>this.parentView.parentView.context.onUserUnselect($event)) !== false);
      result = (pd_sub_2 && result);
    }
    if ((eventName == 'multiOptionUnSelect')) {
      const pd_sub_3:any = ((<any>this.parentView.parentView.context.onMultiOptionUnSelect($event)) !== false);
      result = (pd_sub_3 && result);
    }
    if ((eventName == 'onSetUser')) {
      const pd_sub_4:any = ((<any>this.parentView.parentView.context.setUser($event)) !== false);
      result = (pd_sub_4 && result);
    }
    if ((eventName == 'optionChange')) {
      const pd_sub_5:any = ((<any>this.parentView.parentView.context.optionChange($event)) !== false);
      result = (pd_sub_5 && result);
    }
    return result;
  }
}
class View_CreateDefectFormComponent9 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  compView_2:import2.AppView<import15.CDLabelComponent>;
  _CDLabelComponent_2_3:import16.Wrapper_CDLabelComponent;
  _text_3:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_CreateDefectFormComponent9,renderType_CreateDefectFormComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n            ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'cd-label',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_2 = new import16.View_CDLabelComponent0(this.viewUtils,this,2,this._el_2);
    this._CDLabelComponent_2_3 = new import16.Wrapper_CDLabelComponent();
    this.compView_2.create(this._CDLabelComponent_2_3.context);
    this._text_3 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import15.CDLabelComponent) && (2 === requestNodeIndex))) { return this._CDLabelComponent_2_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = this.parentView.context.$implicit;
    this._CDLabelComponent_2_3.check_field(currVal_2_0_0,throwOnChange,false);
    const currVal_2_0_1:any = this.parentView.parentView.context.selectedProject;
    this._CDLabelComponent_2_3.check_fieldValue(currVal_2_0_1,throwOnChange,false);
    this._CDLabelComponent_2_3.ngDoCheck(this,this._el_2,throwOnChange);
    this.compView_2.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_2.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_CreateDefectFormComponent10 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  compView_2:import2.AppView<import15.CDLabelComponent>;
  _CDLabelComponent_2_3:import16.Wrapper_CDLabelComponent;
  _text_3:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_CreateDefectFormComponent10,renderType_CreateDefectFormComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n            ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'cd-label',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_2 = new import16.View_CDLabelComponent0(this.viewUtils,this,2,this._el_2);
    this._CDLabelComponent_2_3 = new import16.Wrapper_CDLabelComponent();
    this.compView_2.create(this._CDLabelComponent_2_3.context);
    this._text_3 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import15.CDLabelComponent) && (2 === requestNodeIndex))) { return this._CDLabelComponent_2_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = this.parentView.context.$implicit;
    this._CDLabelComponent_2_3.check_field(currVal_2_0_0,throwOnChange,false);
    const currVal_2_0_1:any = this.parentView.parentView.context.selectedIssueTypeName;
    this._CDLabelComponent_2_3.check_fieldValue(currVal_2_0_1,throwOnChange,false);
    this._CDLabelComponent_2_3.ngDoCheck(this,this._el_2,throwOnChange);
    this.compView_2.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_2.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_CreateDefectFormComponent11 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  compView_2:import2.AppView<import15.CDLabelComponent>;
  _CDLabelComponent_2_3:import16.Wrapper_CDLabelComponent;
  _text_3:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_CreateDefectFormComponent11,renderType_CreateDefectFormComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n            ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'cd-label',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_2 = new import16.View_CDLabelComponent0(this.viewUtils,this,2,this._el_2);
    this._CDLabelComponent_2_3 = new import16.Wrapper_CDLabelComponent();
    this.compView_2.create(this._CDLabelComponent_2_3.context);
    this._text_3 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import15.CDLabelComponent) && (2 === requestNodeIndex))) { return this._CDLabelComponent_2_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = this.parentView.context.$implicit;
    this._CDLabelComponent_2_3.check_field(currVal_2_0_0,throwOnChange,false);
    const currVal_2_0_1:any = this.parentView.parentView.context.parentIssueKey;
    this._CDLabelComponent_2_3.check_fieldValue(currVal_2_0_1,throwOnChange,false);
    this._CDLabelComponent_2_3.ngDoCheck(this,this._el_2,throwOnChange);
    this.compView_2.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_2.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_CreateDefectFormComponent12 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  compView_2:import2.AppView<import35.CDOptionWithChildComponent>;
  _CDOptionWithChildComponent_2_3:import36.Wrapper_CDOptionWithChildComponent;
  _text_3:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_CreateDefectFormComponent12,renderType_CreateDefectFormComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',new import3.InlineArray2(2,'class','col-md-12 option-with-child'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n          ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'cd-optionwithchild',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_2 = new import36.View_CDOptionWithChildComponent0(this.viewUtils,this,2,this._el_2);
    this._CDOptionWithChildComponent_2_3 = new import36.Wrapper_CDOptionWithChildComponent();
    this.compView_2.create(this._CDOptionWithChildComponent_2_3.context);
    this._text_3 = this.renderer.createText(this._el_0,'\n\n        ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_2,new import3.InlineArray2(2,'optionChange',(null as any)),this.eventHandler(this.handleEvent_2));
    this._CDOptionWithChildComponent_2_3.subscribe(this,this.eventHandler(this.handleEvent_2),true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import35.CDOptionWithChildComponent) && (2 === requestNodeIndex))) { return this._CDOptionWithChildComponent_2_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = this.parentView.context.$implicit;
    this._CDOptionWithChildComponent_2_3.check_field(currVal_2_0_0,throwOnChange,false);
    const currVal_2_0_1:any = this.parentView.context.$implicit.fieldKey;
    this._CDOptionWithChildComponent_2_3.check_formkey(currVal_2_0_1,throwOnChange,false);
    const currVal_2_0_2:any = this.parentView.parentView.context.selectedProject;
    this._CDOptionWithChildComponent_2_3.check_projectkey(currVal_2_0_2,throwOnChange,false);
    const currVal_2_0_3:any = this.parentView.parentView.context.isUpdate;
    this._CDOptionWithChildComponent_2_3.check_isUpdate(currVal_2_0_3,throwOnChange,false);
    const currVal_2_0_4:any = this.parentView.parentView.context.casCadeSelectDefault;
    this._CDOptionWithChildComponent_2_3.check_casCadeSelectDefault(currVal_2_0_4,throwOnChange,false);
    if (this._CDOptionWithChildComponent_2_3.ngDoCheck(this,this._el_2,throwOnChange)) { this.compView_2.markAsCheckOnce(); }
    this.compView_2.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._CDOptionWithChildComponent_2_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_2.destroy();
    this._CDOptionWithChildComponent_2_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'optionChange')) {
      const pd_sub_0:any = ((<any>this.parentView.parentView.context.optionChange($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
class View_CreateDefectFormComponent2 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _vc_2:import12.ViewContainer;
  _TemplateRef_2_5:any;
  _NgIf_2_6:import20.Wrapper_NgIf;
  _text_3:any;
  _anchor_4:any;
  /*private*/ _vc_4:import12.ViewContainer;
  _TemplateRef_4_5:any;
  _NgIf_4_6:import20.Wrapper_NgIf;
  _text_5:any;
  _anchor_6:any;
  /*private*/ _vc_6:import12.ViewContainer;
  _TemplateRef_6_5:any;
  _NgIf_6_6:import20.Wrapper_NgIf;
  _text_7:any;
  _anchor_8:any;
  /*private*/ _vc_8:import12.ViewContainer;
  _TemplateRef_8_5:any;
  _NgIf_8_6:import20.Wrapper_NgIf;
  _text_9:any;
  _anchor_10:any;
  /*private*/ _vc_10:import12.ViewContainer;
  _TemplateRef_10_5:any;
  _NgIf_10_6:import20.Wrapper_NgIf;
  _text_11:any;
  _anchor_12:any;
  /*private*/ _vc_12:import12.ViewContainer;
  _TemplateRef_12_5:any;
  _NgIf_12_6:import20.Wrapper_NgIf;
  _text_13:any;
  _anchor_14:any;
  /*private*/ _vc_14:import12.ViewContainer;
  _TemplateRef_14_5:any;
  _NgIf_14_6:import20.Wrapper_NgIf;
  _text_15:any;
  _anchor_16:any;
  /*private*/ _vc_16:import12.ViewContainer;
  _TemplateRef_16_5:any;
  _NgIf_16_6:import20.Wrapper_NgIf;
  _text_17:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_CreateDefectFormComponent2,renderType_CreateDefectFormComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_2 = new import12.ViewContainer(2,0,this,this._anchor_2);
    this._TemplateRef_2_5 = new import22.TemplateRef_(this,2,this._anchor_2);
    this._NgIf_2_6 = new import20.Wrapper_NgIf(this._vc_2.vcRef,this._TemplateRef_2_5);
    this._text_3 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    this._anchor_4 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_4 = new import12.ViewContainer(4,0,this,this._anchor_4);
    this._TemplateRef_4_5 = new import22.TemplateRef_(this,4,this._anchor_4);
    this._NgIf_4_6 = new import20.Wrapper_NgIf(this._vc_4.vcRef,this._TemplateRef_4_5);
    this._text_5 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    this._anchor_6 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_6 = new import12.ViewContainer(6,0,this,this._anchor_6);
    this._TemplateRef_6_5 = new import22.TemplateRef_(this,6,this._anchor_6);
    this._NgIf_6_6 = new import20.Wrapper_NgIf(this._vc_6.vcRef,this._TemplateRef_6_5);
    this._text_7 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    this._anchor_8 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_8 = new import12.ViewContainer(8,0,this,this._anchor_8);
    this._TemplateRef_8_5 = new import22.TemplateRef_(this,8,this._anchor_8);
    this._NgIf_8_6 = new import20.Wrapper_NgIf(this._vc_8.vcRef,this._TemplateRef_8_5);
    this._text_9 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    this._anchor_10 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_10 = new import12.ViewContainer(10,0,this,this._anchor_10);
    this._TemplateRef_10_5 = new import22.TemplateRef_(this,10,this._anchor_10);
    this._NgIf_10_6 = new import20.Wrapper_NgIf(this._vc_10.vcRef,this._TemplateRef_10_5);
    this._text_11 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    this._anchor_12 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_12 = new import12.ViewContainer(12,0,this,this._anchor_12);
    this._TemplateRef_12_5 = new import22.TemplateRef_(this,12,this._anchor_12);
    this._NgIf_12_6 = new import20.Wrapper_NgIf(this._vc_12.vcRef,this._TemplateRef_12_5);
    this._text_13 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    this._anchor_14 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_14 = new import12.ViewContainer(14,0,this,this._anchor_14);
    this._TemplateRef_14_5 = new import22.TemplateRef_(this,14,this._anchor_14);
    this._NgIf_14_6 = new import20.Wrapper_NgIf(this._vc_14.vcRef,this._TemplateRef_14_5);
    this._text_15 = this.renderer.createText(this._el_0,'\n\n        ',(null as any));
    this._anchor_16 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_16 = new import12.ViewContainer(16,0,this,this._anchor_16);
    this._TemplateRef_16_5 = new import22.TemplateRef_(this,16,this._anchor_16);
    this._NgIf_16_6 = new import20.Wrapper_NgIf(this._vc_16.vcRef,this._TemplateRef_16_5);
    this._text_17 = this.renderer.createText(this._el_0,'\n\n    ',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._anchor_2,
      this._text_3,
      this._anchor_4,
      this._text_5,
      this._anchor_6,
      this._text_7,
      this._anchor_8,
      this._text_9,
      this._anchor_10,
      this._text_11,
      this._anchor_12,
      this._text_13,
      this._anchor_14,
      this._text_15,
      this._anchor_16,
      this._text_17
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import22.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import28.NgIf) && (2 === requestNodeIndex))) { return this._NgIf_2_6.context; }
    if (((token === import22.TemplateRef) && (4 === requestNodeIndex))) { return this._TemplateRef_4_5; }
    if (((token === import28.NgIf) && (4 === requestNodeIndex))) { return this._NgIf_4_6.context; }
    if (((token === import22.TemplateRef) && (6 === requestNodeIndex))) { return this._TemplateRef_6_5; }
    if (((token === import28.NgIf) && (6 === requestNodeIndex))) { return this._NgIf_6_6.context; }
    if (((token === import22.TemplateRef) && (8 === requestNodeIndex))) { return this._TemplateRef_8_5; }
    if (((token === import28.NgIf) && (8 === requestNodeIndex))) { return this._NgIf_8_6.context; }
    if (((token === import22.TemplateRef) && (10 === requestNodeIndex))) { return this._TemplateRef_10_5; }
    if (((token === import28.NgIf) && (10 === requestNodeIndex))) { return this._NgIf_10_6.context; }
    if (((token === import22.TemplateRef) && (12 === requestNodeIndex))) { return this._TemplateRef_12_5; }
    if (((token === import28.NgIf) && (12 === requestNodeIndex))) { return this._NgIf_12_6.context; }
    if (((token === import22.TemplateRef) && (14 === requestNodeIndex))) { return this._TemplateRef_14_5; }
    if (((token === import28.NgIf) && (14 === requestNodeIndex))) { return this._NgIf_14_6.context; }
    if (((token === import22.TemplateRef) && (16 === requestNodeIndex))) { return this._TemplateRef_16_5; }
    if (((token === import28.NgIf) && (16 === requestNodeIndex))) { return this._NgIf_16_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = (this.context.$implicit.schema && (this.context.$implicit.schema.type == 'user'));
    this._NgIf_2_6.check_ngIf(currVal_2_0_0,throwOnChange,false);
    this._NgIf_2_6.ngDoCheck(this,this._anchor_2,throwOnChange);
    const currVal_4_0_0:any = (this.context.$implicit.schema && (this.context.$implicit.schema.type == 'date'));
    this._NgIf_4_6.check_ngIf(currVal_4_0_0,throwOnChange,false);
    this._NgIf_4_6.ngDoCheck(this,this._anchor_4,throwOnChange);
    const currVal_6_0_0:any = (this.context.$implicit.schema && (((((this.context.$implicit.schema.type == 'string') || (this.context.$implicit.schema.type == 'any')) || (this.context.$implicit.schema.type == 'number')) || (this.context.$implicit.schema.type == 'option')) || (this.context.$implicit.schema.type == 'group')));
    this._NgIf_6_6.check_ngIf(currVal_6_0_0,throwOnChange,false);
    this._NgIf_6_6.ngDoCheck(this,this._anchor_6,throwOnChange);
    const currVal_8_0_0:any = (this.context.$implicit.schema && (((this.context.$implicit.schema.type == 'array') || (this.context.$implicit.schema.type == 'priority')) || (this.context.$implicit.schema.type == 'version')));
    this._NgIf_8_6.check_ngIf(currVal_8_0_0,throwOnChange,false);
    this._NgIf_8_6.ngDoCheck(this,this._anchor_8,throwOnChange);
    const currVal_10_0_0:any = (this.context.$implicit.schema && (this.context.$implicit.schema.type == 'project'));
    this._NgIf_10_6.check_ngIf(currVal_10_0_0,throwOnChange,false);
    this._NgIf_10_6.ngDoCheck(this,this._anchor_10,throwOnChange);
    const currVal_12_0_0:any = (this.context.$implicit.schema && (this.context.$implicit.schema.type == 'issuetype'));
    this._NgIf_12_6.check_ngIf(currVal_12_0_0,throwOnChange,false);
    this._NgIf_12_6.ngDoCheck(this,this._anchor_12,throwOnChange);
    const currVal_14_0_0:any = ((this.context.$implicit.schema && (this.context.$implicit.schema.type == 'issuelink')) && this.parentView.context.parentIssueKey);
    this._NgIf_14_6.check_ngIf(currVal_14_0_0,throwOnChange,false);
    this._NgIf_14_6.ngDoCheck(this,this._anchor_14,throwOnChange);
    const currVal_16_0_0:any = (this.context.$implicit.schema && (this.context.$implicit.schema.type == 'option-with-child'));
    this._NgIf_16_6.check_ngIf(currVal_16_0_0,throwOnChange,false);
    this._NgIf_16_6.ngDoCheck(this,this._anchor_16,throwOnChange);
    this._vc_2.detectChangesInNestedViews(throwOnChange);
    this._vc_4.detectChangesInNestedViews(throwOnChange);
    this._vc_6.detectChangesInNestedViews(throwOnChange);
    this._vc_8.detectChangesInNestedViews(throwOnChange);
    this._vc_10.detectChangesInNestedViews(throwOnChange);
    this._vc_12.detectChangesInNestedViews(throwOnChange);
    this._vc_14.detectChangesInNestedViews(throwOnChange);
    this._vc_16.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_2.destroyNestedViews();
    this._vc_4.destroyNestedViews();
    this._vc_6.destroyNestedViews();
    this._vc_8.destroyNestedViews();
    this._vc_10.destroyNestedViews();
    this._vc_12.destroyNestedViews();
    this._vc_14.destroyNestedViews();
    this._vc_16.destroyNestedViews();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 2)) { return new View_CreateDefectFormComponent3(this.viewUtils,this,2,this._anchor_2,this._vc_2); }
    if ((nodeIndex == 4)) { return new View_CreateDefectFormComponent6(this.viewUtils,this,4,this._anchor_4,this._vc_4); }
    if ((nodeIndex == 6)) { return new View_CreateDefectFormComponent7(this.viewUtils,this,6,this._anchor_6,this._vc_6); }
    if ((nodeIndex == 8)) { return new View_CreateDefectFormComponent8(this.viewUtils,this,8,this._anchor_8,this._vc_8); }
    if ((nodeIndex == 10)) { return new View_CreateDefectFormComponent9(this.viewUtils,this,10,this._anchor_10,this._vc_10); }
    if ((nodeIndex == 12)) { return new View_CreateDefectFormComponent10(this.viewUtils,this,12,this._anchor_12,this._vc_12); }
    if ((nodeIndex == 14)) { return new View_CreateDefectFormComponent11(this.viewUtils,this,14,this._anchor_14,this._vc_14); }
    if ((nodeIndex == 16)) { return new View_CreateDefectFormComponent12(this.viewUtils,this,16,this._anchor_16,this._vc_16); }
    return (null as any);
  }
}
class View_CreateDefectFormComponent13 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  compView_2:import2.AppView<import37.AttachmentsComponent>;
  _GlobalAction_2_3:import38.GlobalAction;
  _DefectsAction_2_4:import6.DefectsAction;
  _AttachmentsComponent_2_5:import39.Wrapper_AttachmentsComponent;
  _text_3:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_CreateDefectFormComponent13,renderType_CreateDefectFormComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'attachments',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_2 = new import39.View_AttachmentsComponent0(this.viewUtils,this,2,this._el_2);
    this._GlobalAction_2_3 = new import38.GlobalAction(this.parentView.parentView.injectorGet(import10.Http,this.parentView.parentIndex));
    this._DefectsAction_2_4 = new import6.DefectsAction(this.parentView.parentView.injectorGet(import10.Http,this.parentView.parentIndex));
    this._AttachmentsComponent_2_5 = new import39.Wrapper_AttachmentsComponent(this._GlobalAction_2_3,this._DefectsAction_2_4,this.compView_2.ref);
    this.compView_2.create(this._AttachmentsComponent_2_5.context);
    this._text_3 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import38.GlobalAction) && (2 === requestNodeIndex))) { return this._GlobalAction_2_3; }
    if (((token === import6.DefectsAction) && (2 === requestNodeIndex))) { return this._DefectsAction_2_4; }
    if (((token === import37.AttachmentsComponent) && (2 === requestNodeIndex))) { return this._AttachmentsComponent_2_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = 'defect';
    this._AttachmentsComponent_2_5.check_entityType(currVal_2_0_0,throwOnChange,false);
    const currVal_2_0_1:any = true;
    this._AttachmentsComponent_2_5.check_isdefectView(currVal_2_0_1,throwOnChange,false);
    const currVal_2_0_2:any = true;
    this._AttachmentsComponent_2_5.check_isEditAvaiable(currVal_2_0_2,throwOnChange,false);
    const currVal_2_0_3:any = this.parentView.context.selectedDefect.id;
    this._AttachmentsComponent_2_5.check_id(currVal_2_0_3,throwOnChange,false);
    this._AttachmentsComponent_2_5.ngDoCheck(this,this._el_2,throwOnChange);
    this.compView_2.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._AttachmentsComponent_2_5.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_2.destroy();
    this._AttachmentsComponent_2_5.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
var renderType_CreateDefectFormComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,styles_CreateDefectFormComponent,{});
export class View_CreateDefectFormComponent0 extends import2.AppView<import0.CreateDefectFormComponent> {
  _anchor_0:any;
  /*private*/ _vc_0:import12.ViewContainer;
  _TemplateRef_0_5:any;
  _NgIf_0_6:import20.Wrapper_NgIf;
  _text_1:any;
  _el_2:any;
  _NgClass_2_3:import40.Wrapper_NgClass;
  _FormGroupDirective_2_4:import41.Wrapper_FormGroupDirective;
  _ControlContainer_2_5:any;
  _NgControlStatusGroup_2_6:import19.Wrapper_NgControlStatusGroup;
  _text_3:any;
  _anchor_4:any;
  /*private*/ _vc_4:import12.ViewContainer;
  _TemplateRef_4_5:any;
  _NgFor_4_6:import42.Wrapper_NgFor;
  _text_5:any;
  _anchor_6:any;
  /*private*/ _vc_6:import12.ViewContainer;
  _TemplateRef_6_5:any;
  _NgIf_6_6:import20.Wrapper_NgIf;
  _text_7:any;
  _text_8:any;
  _map_22:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CreateDefectFormComponent0,renderType_CreateDefectFormComponent,import7.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckOnce);
    this._map_22 = import3.pureProxy1((p0:any):{[key: string]:any} => {
      return {hide: p0};
    });
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._anchor_0 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._vc_0 = new import12.ViewContainer(0,(null as any),this,this._anchor_0);
    this._TemplateRef_0_5 = new import22.TemplateRef_(this,0,this._anchor_0);
    this._NgIf_0_6 = new import20.Wrapper_NgIf(this._vc_0.vcRef,this._TemplateRef_0_5);
    this._text_1 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,parentRenderNode,'form',new import3.InlineArray2(2,'id','create-defects-fields-form'),(null as any));
    this._NgClass_2_3 = new import40.Wrapper_NgClass(this.parentView.injectorGet(import43.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import44.KeyValueDiffers,this.parentIndex),new import21.ElementRef(this._el_2),this.renderer);
    this._FormGroupDirective_2_4 = new import41.Wrapper_FormGroupDirective((null as any),(null as any));
    this._ControlContainer_2_5 = this._FormGroupDirective_2_4.context;
    this._NgControlStatusGroup_2_6 = new import19.Wrapper_NgControlStatusGroup(this._ControlContainer_2_5);
    this._text_3 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._anchor_4 = this.renderer.createTemplateAnchor(this._el_2,(null as any));
    this._vc_4 = new import12.ViewContainer(4,2,this,this._anchor_4);
    this._TemplateRef_4_5 = new import22.TemplateRef_(this,4,this._anchor_4);
    this._NgFor_4_6 = new import42.Wrapper_NgFor(this._vc_4.vcRef,this._TemplateRef_4_5,this.parentView.injectorGet(import43.IterableDiffers,this.parentIndex),this.ref);
    this._text_5 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._anchor_6 = this.renderer.createTemplateAnchor(this._el_2,(null as any));
    this._vc_6 = new import12.ViewContainer(6,2,this,this._anchor_6);
    this._TemplateRef_6_5 = new import22.TemplateRef_(this,6,this._anchor_6);
    this._NgIf_6_6 = new import20.Wrapper_NgIf(this._vc_6.vcRef,this._TemplateRef_6_5);
    this._text_7 = this.renderer.createText(this._el_2,'\n',(null as any));
    this._text_8 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_2,new import3.InlineArray4(4,'submit',(null as any),'reset',(null as any)),this.eventHandler(this.handleEvent_2));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._anchor_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._anchor_4,
      this._text_5,
      this._anchor_6,
      this._text_7,
      this._text_8
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import22.TemplateRef) && (0 === requestNodeIndex))) { return this._TemplateRef_0_5; }
    if (((token === import28.NgIf) && (0 === requestNodeIndex))) { return this._NgIf_0_6.context; }
    if (((token === import22.TemplateRef) && (4 === requestNodeIndex))) { return this._TemplateRef_4_5; }
    if (((token === import45.NgFor) && (4 === requestNodeIndex))) { return this._NgFor_4_6.context; }
    if (((token === import22.TemplateRef) && (6 === requestNodeIndex))) { return this._TemplateRef_6_5; }
    if (((token === import28.NgIf) && (6 === requestNodeIndex))) { return this._NgIf_6_6.context; }
    if (((token === import46.NgClass) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 7)))) { return this._NgClass_2_3.context; }
    if (((token === import47.FormGroupDirective) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 7)))) { return this._FormGroupDirective_2_4.context; }
    if (((token === import48.ControlContainer) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 7)))) { return this._ControlContainer_2_5; }
    if (((token === import27.NgControlStatusGroup) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 7)))) { return this._NgControlStatusGroup_2_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.context.hideDefectForm;
    this._NgIf_0_6.check_ngIf(currVal_0_0_0,throwOnChange,false);
    this._NgIf_0_6.ngDoCheck(this,this._anchor_0,throwOnChange);
    const currVal_2_0_0:any = this._map_22(this.context.hideDefectForm);
    this._NgClass_2_3.check_ngClass(currVal_2_0_0,throwOnChange,false);
    this._NgClass_2_3.ngDoCheck(this,this._el_2,throwOnChange);
    const currVal_2_1_0:any = this.context.createDefectForm;
    this._FormGroupDirective_2_4.check_form(currVal_2_1_0,throwOnChange,false);
    this._FormGroupDirective_2_4.ngDoCheck(this,this._el_2,throwOnChange);
    this._NgControlStatusGroup_2_6.ngDoCheck(this,this._el_2,throwOnChange);
    const currVal_4_0_0:any = this.context.fieldsArray;
    this._NgFor_4_6.check_ngForOf(currVal_4_0_0,throwOnChange,false);
    this._NgFor_4_6.ngDoCheck(this,this._anchor_4,throwOnChange);
    const currVal_6_0_0:any = this.context.isUpdate;
    this._NgIf_6_6.check_ngIf(currVal_6_0_0,throwOnChange,false);
    this._NgIf_6_6.ngDoCheck(this,this._anchor_6,throwOnChange);
    this._vc_0.detectChangesInNestedViews(throwOnChange);
    this._vc_4.detectChangesInNestedViews(throwOnChange);
    this._vc_6.detectChangesInNestedViews(throwOnChange);
    this._NgControlStatusGroup_2_6.checkHost(this,this,this._el_2,throwOnChange);
  }
  destroyInternal():void {
    this._vc_0.destroyNestedViews();
    this._vc_4.destroyNestedViews();
    this._vc_6.destroyNestedViews();
    this._FormGroupDirective_2_4.ngOnDestroy();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 0)) { return new View_CreateDefectFormComponent1(this.viewUtils,this,0,this._anchor_0,this._vc_0); }
    if ((nodeIndex == 4)) { return new View_CreateDefectFormComponent2(this.viewUtils,this,4,this._anchor_4,this._vc_4); }
    if ((nodeIndex == 6)) { return new View_CreateDefectFormComponent13(this.viewUtils,this,6,this._anchor_6,this._vc_6); }
    return (null as any);
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._FormGroupDirective_2_4.handleEvent(eventName,$event) && result);
    return result;
  }
}