/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../../../../../app/view/components/defects/defect_link/create_defect/fields/cd_user.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '@angular/core/src/linker/view_container';
import * as import10 from '../../../../../../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import11 from '../../../../../../../../app/view/components/common/select/select.component';
import * as import12 from '../../../../common/select/select.component.ngfactory';
import * as import13 from '@angular/core/src/linker/template_ref';
import * as import14 from '@angular/core/src/linker/element_ref';
import * as import15 from '@angular/common/src/directives/ng_if';
export class Wrapper_CDUserComponent {
  /*private*/ _eventHandler:Function;
  context:import0.CDUserComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  subscription0:any;
  subscription1:any;
  subscription2:any;
  constructor() {
    this._changed = false;
    this.context = new import0.CDUserComponent();
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
    (this.subscription1 && this.subscription1.unsubscribe());
    (this.subscription2 && this.subscription2.unsubscribe());
  }
  check_field(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.field = currValue;
      this._expr_0 = currValue;
    }
  }
  check_formkey(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.formkey = currValue;
      this._expr_1 = currValue;
    }
  }
  check_projectkey(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.projectkey = currValue;
      this._expr_2 = currValue;
    }
  }
  check_hideLabel(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.hideLabel = currValue;
      this._expr_3 = currValue;
    }
  }
  check_multiple(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.multiple = currValue;
      this._expr_4 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean,emit1:boolean,emit2:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.onUserSelect.subscribe(_eventHandler.bind(view,'onUserSelect'))); }
    if (emit1) { (this.subscription1 = this.context.onUserUnselect.subscribe(_eventHandler.bind(view,'onUserUnselect'))); }
    if (emit2) { (this.subscription2 = this.context.onMultiUserUnselect.subscribe(_eventHandler.bind(view,'onMultiUserUnselect'))); }
  }
}
var renderType_CDUserComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_CDUserComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.CDUserComponent>;
  _CDUserComponent_0_3:Wrapper_CDUserComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CDUserComponent_Host0,renderType_CDUserComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'cd-user',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_CDUserComponent0(this.viewUtils,this,0,this._el_0);
    this._CDUserComponent_0_3 = new Wrapper_CDUserComponent();
    this.compView_0.create(this._CDUserComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._CDUserComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.CDUserComponent) && (0 === requestNodeIndex))) { return this._CDUserComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._CDUserComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._CDUserComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const CDUserComponentNgFactory:import8.ComponentFactory<import0.CDUserComponent> = new import8.ComponentFactory<import0.CDUserComponent>('cd-user',View_CDUserComponent_Host0,import0.CDUserComponent);
const styles_CDUserComponent:any[] = ([] as any[]);
class View_CDUserComponent2 extends import2.AppView<any> {
  _el_0:any;
  _el_1:any;
  _text_2:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import9.ViewContainer) {
    super(View_CDUserComponent2,renderType_CDUserComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'label',new import3.InlineArray2(2,'class','required'),(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,this._el_0,'b',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_2 = this.renderer.createText(this._el_1,'Â *',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._el_1,
      this._text_2
    ]
    ),(null as any));
    return (null as any);
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_CDUserComponent1 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _el_6:any;
  _el_7:any;
  _text_8:any;
  _text_9:any;
  _anchor_10:any;
  /*private*/ _vc_10:import9.ViewContainer;
  _TemplateRef_10_5:any;
  _NgIf_10_6:import10.Wrapper_NgIf;
  _text_11:any;
  _text_12:any;
  _text_13:any;
  _el_14:any;
  _text_15:any;
  _el_16:any;
  _text_17:any;
  _el_18:any;
  compView_18:import2.AppView<import11.SelectComponent>;
  _SelectComponent_18_3:import12.Wrapper_SelectComponent;
  _text_19:any;
  _text_20:any;
  _text_21:any;
  /*private*/ _expr_27:any;
  /*private*/ _expr_28:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import9.ViewContainer) {
    super(View_CDUserComponent1,renderType_CDUserComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_27 = import1.UNINITIALIZED;
    this._expr_28 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',new import3.InlineArray2(2,'class','col-md-12 fieldWrapper'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','col-md-2'),(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'\n        ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_2,'span',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_5 = this.renderer.createText(this._el_4,'\n            ',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_4,'label',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._el_7 = import3.createRenderElement(this.renderer,this._el_6,'b',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_8 = this.renderer.createText(this._el_7,'',(null as any));
    this._text_9 = this.renderer.createText(this._el_4,'\n            ',(null as any));
    this._anchor_10 = this.renderer.createTemplateAnchor(this._el_4,(null as any));
    this._vc_10 = new import9.ViewContainer(10,4,this,this._anchor_10);
    this._TemplateRef_10_5 = new import13.TemplateRef_(this,10,this._anchor_10);
    this._NgIf_10_6 = new import10.Wrapper_NgIf(this._vc_10.vcRef,this._TemplateRef_10_5);
    this._text_11 = this.renderer.createText(this._el_4,'Â :\n        ',(null as any));
    this._text_12 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._text_13 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_14 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','col-md-9'),(null as any));
    this._text_15 = this.renderer.createText(this._el_14,'\n        ',(null as any));
    this._el_16 = import3.createRenderElement(this.renderer,this._el_14,'span',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_17 = this.renderer.createText(this._el_16,'\n        ',(null as any));
    this._el_18 = import3.createRenderElement(this.renderer,this._el_16,'zee-select',new import3.InlineArray2(2,'class','defect_user'),(null as any));
    this.compView_18 = new import12.View_SelectComponent0(this.viewUtils,this,18,this._el_18);
    this._SelectComponent_18_3 = new import12.Wrapper_SelectComponent(new import14.ElementRef(this._el_18));
    this.compView_18.create(this._SelectComponent_18_3.context);
    this._text_19 = this.renderer.createText(this._el_16,'\n        ',(null as any));
    this._text_20 = this.renderer.createText(this._el_14,'\n    ',(null as any));
    this._text_21 = this.renderer.createText(this._el_0,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_18,new import3.InlineArray4(4,'onSelect',(null as any),'onUnselect',(null as any)),this.eventHandler(this.handleEvent_18));
    this._SelectComponent_18_3.subscribe(this,this.eventHandler(this.handleEvent_18),true,true,false,false);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._el_7,
      this._text_8,
      this._text_9,
      this._anchor_10,
      this._text_11,
      this._text_12,
      this._text_13,
      this._el_14,
      this._text_15,
      this._el_16,
      this._text_17,
      this._el_18,
      this._text_19,
      this._text_20,
      this._text_21
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import13.TemplateRef) && (10 === requestNodeIndex))) { return this._TemplateRef_10_5; }
    if (((token === import15.NgIf) && (10 === requestNodeIndex))) { return this._NgIf_10_6.context; }
    if (((token === import11.SelectComponent) && (18 === requestNodeIndex))) { return this._SelectComponent_18_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_10_0_0:any = this.parentView.context.field.required;
    this._NgIf_10_6.check_ngIf(currVal_10_0_0,throwOnChange,false);
    this._NgIf_10_6.ngDoCheck(this,this._anchor_10,throwOnChange);
    const currVal_18_0_0:any = (this.parentView.context.field.fieldKey + '-autocomplete');
    this._SelectComponent_18_3.check_selectClass(currVal_18_0_0,throwOnChange,false);
    const currVal_18_0_1:any = (this.parentView.context.field.fieldKey + '-field');
    this._SelectComponent_18_3.check_selectId(currVal_18_0_1,throwOnChange,false);
    const currVal_18_0_2:any = true;
    this._SelectComponent_18_3.check_allowClear(currVal_18_0_2,throwOnChange,false);
    const currVal_18_0_3:any = 'User';
    this._SelectComponent_18_3.check_placeholder(currVal_18_0_3,throwOnChange,false);
    const currVal_18_0_4:any = this.parentView.context.getSelect2Options('user');
    this._SelectComponent_18_3.check_editOptions(currVal_18_0_4,throwOnChange,false);
    this._SelectComponent_18_3.ngDoCheck(this,this._el_18,throwOnChange);
    this._vc_10.detectChangesInNestedViews(throwOnChange);
    const currVal_27:any = import3.inlineInterpolate(1,'',this.parentView.context.field.name,'');
    if (import3.checkBinding(throwOnChange,this._expr_27,currVal_27)) {
      this.renderer.setText(this._text_8,currVal_27);
      this._expr_27 = currVal_27;
    }
    const currVal_28:any = this.parentView.context.formkey;
    if (import3.checkBinding(throwOnChange,this._expr_28,currVal_28)) {
      this.renderer.setElementProperty(this._el_18,'formKey',currVal_28);
      this._expr_28 = currVal_28;
    }
    this.compView_18.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._SelectComponent_18_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this._vc_10.destroyNestedViews();
    this.compView_18.destroy();
    this._SelectComponent_18_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 10)) { return new View_CDUserComponent2(this.viewUtils,this,10,this._anchor_10,this._vc_10); }
    return (null as any);
  }
  handleEvent_18(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onSelect')) {
      const pd_sub_0:any = ((<any>this.parentView.context.userUpdate($event,this.parentView.context.field.fieldKey)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'onUnselect')) {
      const pd_sub_1:any = ((<any>this.parentView.context.userUnselect($event,this.parentView.context.field.fieldKey)) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
}
class View_CDUserComponent3 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  compView_2:import2.AppView<import11.SelectComponent>;
  _SelectComponent_2_3:import12.Wrapper_SelectComponent;
  _text_3:any;
  /*private*/ _expr_6:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import9.ViewContainer) {
    super(View_CDUserComponent3,renderType_CDUserComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_6 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'span',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'zee-select',new import3.InlineArray2(2,'class','defect_user'),(null as any));
    this.compView_2 = new import12.View_SelectComponent0(this.viewUtils,this,2,this._el_2);
    this._SelectComponent_2_3 = new import12.Wrapper_SelectComponent(new import14.ElementRef(this._el_2));
    this.compView_2.create(this._SelectComponent_2_3.context);
    this._text_3 = this.renderer.createText(this._el_0,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_2,new import3.InlineArray4(4,'onSelect',(null as any),'onUnselect',(null as any)),this.eventHandler(this.handleEvent_2));
    this._SelectComponent_2_3.subscribe(this,this.eventHandler(this.handleEvent_2),true,true,false,false);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import11.SelectComponent) && (2 === requestNodeIndex))) { return this._SelectComponent_2_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = (this.parentView.context.field.fieldKey + '-autocomplete');
    this._SelectComponent_2_3.check_selectClass(currVal_2_0_0,throwOnChange,false);
    const currVal_2_0_1:any = (this.parentView.context.field.fieldKey + '-field');
    this._SelectComponent_2_3.check_selectId(currVal_2_0_1,throwOnChange,false);
    const currVal_2_0_2:any = true;
    this._SelectComponent_2_3.check_allowClear(currVal_2_0_2,throwOnChange,false);
    const currVal_2_0_3:any = this.parentView.context.multiple;
    this._SelectComponent_2_3.check_multiple(currVal_2_0_3,throwOnChange,false);
    const currVal_2_0_4:any = 'User';
    this._SelectComponent_2_3.check_placeholder(currVal_2_0_4,throwOnChange,false);
    const currVal_2_0_5:any = this.parentView.context.getSelect2Options('user');
    this._SelectComponent_2_3.check_editOptions(currVal_2_0_5,throwOnChange,false);
    this._SelectComponent_2_3.ngDoCheck(this,this._el_2,throwOnChange);
    const currVal_6:any = this.parentView.context.formkey;
    if (import3.checkBinding(throwOnChange,this._expr_6,currVal_6)) {
      this.renderer.setElementProperty(this._el_2,'formKey',currVal_6);
      this._expr_6 = currVal_6;
    }
    this.compView_2.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._SelectComponent_2_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_2.destroy();
    this._SelectComponent_2_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onSelect')) {
      const pd_sub_0:any = ((<any>this.parentView.context.userUpdate($event,this.parentView.context.field.fieldKey)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'onUnselect')) {
      const pd_sub_1:any = ((<any>this.parentView.context.multiUserUnselect($event,this.parentView.context.field.fieldKey)) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
}
var renderType_CDUserComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,styles_CDUserComponent,{});
export class View_CDUserComponent0 extends import2.AppView<import0.CDUserComponent> {
  _anchor_0:any;
  /*private*/ _vc_0:import9.ViewContainer;
  _TemplateRef_0_5:any;
  _NgIf_0_6:import10.Wrapper_NgIf;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _vc_2:import9.ViewContainer;
  _TemplateRef_2_5:any;
  _NgIf_2_6:import10.Wrapper_NgIf;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CDUserComponent0,renderType_CDUserComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._anchor_0 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._vc_0 = new import9.ViewContainer(0,(null as any),this,this._anchor_0);
    this._TemplateRef_0_5 = new import13.TemplateRef_(this,0,this._anchor_0);
    this._NgIf_0_6 = new import10.Wrapper_NgIf(this._vc_0.vcRef,this._TemplateRef_0_5);
    this._text_1 = this.renderer.createText(parentRenderNode,'\n\n',(null as any));
    this._anchor_2 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._vc_2 = new import9.ViewContainer(2,(null as any),this,this._anchor_2);
    this._TemplateRef_2_5 = new import13.TemplateRef_(this,2,this._anchor_2);
    this._NgIf_2_6 = new import10.Wrapper_NgIf(this._vc_2.vcRef,this._TemplateRef_2_5);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._anchor_0,
      this._text_1,
      this._anchor_2
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import13.TemplateRef) && (0 === requestNodeIndex))) { return this._TemplateRef_0_5; }
    if (((token === import15.NgIf) && (0 === requestNodeIndex))) { return this._NgIf_0_6.context; }
    if (((token === import13.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import15.NgIf) && (2 === requestNodeIndex))) { return this._NgIf_2_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:boolean = !this.context.hideLabel;
    this._NgIf_0_6.check_ngIf(currVal_0_0_0,throwOnChange,false);
    this._NgIf_0_6.ngDoCheck(this,this._anchor_0,throwOnChange);
    const currVal_2_0_0:any = this.context.hideLabel;
    this._NgIf_2_6.check_ngIf(currVal_2_0_0,throwOnChange,false);
    this._NgIf_2_6.ngDoCheck(this,this._anchor_2,throwOnChange);
    this._vc_0.detectChangesInNestedViews(throwOnChange);
    this._vc_2.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_0.destroyNestedViews();
    this._vc_2.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 0)) { return new View_CDUserComponent1(this.viewUtils,this,0,this._anchor_0,this._vc_0); }
    if ((nodeIndex == 2)) { return new View_CDUserComponent3(this.viewUtils,this,2,this._anchor_2,this._vc_2); }
    return (null as any);
  }
}