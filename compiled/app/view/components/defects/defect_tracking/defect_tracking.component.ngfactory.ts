/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../../../app/view/components/defects/defect_tracking/defect_tracking.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '../../../../../../app/actions/defects.action';
import * as import6 from '../../../../../../app/actions/global.action';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/change_detection/constants';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '@angular/http/src/http';
import * as import11 from '@angular/router/src/router';
import * as import12 from '@angular/router/src/router_state';
import * as import13 from '../../../../../../app/view/components/defects/defect_tracking/details/basic/defect_basic_detail.component';
import * as import14 from './details/basic/defect_basic_detail.component.ngfactory';
import * as import15 from '@angular/core/src/linker/view_container';
import * as import16 from '../../../../../../app/view/components/defects/defect_tracking/details/advanced/defect_advanced_detail.component';
import * as import17 from './details/advanced/defect_advanced_detail.component.ngfactory';
import * as import18 from '../../../../../node_modules/@angular/common/src/directives/ng_class.ngfactory';
import * as import19 from '../../../../../../app/view/components/defects/defect_tracking/summary/defect_summary.component';
import * as import20 from './summary/defect_summary.component.ngfactory';
import * as import21 from '../../../../../../app/view/components/defects/defect_tracking/search/defect_tracking_search.component';
import * as import22 from '../../../../../../app/actions/grid.action';
import * as import23 from './search/defect_tracking_search.component.ngfactory';
import * as import24 from '../../../../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import25 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import26 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import27 from '@angular/core/src/linker/element_ref';
import * as import28 from '../../../../../../app/services/pouch.db.service';
import * as import29 from '@angular/core/src/linker/template_ref';
import * as import30 from '@angular/common/src/directives/ng_class';
import * as import31 from '@angular/common/src/directives/ng_if';
import * as import32 from '@angular/core/src/linker/query_list';
import * as import33 from '../../../../../../app/view/components/common/leftnav/project/project_leftnav.component';
import * as import34 from '../../../../../../app/actions/leftnav.action';
import * as import35 from '../../common/leftnav/project/project_leftnav.component.ngfactory';
import * as import36 from '../../../../../../app/view/components/common/breadcrumb/bread_crumb.component';
import * as import37 from '../../common/breadcrumb/bread_crumb.component.ngfactory';
import * as import38 from '../../../../../../app/view/components/defects/defect_tracking/update_user/update_defect_user.component';
import * as import39 from './update_user/update_defect_user.component.ngfactory';
import * as import40 from '../../../../../../app/view/components/defects/defect_tracking/file_new_defect_modal/file_new_defect_modal.component';
import * as import41 from './file_new_defect_modal/file_new_defect_modal.component.ngfactory';
import * as import42 from '../../../../../../app/actions/user.action';
import * as import43 from '@angular/forms/src/form_builder';
export class Wrapper_DefectTrackingComponent {
  /*private*/ _eventHandler:Function;
  context:import0.DefectTrackingComponent;
  /*private*/ _changed:boolean;
  constructor(p0:any,p1:any,p2:any,p3:any,p4:any) {
    this._changed = false;
    this.context = new import0.DefectTrackingComponent(p0,p1,p2,p3,p4);
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    this.context.ngOnDestroy();
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_DefectTrackingComponent_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_DefectTrackingComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.DefectTrackingComponent>;
  _DefectsAction_0_3:import5.DefectsAction;
  _GlobalAction_0_4:import6.GlobalAction;
  _DefectTrackingComponent_0_5:Wrapper_DefectTrackingComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_DefectTrackingComponent_Host0,renderType_DefectTrackingComponent_Host,import7.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'zee-defect-tracking',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_DefectTrackingComponent0(this.viewUtils,this,0,this._el_0);
    this._DefectsAction_0_3 = new import5.DefectsAction(this.injectorGet(import10.Http,this.parentIndex));
    this._GlobalAction_0_4 = new import6.GlobalAction(this.injectorGet(import10.Http,this.parentIndex));
    this._DefectTrackingComponent_0_5 = new Wrapper_DefectTrackingComponent(this.injectorGet(import11.Router,this.parentIndex),this.injectorGet(import12.ActivatedRoute,this.parentIndex),this._DefectsAction_0_3,this._GlobalAction_0_4,this.compView_0.ref);
    this.compView_0.create(this._DefectTrackingComponent_0_5.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import9.ComponentRef_<any>(0,this,this._el_0,this._DefectTrackingComponent_0_5.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import5.DefectsAction) && (0 === requestNodeIndex))) { return this._DefectsAction_0_3; }
    if (((token === import6.GlobalAction) && (0 === requestNodeIndex))) { return this._GlobalAction_0_4; }
    if (((token === import0.DefectTrackingComponent) && (0 === requestNodeIndex))) { return this._DefectTrackingComponent_0_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (this._DefectTrackingComponent_0_5.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._DefectTrackingComponent_0_5.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._DefectTrackingComponent_0_5.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const DefectTrackingComponentNgFactory:import9.ComponentFactory<import0.DefectTrackingComponent> = new import9.ComponentFactory<import0.DefectTrackingComponent>('zee-defect-tracking',View_DefectTrackingComponent_Host0,import0.DefectTrackingComponent);
const styles_DefectTrackingComponent:any[] = ([] as any[]);
class View_DefectTrackingComponent2 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import13.DefectBasicDetailComponent>;
  _DefectsAction_0_3:import5.DefectsAction;
  _DefectBasicDetailComponent_0_4:import14.Wrapper_DefectBasicDetailComponent;
  _text_1:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import15.ViewContainer) {
    super(View_DefectTrackingComponent2,renderType_DefectTrackingComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'defect-basic-detail',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_0 = new import14.View_DefectBasicDetailComponent0(this.viewUtils,this,0,this._el_0);
    this._DefectsAction_0_3 = new import5.DefectsAction(this.parentView.parentView.parentView.injectorGet(import10.Http,this.parentView.parentView.parentIndex));
    this._DefectBasicDetailComponent_0_4 = new import14.Wrapper_DefectBasicDetailComponent(this._DefectsAction_0_3);
    this._text_1 = this.renderer.createText((null as any),'\n                    ',(null as any));
    this.compView_0.create(this._DefectBasicDetailComponent_0_4.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray4(4,'onRecordChange',(null as any),'onFetchIssueMetaData',(null as any)),this.eventHandler(this.handleEvent_0));
    this._DefectBasicDetailComponent_0_4.subscribe(this,this.eventHandler(this.handleEvent_0),true,true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import5.DefectsAction) && (0 === requestNodeIndex))) { return this._DefectsAction_0_3; }
    if (((token === import13.DefectBasicDetailComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._DefectBasicDetailComponent_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.parentView.parentView.context.selectedDefect;
    this._DefectBasicDetailComponent_0_4.check_defect(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = this.parentView.parentView.context.defectSystemUrl;
    this._DefectBasicDetailComponent_0_4.check_defectSystemUrl(currVal_0_0_1,throwOnChange,false);
    const currVal_0_0_2:any = this.parentView.parentView.context.issueMetaData;
    this._DefectBasicDetailComponent_0_4.check_issueMetaData(currVal_0_0_2,throwOnChange,false);
    const currVal_0_0_3:any = this.parentView.parentView.context.currentRecord;
    this._DefectBasicDetailComponent_0_4.check_currentRecord(currVal_0_0_3,throwOnChange,false);
    const currVal_0_0_4:any = this.parentView.parentView.context.totalRowCount;
    this._DefectBasicDetailComponent_0_4.check_totalRecords(currVal_0_0_4,throwOnChange,false);
    this._DefectBasicDetailComponent_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._DefectBasicDetailComponent_0_4.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._DefectBasicDetailComponent_0_4.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onRecordChange')) {
      const pd_sub_0:any = ((<any>this.parentView.parentView.context.recordChanged($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'onFetchIssueMetaData')) {
      const pd_sub_1:any = ((<any>this.parentView.parentView.context.onFetchIssueMetaData($event)) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
}
class View_DefectTrackingComponent3 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import16.DefectAdvancedDetailComponent>;
  _DefectsAction_0_3:import5.DefectsAction;
  _DefectAdvancedDetailComponent_0_4:import17.Wrapper_DefectAdvancedDetailComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import15.ViewContainer) {
    super(View_DefectTrackingComponent3,renderType_DefectTrackingComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'defect-advanced-detail',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_0 = new import17.View_DefectAdvancedDetailComponent0(this.viewUtils,this,0,this._el_0);
    this._DefectsAction_0_3 = new import5.DefectsAction(this.parentView.parentView.parentView.injectorGet(import10.Http,this.parentView.parentView.parentIndex));
    this._DefectAdvancedDetailComponent_0_4 = new import17.Wrapper_DefectAdvancedDetailComponent(this._DefectsAction_0_3,this.compView_0.ref);
    this.compView_0.create(this._DefectAdvancedDetailComponent_0_4.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'onDismissModal',(null as any)),this.eventHandler(this.handleEvent_0));
    this._DefectAdvancedDetailComponent_0_4.subscribe(this,this.eventHandler(this.handleEvent_0),true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import5.DefectsAction) && (0 === requestNodeIndex))) { return this._DefectsAction_0_3; }
    if (((token === import16.DefectAdvancedDetailComponent) && (0 === requestNodeIndex))) { return this._DefectAdvancedDetailComponent_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.parentView.parentView.context.parentIssueForAdvancedView;
    this._DefectAdvancedDetailComponent_0_4.check_parentIssueKey(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = this.parentView.parentView.context.selectedDefect;
    this._DefectAdvancedDetailComponent_0_4.check_selectedDefect(currVal_0_0_1,throwOnChange,false);
    const currVal_0_0_2:any = this.parentView.parentView.context.issueMetaData;
    this._DefectAdvancedDetailComponent_0_4.check_issueMetaData(currVal_0_0_2,throwOnChange,false);
    if (this._DefectAdvancedDetailComponent_0_4.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._DefectAdvancedDetailComponent_0_4.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._DefectAdvancedDetailComponent_0_4.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onDismissModal')) {
      const pd_sub_0:any = ((<any>this.parentView.parentView.context.onAdvModalClose($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
class View_DefectTrackingComponent1 extends import1.AppView<any> {
  _el_0:any;
  _NgClass_0_3:import18.Wrapper_NgClass;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _el_6:any;
  compView_6:import1.AppView<import19.DefectSummaryComponent>;
  _DefectsAction_6_3:import5.DefectsAction;
  _DefectSummaryComponent_6_4:import20.Wrapper_DefectSummaryComponent;
  _text_7:any;
  _text_8:any;
  _text_9:any;
  _el_10:any;
  _NgClass_10_3:import18.Wrapper_NgClass;
  _text_11:any;
  _el_12:any;
  _text_13:any;
  _el_14:any;
  compView_14:import1.AppView<import21.DefectTrackingSearchComponent>;
  _GridAction_14_3:import22.GridAction;
  _DefectsAction_14_4:import5.DefectsAction;
  _DefectTrackingSearchComponent_14_5:import23.Wrapper_DefectTrackingSearchComponent;
  _text_15:any;
  _text_16:any;
  _text_17:any;
  _text_18:any;
  _el_19:any;
  _text_20:any;
  _el_21:any;
  _text_22:any;
  _anchor_23:any;
  /*private*/ _vc_23:import15.ViewContainer;
  _TemplateRef_23_5:any;
  _NgIf_23_6:import24.Wrapper_NgIf;
  _text_24:any;
  _el_25:any;
  _text_26:any;
  _anchor_27:any;
  /*private*/ _vc_27:import15.ViewContainer;
  _TemplateRef_27_5:any;
  _NgIf_27_6:import24.Wrapper_NgIf;
  _text_28:any;
  _text_29:any;
  _text_30:any;
  _text_31:any;
  _map_47:any;
  _map_48:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import15.ViewContainer) {
    super(View_DefectTrackingComponent1,renderType_DefectTrackingComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._map_47 = import3.pureProxy1((p0:any):{[key: string]:any} => {
      return {'zui-content-layout': p0};
    });
    this._map_48 = import3.pureProxy1((p0:any):{[key: string]:any} => {
      return {'row-parent': p0};
    });
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._NgClass_0_3 = new import18.Wrapper_NgClass(this.parentView.parentView.injectorGet(import25.IterableDiffers,this.parentView.parentIndex),this.parentView.parentView.injectorGet(import26.KeyValueDiffers,this.parentView.parentIndex),new import27.ElementRef(this._el_0),this.renderer);
    this._text_1 = this.renderer.createText(this._el_0,'\n            ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','row'),(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'\n                ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_2,'div',new import3.InlineArray2(2,'class','col-md-12'),(null as any));
    this._text_5 = this.renderer.createText(this._el_4,'\n                    ',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_4,'zee-defect-summary',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_6 = new import20.View_DefectSummaryComponent0(this.viewUtils,this,6,this._el_6);
    this._DefectsAction_6_3 = new import5.DefectsAction(this.parentView.parentView.injectorGet(import10.Http,this.parentView.parentIndex));
    this._DefectSummaryComponent_6_4 = new import20.Wrapper_DefectSummaryComponent(this.parentView.parentView.injectorGet(import12.ActivatedRoute,this.parentView.parentIndex),this._DefectsAction_6_3);
    this.compView_6.create(this._DefectSummaryComponent_6_4.context);
    this._text_7 = this.renderer.createText(this._el_4,'\n                ',(null as any));
    this._text_8 = this.renderer.createText(this._el_2,'\n            ',(null as any));
    this._text_9 = this.renderer.createText(this._el_0,'\n            ',(null as any));
    this._el_10 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','row'),(null as any));
    this._NgClass_10_3 = new import18.Wrapper_NgClass(this.parentView.parentView.injectorGet(import25.IterableDiffers,this.parentView.parentIndex),this.parentView.parentView.injectorGet(import26.KeyValueDiffers,this.parentView.parentIndex),new import27.ElementRef(this._el_10),this.renderer);
    this._text_11 = this.renderer.createText(this._el_10,'\n                ',(null as any));
    this._el_12 = import3.createRenderElement(this.renderer,this._el_10,'div',new import3.InlineArray2(2,'class','col-md-12'),(null as any));
    this._text_13 = this.renderer.createText(this._el_12,'\n                    ',(null as any));
    this._el_14 = import3.createRenderElement(this.renderer,this._el_12,'defect-tracking-search',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_14 = new import23.View_DefectTrackingSearchComponent0(this.viewUtils,this,14,this._el_14);
    this._GridAction_14_3 = new import22.GridAction(this.parentView.parentView.injectorGet(import10.Http,this.parentView.parentIndex),this.parentView.parentView.injectorGet(import28.PouchDBPrefsServices,this.parentView.parentIndex));
    this._DefectsAction_14_4 = new import5.DefectsAction(this.parentView.parentView.injectorGet(import10.Http,this.parentView.parentIndex));
    this._DefectTrackingSearchComponent_14_5 = new import23.Wrapper_DefectTrackingSearchComponent(this.parentView.parentView.injectorGet(import12.ActivatedRoute,this.parentView.parentIndex),this.parentView.parentView.injectorGet(import11.Router,this.parentView.parentIndex),this._GridAction_14_3,this._DefectsAction_14_4,this.compView_14.ref);
    this._text_15 = this.renderer.createText((null as any),'\n                    ',(null as any));
    this.compView_14.create(this._DefectTrackingSearchComponent_14_5.context);
    this._text_16 = this.renderer.createText(this._el_12,'\n                ',(null as any));
    this._text_17 = this.renderer.createText(this._el_10,'\n            ',(null as any));
    this._text_18 = this.renderer.createText(this._el_0,'\n            ',(null as any));
    this._el_19 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','row'),(null as any));
    this._text_20 = this.renderer.createText(this._el_19,'\n                ',(null as any));
    this._el_21 = import3.createRenderElement(this.renderer,this._el_19,'div',new import3.InlineArray2(2,'class','col-md-12'),(null as any));
    this._text_22 = this.renderer.createText(this._el_21,'\n                    ',(null as any));
    this._anchor_23 = this.renderer.createTemplateAnchor(this._el_21,(null as any));
    this._vc_23 = new import15.ViewContainer(23,21,this,this._anchor_23);
    this._TemplateRef_23_5 = new import29.TemplateRef_(this,23,this._anchor_23);
    this._NgIf_23_6 = new import24.Wrapper_NgIf(this._vc_23.vcRef,this._TemplateRef_23_5);
    this._text_24 = this.renderer.createText(this._el_21,'\n                    ',(null as any));
    this._el_25 = import3.createRenderElement(this.renderer,this._el_21,'div',new import3.InlineArray2(2,'class','defect-advanced-detail-container'),(null as any));
    this._text_26 = this.renderer.createText(this._el_25,'\n                        ',(null as any));
    this._anchor_27 = this.renderer.createTemplateAnchor(this._el_25,(null as any));
    this._vc_27 = new import15.ViewContainer(27,25,this,this._anchor_27);
    this._TemplateRef_27_5 = new import29.TemplateRef_(this,27,this._anchor_27);
    this._NgIf_27_6 = new import24.Wrapper_NgIf(this._vc_27.vcRef,this._TemplateRef_27_5);
    this._text_28 = this.renderer.createText(this._el_25,'\n                    ',(null as any));
    this._text_29 = this.renderer.createText(this._el_21,'\n                ',(null as any));
    this._text_30 = this.renderer.createText(this._el_19,'\n            ',(null as any));
    this._text_31 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_14,new import3.InlineArray16(10,'resetSelectedDefect',(null as any),'onCreateSubtask',(null as any),'defectBulkUpdate',(null as any),'onFetchIssueMetaData',(null as any),'onDefectRowClick',(null as any)),this.eventHandler(this.handleEvent_14));
    this._DefectTrackingSearchComponent_14_5.subscribe(this,this.eventHandler(this.handleEvent_14),true,true,true,true,true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._text_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._el_12,
      this._text_13,
      this._el_14,
      this._text_15,
      this._text_16,
      this._text_17,
      this._text_18,
      this._el_19,
      this._text_20,
      this._el_21,
      this._text_22,
      this._anchor_23,
      this._text_24,
      this._el_25,
      this._text_26,
      this._anchor_27,
      this._text_28,
      this._text_29,
      this._text_30,
      this._text_31
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import5.DefectsAction) && (6 === requestNodeIndex))) { return this._DefectsAction_6_3; }
    if (((token === import19.DefectSummaryComponent) && (6 === requestNodeIndex))) { return this._DefectSummaryComponent_6_4.context; }
    if (((token === import22.GridAction) && (14 === requestNodeIndex))) { return this._GridAction_14_3; }
    if (((token === import5.DefectsAction) && (14 === requestNodeIndex))) { return this._DefectsAction_14_4; }
    if (((token === import21.DefectTrackingSearchComponent) && ((14 <= requestNodeIndex) && (requestNodeIndex <= 15)))) { return this._DefectTrackingSearchComponent_14_5.context; }
    if (((token === import30.NgClass) && ((10 <= requestNodeIndex) && (requestNodeIndex <= 17)))) { return this._NgClass_10_3.context; }
    if (((token === import29.TemplateRef) && (23 === requestNodeIndex))) { return this._TemplateRef_23_5; }
    if (((token === import31.NgIf) && (23 === requestNodeIndex))) { return this._NgIf_23_6.context; }
    if (((token === import29.TemplateRef) && (27 === requestNodeIndex))) { return this._TemplateRef_27_5; }
    if (((token === import31.NgIf) && (27 === requestNodeIndex))) { return this._NgIf_27_6.context; }
    if (((token === import30.NgClass) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 31)))) { return this._NgClass_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this._map_47(true);
    this._NgClass_0_3.check_ngClass(currVal_0_0_0,throwOnChange,false);
    this._NgClass_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._DefectSummaryComponent_6_4.ngDoCheck(this,this._el_6,throwOnChange);
    const currVal_10_0_0:any = 'row';
    this._NgClass_10_3.check_klass(currVal_10_0_0,throwOnChange,false);
    const currVal_10_0_1:any = this._map_48(!this.parentView.context.selectedDefect);
    this._NgClass_10_3.check_ngClass(currVal_10_0_1,throwOnChange,false);
    this._NgClass_10_3.ngDoCheck(this,this._el_10,throwOnChange);
    const currVal_14_0_0:any = this.parentView.context.paramDefectId;
    this._DefectTrackingSearchComponent_14_5.check_paramDefectId(currVal_14_0_0,throwOnChange,false);
    if (this._DefectTrackingSearchComponent_14_5.ngDoCheck(this,this._el_14,throwOnChange)) { this.compView_14.markAsCheckOnce(); }
    const currVal_23_0_0:any = this.parentView.context.selectedDefect;
    this._NgIf_23_6.check_ngIf(currVal_23_0_0,throwOnChange,false);
    this._NgIf_23_6.ngDoCheck(this,this._anchor_23,throwOnChange);
    const currVal_27_0_0:any = this.parentView.context.issueMetaData;
    this._NgIf_27_6.check_ngIf(currVal_27_0_0,throwOnChange,false);
    this._NgIf_27_6.ngDoCheck(this,this._anchor_27,throwOnChange);
    this._vc_23.detectChangesInNestedViews(throwOnChange);
    this._vc_27.detectChangesInNestedViews(throwOnChange);
    this.compView_6.internalDetectChanges(throwOnChange);
    this.compView_14.internalDetectChanges(throwOnChange);
    if (!throwOnChange) {
      if ((this.numberOfChecks === 0)) { this._DefectSummaryComponent_6_4.context.ngAfterViewInit(); }
      if ((this.numberOfChecks === 0)) { this._DefectTrackingSearchComponent_14_5.context.ngAfterViewInit(); }
    }
  }
  dirtyParentQueriesInternal():void {
    (<View_DefectTrackingComponent0>this.parentView)._viewQuery_DefectTrackingSearchComponent_0.setDirty();
  }
  destroyInternal():void {
    this._vc_23.destroyNestedViews();
    this._vc_27.destroyNestedViews();
    this.compView_6.destroy();
    this.compView_14.destroy();
    this._DefectTrackingSearchComponent_14_5.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  createEmbeddedViewInternal(nodeIndex:number):import1.AppView<any> {
    if ((nodeIndex == 23)) { return new View_DefectTrackingComponent2(this.viewUtils,this,23,this._anchor_23,this._vc_23); }
    if ((nodeIndex == 27)) { return new View_DefectTrackingComponent3(this.viewUtils,this,27,this._anchor_27,this._vc_27); }
    return (null as any);
  }
  handleEvent_14(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'resetSelectedDefect')) {
      const pd_sub_0:any = ((<any>this.parentView.context.resetSelectedDefect($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'onCreateSubtask')) {
      const pd_sub_1:any = ((<any>this.parentView.context.onCreateSubtask($event)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'defectBulkUpdate')) {
      const pd_sub_2:any = ((<any>this.parentView.context.defectBulkUpdate($event)) !== false);
      result = (pd_sub_2 && result);
    }
    if ((eventName == 'onFetchIssueMetaData')) {
      const pd_sub_3:any = ((<any>this.parentView.context.onFetchIssueMetaData($event)) !== false);
      result = (pd_sub_3 && result);
    }
    if ((eventName == 'onDefectRowClick')) {
      const pd_sub_4:any = ((<any>this.parentView.context.onDefectRowClick($event)) !== false);
      result = (pd_sub_4 && result);
    }
    return result;
  }
}
var renderType_DefectTrackingComponent:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,styles_DefectTrackingComponent,{});
export class View_DefectTrackingComponent0 extends import1.AppView<import0.DefectTrackingComponent> {
  _viewQuery_DefectTrackingSearchComponent_0:import32.QueryList<any>;
  _text_0:any;
  _el_1:any;
  compView_1:import1.AppView<import33.ProjectLeftNavComponent>;
  _LeftnavAction_1_3:import34.LeftnavAction;
  _ProjectLeftNavComponent_1_4:import35.Wrapper_ProjectLeftNavComponent;
  _text_2:any;
  _el_3:any;
  _NgClass_3_3:import18.Wrapper_NgClass;
  _text_4:any;
  _el_5:any;
  _text_6:any;
  _el_7:any;
  _text_8:any;
  _el_9:any;
  _text_10:any;
  _el_11:any;
  _el_12:any;
  _text_13:any;
  _text_14:any;
  _text_15:any;
  _el_16:any;
  compView_16:import1.AppView<import36.BreadCrumbComponent>;
  _BreadCrumbComponent_16_3:import37.Wrapper_BreadCrumbComponent;
  _text_17:any;
  _text_18:any;
  _el_19:any;
  _text_20:any;
  _el_21:any;
  _text_22:any;
  _el_23:any;
  _text_24:any;
  _el_25:any;
  _text_26:any;
  _text_27:any;
  _text_28:any;
  _el_29:any;
  _text_30:any;
  _el_31:any;
  _text_32:any;
  _el_33:any;
  _text_34:any;
  _text_35:any;
  _text_36:any;
  _text_37:any;
  _text_38:any;
  _anchor_39:any;
  /*private*/ _vc_39:import15.ViewContainer;
  _TemplateRef_39_5:any;
  _NgIf_39_6:import24.Wrapper_NgIf;
  _text_40:any;
  _el_41:any;
  _text_42:any;
  _el_43:any;
  compView_43:import1.AppView<import38.UpdateDefectUserComponent>;
  _DefectsAction_43_3:import5.DefectsAction;
  _UpdateDefectUserComponent_43_4:import39.Wrapper_UpdateDefectUserComponent;
  _text_44:any;
  _text_45:any;
  _text_46:any;
  _el_47:any;
  _text_48:any;
  _el_49:any;
  compView_49:import1.AppView<import40.FileNewDefectModalComponent>;
  _DefectsAction_49_3:import5.DefectsAction;
  _FileNewDefectModalComponent_49_4:import41.Wrapper_FileNewDefectModalComponent;
  _text_50:any;
  _text_51:any;
  _text_52:any;
  _text_53:any;
  _text_54:any;
  _map_71:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_DefectTrackingComponent0,renderType_DefectTrackingComponent,import7.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckOnce);
    this._map_71 = import3.pureProxy1((p0:any):{[key: string]:any} => {
      return {'defect-tracking-container': p0};
    });
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_DefectTrackingSearchComponent_0 = new import32.QueryList<any>();
    this._text_0 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'zui-project-left-nav',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_1 = new import35.View_ProjectLeftNavComponent0(this.viewUtils,this,1,this._el_1);
    this._LeftnavAction_1_3 = new import34.LeftnavAction();
    this._ProjectLeftNavComponent_1_4 = new import35.Wrapper_ProjectLeftNavComponent(this.parentView.injectorGet(import12.ActivatedRoute,this.parentIndex),this.parentView.injectorGet(import42.UserAction,this.parentIndex),this.parentView.injectorGet(import11.Router,this.parentIndex),this._LeftnavAction_1_3,this.compView_1.ref);
    this.compView_1.create(this._ProjectLeftNavComponent_1_4.context);
    this._text_2 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_3 = import3.createRenderElement(this.renderer,parentRenderNode,'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._NgClass_3_3 = new import18.Wrapper_NgClass(this.parentView.injectorGet(import25.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import26.KeyValueDiffers,this.parentIndex),new import27.ElementRef(this._el_3),this.renderer);
    this._text_4 = this.renderer.createText(this._el_3,'\n    ',(null as any));
    this._el_5 = import3.createRenderElement(this.renderer,this._el_3,'div',new import3.InlineArray2(2,'class','main-content'),(null as any));
    this._text_6 = this.renderer.createText(this._el_5,'\n        ',(null as any));
    this._el_7 = import3.createRenderElement(this.renderer,this._el_5,'div',new import3.InlineArray2(2,'class','module-subheader no-breadcrumb'),(null as any));
    this._text_8 = this.renderer.createText(this._el_7,'\n            ',(null as any));
    this._el_9 = import3.createRenderElement(this.renderer,this._el_7,'div',new import3.InlineArray2(2,'class','left-navs'),(null as any));
    this._text_10 = this.renderer.createText(this._el_9,'\n                ',(null as any));
    this._el_11 = import3.createRenderElement(this.renderer,this._el_9,'h3',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._el_12 = import3.createRenderElement(this.renderer,this._el_11,'b',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_13 = this.renderer.createText(this._el_12,'Defect Tracking',(null as any));
    this._text_14 = this.renderer.createText(this._el_9,'\n              ',(null as any));
    this._text_15 = this.renderer.createText(this._el_9,'\n                ',(null as any));
    this._el_16 = import3.createRenderElement(this.renderer,this._el_9,'bread-crumb',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_16 = new import37.View_BreadCrumbComponent0(this.viewUtils,this,16,this._el_16);
    this._BreadCrumbComponent_16_3 = new import37.Wrapper_BreadCrumbComponent();
    this.compView_16.create(this._BreadCrumbComponent_16_3.context);
    this._text_17 = this.renderer.createText(this._el_9,'\n            ',(null as any));
    this._text_18 = this.renderer.createText(this._el_7,'\n            ',(null as any));
    this._el_19 = import3.createRenderElement(this.renderer,this._el_7,'div',new import3.InlineArray2(2,'class','right-navs dt-right-top-buttons'),(null as any));
    this._text_20 = this.renderer.createText(this._el_19,'\n                ',(null as any));
    this._el_21 = import3.createRenderElement(this.renderer,this._el_19,'button',new import3.InlineArray2(2,'class','btn btn-secondary zui-dt-reset-user-button'),(null as any));
    this._text_22 = this.renderer.createText(this._el_21,'\n                    ',(null as any));
    this._el_23 = import3.createRenderElement(this.renderer,this._el_21,'i',new import3.InlineArray4(4,'aria-hidden','true','class','fa fa-refresh zui-dt-reset-user-icon'),(null as any));
    this._text_24 = this.renderer.createText(this._el_21,'\n                    ',(null as any));
    this._el_25 = import3.createRenderElement(this.renderer,this._el_21,'span',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_26 = this.renderer.createText(this._el_25,'Reset User',(null as any));
    this._text_27 = this.renderer.createText(this._el_21,'\n                ',(null as any));
    this._text_28 = this.renderer.createText(this._el_19,'\n                ',(null as any));
    this._el_29 = import3.createRenderElement(this.renderer,this._el_19,'button',new import3.InlineArray2(2,'class','btn btn-secondary file-new-defect-button'),(null as any));
    this._text_30 = this.renderer.createText(this._el_29,'\n                    ',(null as any));
    this._el_31 = import3.createRenderElement(this.renderer,this._el_29,'i',new import3.InlineArray4(4,'aria-hidden','true','class','zui-dt-reset-user-icon'),(null as any));
    this._text_32 = this.renderer.createText(this._el_29,'\n                    ',(null as any));
    this._el_33 = import3.createRenderElement(this.renderer,this._el_29,'span',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_34 = this.renderer.createText(this._el_33,'Create Defect',(null as any));
    this._text_35 = this.renderer.createText(this._el_29,'\n                ',(null as any));
    this._text_36 = this.renderer.createText(this._el_19,'\n            ',(null as any));
    this._text_37 = this.renderer.createText(this._el_7,'\n        ',(null as any));
    this._text_38 = this.renderer.createText(this._el_5,'\n        ',(null as any));
    this._anchor_39 = this.renderer.createTemplateAnchor(this._el_5,(null as any));
    this._vc_39 = new import15.ViewContainer(39,5,this,this._anchor_39);
    this._TemplateRef_39_5 = new import29.TemplateRef_(this,39,this._anchor_39);
    this._NgIf_39_6 = new import24.Wrapper_NgIf(this._vc_39.vcRef,this._TemplateRef_39_5);
    this._text_40 = this.renderer.createText(this._el_5,'\n        ',(null as any));
    this._el_41 = import3.createRenderElement(this.renderer,this._el_5,'div',new import3.InlineArray2(2,'class','update-defect-user-container'),(null as any));
    this._text_42 = this.renderer.createText(this._el_41,'\n            ',(null as any));
    this._el_43 = import3.createRenderElement(this.renderer,this._el_41,'zee-update-defect-user',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_43 = new import39.View_UpdateDefectUserComponent0(this.viewUtils,this,43,this._el_43);
    this._DefectsAction_43_3 = new import5.DefectsAction(this.parentView.injectorGet(import10.Http,this.parentIndex));
    this._UpdateDefectUserComponent_43_4 = new import39.Wrapper_UpdateDefectUserComponent(this.parentView.injectorGet(import43.FormBuilder,this.parentIndex),this.parentView.injectorGet(import11.Router,this.parentIndex),this._DefectsAction_43_3);
    this._text_44 = this.renderer.createText((null as any),'\n            ',(null as any));
    this.compView_43.create(this._UpdateDefectUserComponent_43_4.context);
    this._text_45 = this.renderer.createText(this._el_41,'\n        ',(null as any));
    this._text_46 = this.renderer.createText(this._el_5,'\n        ',(null as any));
    this._el_47 = import3.createRenderElement(this.renderer,this._el_5,'div',new import3.InlineArray2(2,'class','file-new-defect-modal-container'),(null as any));
    this._text_48 = this.renderer.createText(this._el_47,'\n            ',(null as any));
    this._el_49 = import3.createRenderElement(this.renderer,this._el_47,'file-new-defect-modal',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_49 = new import41.View_FileNewDefectModalComponent0(this.viewUtils,this,49,this._el_49);
    this._DefectsAction_49_3 = new import5.DefectsAction(this.parentView.injectorGet(import10.Http,this.parentIndex));
    this._FileNewDefectModalComponent_49_4 = new import41.Wrapper_FileNewDefectModalComponent(this._DefectsAction_49_3,this.compView_49.ref);
    this._text_50 = this.renderer.createText((null as any),'\n            ',(null as any));
    this.compView_49.create(this._FileNewDefectModalComponent_49_4.context);
    this._text_51 = this.renderer.createText(this._el_47,'\n        ',(null as any));
    this._text_52 = this.renderer.createText(this._el_5,'\n    ',(null as any));
    this._text_53 = this.renderer.createText(this._el_3,'\n',(null as any));
    this._text_54 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_21,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_21));
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_29,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_29));
    var disposable_2:Function = import3.subscribeToRenderElement(this,this._el_43,new import3.InlineArray8(6,'onDeleteUser',(null as any),'onCloseUpdateUserModal',(null as any),'onShowUpdateUserModal',(null as any)),this.eventHandler(this.handleEvent_43));
    this._UpdateDefectUserComponent_43_4.subscribe(this,this.eventHandler(this.handleEvent_43),true,true,true);
    var disposable_3:Function = import3.subscribeToRenderElement(this,this._el_49,new import3.InlineArray2(2,'onDefectUpdate',(null as any)),this.eventHandler(this.handleEvent_49));
    this._FileNewDefectModalComponent_49_4.subscribe(this,this.eventHandler(this.handleEvent_49),true);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._el_9,
      this._text_10,
      this._el_11,
      this._el_12,
      this._text_13,
      this._text_14,
      this._text_15,
      this._el_16,
      this._text_17,
      this._text_18,
      this._el_19,
      this._text_20,
      this._el_21,
      this._text_22,
      this._el_23,
      this._text_24,
      this._el_25,
      this._text_26,
      this._text_27,
      this._text_28,
      this._el_29,
      this._text_30,
      this._el_31,
      this._text_32,
      this._el_33,
      this._text_34,
      this._text_35,
      this._text_36,
      this._text_37,
      this._text_38,
      this._anchor_39,
      this._text_40,
      this._el_41,
      this._text_42,
      this._el_43,
      this._text_44,
      this._text_45,
      this._text_46,
      this._el_47,
      this._text_48,
      this._el_49,
      this._text_50,
      this._text_51,
      this._text_52,
      this._text_53,
      this._text_54
    ]
    ),[
      disposable_0,
      disposable_1,
      disposable_2,
      disposable_3
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import34.LeftnavAction) && (1 === requestNodeIndex))) { return this._LeftnavAction_1_3; }
    if (((token === import33.ProjectLeftNavComponent) && (1 === requestNodeIndex))) { return this._ProjectLeftNavComponent_1_4.context; }
    if (((token === import36.BreadCrumbComponent) && (16 === requestNodeIndex))) { return this._BreadCrumbComponent_16_3.context; }
    if (((token === import29.TemplateRef) && (39 === requestNodeIndex))) { return this._TemplateRef_39_5; }
    if (((token === import31.NgIf) && (39 === requestNodeIndex))) { return this._NgIf_39_6.context; }
    if (((token === import5.DefectsAction) && (43 === requestNodeIndex))) { return this._DefectsAction_43_3; }
    if (((token === import38.UpdateDefectUserComponent) && ((43 <= requestNodeIndex) && (requestNodeIndex <= 44)))) { return this._UpdateDefectUserComponent_43_4.context; }
    if (((token === import5.DefectsAction) && (49 === requestNodeIndex))) { return this._DefectsAction_49_3; }
    if (((token === import40.FileNewDefectModalComponent) && ((49 <= requestNodeIndex) && (requestNodeIndex <= 50)))) { return this._FileNewDefectModalComponent_49_4.context; }
    if (((token === import30.NgClass) && ((3 <= requestNodeIndex) && (requestNodeIndex <= 53)))) { return this._NgClass_3_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1_0_0:any = 'defect-tracking';
    this._ProjectLeftNavComponent_1_4.check_activeItemKey(currVal_1_0_0,throwOnChange,false);
    if (this._ProjectLeftNavComponent_1_4.ngDoCheck(this,this._el_1,throwOnChange)) { this.compView_1.markAsCheckOnce(); }
    const currVal_3_0_0:any = this._map_71(true);
    this._NgClass_3_3.check_ngClass(currVal_3_0_0,throwOnChange,false);
    this._NgClass_3_3.ngDoCheck(this,this._el_3,throwOnChange);
    this._BreadCrumbComponent_16_3.ngDoCheck(this,this._el_16,throwOnChange);
    const currVal_39_0_0:any = ((this.context.isUserUpdateRequired === 'false') || this.context.isResetDTUser);
    this._NgIf_39_6.check_ngIf(currVal_39_0_0,throwOnChange,false);
    this._NgIf_39_6.ngDoCheck(this,this._anchor_39,throwOnChange);
    const currVal_43_0_0:any = true;
    this._UpdateDefectUserComponent_43_4.check_isModal(currVal_43_0_0,throwOnChange,false);
    const currVal_43_0_1:any = this.context.isResetDTUser;
    this._UpdateDefectUserComponent_43_4.check_isResetDTUser(currVal_43_0_1,throwOnChange,false);
    this._UpdateDefectUserComponent_43_4.ngDoCheck(this,this._el_43,throwOnChange);
    const currVal_49_0_0:any = this.context.parentIssue;
    this._FileNewDefectModalComponent_49_4.check_parentIssue(currVal_49_0_0,throwOnChange,false);
    const currVal_49_0_1:any = this.context._releaseId;
    this._FileNewDefectModalComponent_49_4.check_releaseId(currVal_49_0_1,throwOnChange,false);
    if (this._FileNewDefectModalComponent_49_4.ngDoCheck(this,this._el_49,throwOnChange)) { this.compView_49.markAsCheckOnce(); }
    this._vc_39.detectChangesInNestedViews(throwOnChange);
    this.compView_1.internalDetectChanges(throwOnChange);
    this.compView_16.internalDetectChanges(throwOnChange);
    this.compView_43.internalDetectChanges(throwOnChange);
    this.compView_49.internalDetectChanges(throwOnChange);
    if (!throwOnChange) {
      if (this._viewQuery_DefectTrackingSearchComponent_0.dirty) {
          this._viewQuery_DefectTrackingSearchComponent_0.reset([this._vc_39.mapNestedViews(View_DefectTrackingComponent1,(nestedView:View_DefectTrackingComponent1):any => {
            return [nestedView._DefectTrackingSearchComponent_14_5.context];
        })]);
        this.context.dtSearchCmp = this._viewQuery_DefectTrackingSearchComponent_0.first;
      }
      if ((this.numberOfChecks === 0)) { this._ProjectLeftNavComponent_1_4.context.ngAfterViewInit(); }
      if ((this.numberOfChecks === 0)) { this._UpdateDefectUserComponent_43_4.context.ngAfterViewInit(); }
      if ((this.numberOfChecks === 0)) { this._FileNewDefectModalComponent_49_4.context.ngAfterViewInit(); }
    }
  }
  destroyInternal():void {
    this._vc_39.destroyNestedViews();
    this.compView_1.destroy();
    this.compView_16.destroy();
    this.compView_43.destroy();
    this.compView_49.destroy();
    this._ProjectLeftNavComponent_1_4.ngOnDestroy();
    this._UpdateDefectUserComponent_43_4.ngOnDestroy();
    this._FileNewDefectModalComponent_49_4.ngOnDestroy();
  }
  createEmbeddedViewInternal(nodeIndex:number):import1.AppView<any> {
    if ((nodeIndex == 39)) { return new View_DefectTrackingComponent1(this.viewUtils,this,39,this._anchor_39,this._vc_39); }
    return (null as any);
  }
  handleEvent_21(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.resetDTUserButtonClick($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_29(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.fileNewButtonButtonClick($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_43(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onDeleteUser')) {
      const pd_sub_0:any = ((<any>this.context.onDeleteUser($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'onCloseUpdateUserModal')) {
      const pd_sub_1:any = ((<any>this.context.onCloseUpdateUserModal($event)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'onShowUpdateUserModal')) {
      const pd_sub_2:any = ((<any>this.context.onShowUpdateUserModal($event)) !== false);
      result = (pd_sub_2 && result);
    }
    return result;
  }
  handleEvent_49(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onDefectUpdate')) {
      const pd_sub_0:any = ((<any>this.context.onDefectUpdate($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}