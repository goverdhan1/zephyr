/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../../../../../app/view/components/defects/defect_tracking/search/advanced/defects_advanced_search.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '../../../../../../../../app/actions/grid.action';
import * as import7 from '../../../../../../../../app/actions/defects.action';
import * as import8 from '../../../../../../../../app/actions/import.action';
import * as import9 from '@angular/core/src/linker/view_type';
import * as import10 from '@angular/core/src/change_detection/constants';
import * as import11 from '@angular/core/src/linker/component_factory';
import * as import12 from '@angular/http/src/http';
import * as import13 from '../../../../../../../../app/services/pouch.db.service';
import * as import14 from '@angular/router/src/router_state';
import * as import15 from '@angular/router/src/router';
import * as import16 from '@angular/core/src/linker/query_list';
import * as import17 from '../../../../../../../node_modules/@angular/common/src/directives/ng_class.ngfactory';
import * as import18 from '../../../../../../../../app/view/components/defects/defect_tracking/search/advanced/defects_advanced_search_finder.component';
import * as import19 from './defects_advanced_search_finder.component.ngfactory';
import * as import20 from '../../../../../../../../app/view/components/grid/grid.component';
import * as import21 from '../../../../../../../../app/actions/global.action';
import * as import22 from '../../../../../../../../app/utils/scripts/utils';
import * as import23 from '../../../../grid/grid.component.ngfactory';
import * as import24 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import25 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import26 from '@angular/core/src/linker/element_ref';
import * as import27 from '@angular/core/src/zone/ng_zone';
import * as import28 from '../../../../../../../../app/services/toastr.service';
import * as import29 from '@angular/common/src/directives/ng_class';
export class Wrapper_DefectsAdvancedSearchComponent {
  /*private*/ _eventHandler:Function;
  context:import0.DefectsAdvancedSearchComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  subscription0:any;
  subscription1:any;
  subscription2:any;
  subscription3:any;
  subscription4:any;
  constructor(p0:any,p1:any,p2:any,p3:any,p4:any) {
    this._changed = false;
    this.context = new import0.DefectsAdvancedSearchComponent(p0,p1,p2,p3,p4);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
    this._expr_6 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    this.context.ngOnDestroy();
    (this.subscription0 && this.subscription0.unsubscribe());
    (this.subscription1 && this.subscription1.unsubscribe());
    (this.subscription2 && this.subscription2.unsubscribe());
    (this.subscription3 && this.subscription3.unsubscribe());
    (this.subscription4 && this.subscription4.unsubscribe());
  }
  check_isFileNewDefect(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.isFileNewDefect = currValue;
      this._expr_0 = currValue;
    }
  }
  check_searchGridType(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.searchGridType = currValue;
      this._expr_1 = currValue;
    }
  }
  check_testcaseId(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.testcaseId = currValue;
      this._expr_2 = currValue;
    }
  }
  check_scheduleId(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.scheduleId = currValue;
      this._expr_3 = currValue;
    }
  }
  check_hideHeader(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.hideHeader = currValue;
      this._expr_4 = currValue;
    }
  }
  check_type(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_5,currValue))) {
      this._changed = true;
      this.context.type = currValue;
      this._expr_5 = currValue;
    }
  }
  check_hiddenOptions(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_6,currValue))) {
      this._changed = true;
      this.context.hiddenOptions = currValue;
      this._expr_6 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean,emit1:boolean,emit2:boolean,emit3:boolean,emit4:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.searchCriteria.subscribe(_eventHandler.bind(view,'searchCriteria'))); }
    if (emit1) { (this.subscription1 = this.context.onCreateSubtask.subscribe(_eventHandler.bind(view,'onCreateSubtask'))); }
    if (emit2) { (this.subscription2 = this.context.showFileNewDefectDialog.subscribe(_eventHandler.bind(view,'showFileNewDefectDialog'))); }
    if (emit3) { (this.subscription3 = this.context.onGridSelection.subscribe(_eventHandler.bind(view,'onGridSelection'))); }
    if (emit4) { (this.subscription4 = this.context.setFolderstructure.subscribe(_eventHandler.bind(view,'setFolderstructure'))); }
  }
}
var renderType_DefectsAdvancedSearchComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_DefectsAdvancedSearchComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.DefectsAdvancedSearchComponent>;
  _GridAction_0_3:import6.GridAction;
  _DefectsAction_0_4:import7.DefectsAction;
  _ImportAction_0_5:import8.ImportAction;
  _DefectsAdvancedSearchComponent_0_6:Wrapper_DefectsAdvancedSearchComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_DefectsAdvancedSearchComponent_Host0,renderType_DefectsAdvancedSearchComponent_Host,import9.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import10.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import11.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'defects-advanced-search',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_DefectsAdvancedSearchComponent0(this.viewUtils,this,0,this._el_0);
    this._GridAction_0_3 = new import6.GridAction(this.injectorGet(import12.Http,this.parentIndex),this.injectorGet(import13.PouchDBPrefsServices,this.parentIndex));
    this._DefectsAction_0_4 = new import7.DefectsAction(this.injectorGet(import12.Http,this.parentIndex));
    this._ImportAction_0_5 = new import8.ImportAction(this.injectorGet(import12.Http,this.parentIndex));
    this._DefectsAdvancedSearchComponent_0_6 = new Wrapper_DefectsAdvancedSearchComponent(this.injectorGet(import14.ActivatedRoute,this.parentIndex),this.injectorGet(import15.Router,this.parentIndex),this._GridAction_0_3,this._DefectsAction_0_4,this._ImportAction_0_5);
    this.compView_0.create(this._DefectsAdvancedSearchComponent_0_6.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import11.ComponentRef_<any>(0,this,this._el_0,this._DefectsAdvancedSearchComponent_0_6.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import6.GridAction) && (0 === requestNodeIndex))) { return this._GridAction_0_3; }
    if (((token === import7.DefectsAction) && (0 === requestNodeIndex))) { return this._DefectsAction_0_4; }
    if (((token === import8.ImportAction) && (0 === requestNodeIndex))) { return this._ImportAction_0_5; }
    if (((token === import0.DefectsAdvancedSearchComponent) && (0 === requestNodeIndex))) { return this._DefectsAdvancedSearchComponent_0_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._DefectsAdvancedSearchComponent_0_6.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._DefectsAdvancedSearchComponent_0_6.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._DefectsAdvancedSearchComponent_0_6.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const DefectsAdvancedSearchComponentNgFactory:import11.ComponentFactory<import0.DefectsAdvancedSearchComponent> = new import11.ComponentFactory<import0.DefectsAdvancedSearchComponent>('defects-advanced-search',View_DefectsAdvancedSearchComponent_Host0,import0.DefectsAdvancedSearchComponent);
const styles_DefectsAdvancedSearchComponent:any[] = ([] as any[]);
var renderType_DefectsAdvancedSearchComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,styles_DefectsAdvancedSearchComponent,{});
export class View_DefectsAdvancedSearchComponent0 extends import2.AppView<import0.DefectsAdvancedSearchComponent> {
  _viewQuery_DefectsAdvancedSearchFinderComponent_0:import16.QueryList<any>;
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _NgClass_2_3:import17.Wrapper_NgClass;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _text_6:any;
  _text_7:any;
  _el_8:any;
  _text_9:any;
  _el_10:any;
  compView_10:import2.AppView<import18.DefectsAdvancedSearchFinderComponent>;
  _DefectsAdvancedSearchFinderComponent_10_3:import19.Wrapper_DefectsAdvancedSearchFinderComponent;
  _text_11:any;
  _text_12:any;
  _text_13:any;
  _el_14:any;
  _text_15:any;
  _el_16:any;
  compView_16:import2.AppView<import20.GridComponent>;
  _GridAction_16_3:import6.GridAction;
  _GlobalAction_16_4:import21.GlobalAction;
  _UtililtyFunctions_16_5:import22.UtililtyFunctions;
  _GridComponent_16_6:import23.Wrapper_GridComponent;
  _text_17:any;
  _text_18:any;
  _text_19:any;
  _text_20:any;
  _map_30:any;
  /*private*/ _expr_31:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_DefectsAdvancedSearchComponent0,renderType_DefectsAdvancedSearchComponent,import9.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import10.ChangeDetectorStatus.CheckAlways);
    this._map_30 = import3.pureProxy3((p0:any,p1:any,p2:any):{[key: string]:any} => {
      return {
        'defects-search-header': p0,
        'defects-header': p1,
        hide: p2
      }
      ;
    });
    this._expr_31 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import11.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_DefectsAdvancedSearchFinderComponent_0 = new import16.QueryList<any>();
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','defects-search-container'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n	',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._NgClass_2_3 = new import17.Wrapper_NgClass(this.parentView.injectorGet(import24.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import25.KeyValueDiffers,this.parentIndex),new import26.ElementRef(this._el_2),this.renderer);
    this._text_3 = this.renderer.createText(this._el_2,'\n    	',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_2,'h5',new import3.InlineArray2(2,'class','zee-content-subtitle'),(null as any));
    this._text_5 = this.renderer.createText(this._el_4,'',(null as any));
    this._text_6 = this.renderer.createText(this._el_2,'\n  	',(null as any));
    this._text_7 = this.renderer.createText(this._el_0,'\n	',(null as any));
    this._el_8 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','defects-search-form'),(null as any));
    this._text_9 = this.renderer.createText(this._el_8,'\n		',(null as any));
    this._el_10 = import3.createRenderElement(this.renderer,this._el_8,'defects-advanced-search-finder',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_10 = new import19.View_DefectsAdvancedSearchFinderComponent0(this.viewUtils,this,10,this._el_10);
    this._DefectsAdvancedSearchFinderComponent_10_3 = new import19.Wrapper_DefectsAdvancedSearchFinderComponent();
    this._text_11 = this.renderer.createText((null as any),'\n\n		',(null as any));
    this.compView_10.create(this._DefectsAdvancedSearchFinderComponent_10_3.context);
    this._text_12 = this.renderer.createText(this._el_8,'\n	',(null as any));
    this._text_13 = this.renderer.createText(this._el_0,'\n	',(null as any));
    this._el_14 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','defect-search-grid-container'),(null as any));
    this._text_15 = this.renderer.createText(this._el_14,'\n		 ',(null as any));
    this._el_16 = import3.createRenderElement(this.renderer,this._el_14,'grid',new import3.InlineArray2(2,'class','defects-search-grid'),(null as any));
    this.compView_16 = new import23.View_GridComponent0(this.viewUtils,this,16,this._el_16);
    this._GridAction_16_3 = new import6.GridAction(this.parentView.injectorGet(import12.Http,this.parentIndex),this.parentView.injectorGet(import13.PouchDBPrefsServices,this.parentIndex));
    this._GlobalAction_16_4 = new import21.GlobalAction(this.parentView.injectorGet(import12.Http,this.parentIndex));
    this._UtililtyFunctions_16_5 = new import22.UtililtyFunctions();
    this._GridComponent_16_6 = new import23.Wrapper_GridComponent(this._GridAction_16_3,this._GlobalAction_16_4,new import26.ElementRef(this._el_16),this._UtililtyFunctions_16_5,this.compView_16.ref,this.parentView.injectorGet(import27.NgZone,this.parentIndex),this.parentView.injectorGet(import15.Router,this.parentIndex),this.parentView.injectorGet(import13.PouchDBPrefsServices,this.parentIndex),this.parentView.injectorGet(import28.ToastrService,this.parentIndex));
    this._text_17 = this.renderer.createText((null as any),'\n		',(null as any));
    this.compView_16.create(this._GridComponent_16_6.context);
    this._text_18 = this.renderer.createText(this._el_14,'\n	',(null as any));
    this._text_19 = this.renderer.createText(this._el_0,'\n',(null as any));
    this._text_20 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_10,new import3.InlineArray16(12,'showFileNewDefectDialog',(null as any),'onSelectedSearchCriteriaChange',(null as any),'onSearchDefectById',(null as any),'onSearchDefectsByJQL',(null as any),'onSearchDefectsByFilters',(null as any),'setFolderstructure',(null as any)),this.eventHandler(this.handleEvent_10));
    this._DefectsAdvancedSearchFinderComponent_10_3.subscribe(this,this.eventHandler(this.handleEvent_10),true,true,true,true,true,false,true);
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_16,new import3.InlineArray16(12,'onGridPrevClick',(null as any),'onGridNextClick',(null as any),'onGridPaginateByIndex',(null as any),'onGridPageSizeChange',(null as any),'onGridRowSelection',(null as any),'onGridIconClick',(null as any)),this.eventHandler(this.handleEvent_16));
    this._GridComponent_16_6.subscribe(this,this.eventHandler(this.handleEvent_16),false,true,true,false,true,false,true,false,false,true,true,false,false,false,false,false,false);
    this._viewQuery_DefectsAdvancedSearchFinderComponent_0.reset([this._DefectsAdvancedSearchFinderComponent_10_3.context]);
    this.context.dtSearchCmp = this._viewQuery_DefectsAdvancedSearchFinderComponent_0.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._text_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._text_12,
      this._text_13,
      this._el_14,
      this._text_15,
      this._el_16,
      this._text_17,
      this._text_18,
      this._text_19,
      this._text_20
    ]
    ),[
      disposable_0,
      disposable_1
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import29.NgClass) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 6)))) { return this._NgClass_2_3.context; }
    if (((token === import18.DefectsAdvancedSearchFinderComponent) && ((10 <= requestNodeIndex) && (requestNodeIndex <= 11)))) { return this._DefectsAdvancedSearchFinderComponent_10_3.context; }
    if (((token === import6.GridAction) && ((16 <= requestNodeIndex) && (requestNodeIndex <= 17)))) { return this._GridAction_16_3; }
    if (((token === import21.GlobalAction) && ((16 <= requestNodeIndex) && (requestNodeIndex <= 17)))) { return this._GlobalAction_16_4; }
    if (((token === import22.UtililtyFunctions) && ((16 <= requestNodeIndex) && (requestNodeIndex <= 17)))) { return this._UtililtyFunctions_16_5; }
    if (((token === import20.GridComponent) && ((16 <= requestNodeIndex) && (requestNodeIndex <= 17)))) { return this._GridComponent_16_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = this._map_30(true,true,this.context.hideHeader);
    this._NgClass_2_3.check_ngClass(currVal_2_0_0,throwOnChange,false);
    this._NgClass_2_3.ngDoCheck(this,this._el_2,throwOnChange);
    const currVal_10_0_0:any = this.context.filters;
    this._DefectsAdvancedSearchFinderComponent_10_3.check_filters(currVal_10_0_0,throwOnChange,false);
    const currVal_10_0_1:any = this.context.hiddenOptions;
    this._DefectsAdvancedSearchFinderComponent_10_3.check_hiddenOptions(currVal_10_0_1,throwOnChange,false);
    const currVal_10_0_2:any = this.context.selectedSearchCriteria;
    this._DefectsAdvancedSearchFinderComponent_10_3.check_selectedSearchCriteria(currVal_10_0_2,throwOnChange,false);
    const currVal_10_0_3:any = this.context.isFileNewDefect;
    this._DefectsAdvancedSearchFinderComponent_10_3.check_isFileNewDefect(currVal_10_0_3,throwOnChange,false);
    const currVal_10_0_4:any = this.context.type;
    this._DefectsAdvancedSearchFinderComponent_10_3.check_type(currVal_10_0_4,throwOnChange,false);
    this._DefectsAdvancedSearchFinderComponent_10_3.ngDoCheck(this,this._el_10,throwOnChange);
    const currVal_16_0_0:any = this.context.gridRows;
    this._GridComponent_16_6.check_rows(currVal_16_0_0,throwOnChange,false);
    const currVal_16_0_1:any = this.context.searchGridType;
    this._GridComponent_16_6.check_gridType(currVal_16_0_1,throwOnChange,false);
    const currVal_16_0_2:any = this.context.selectedReqIds;
    this._GridComponent_16_6.check_rowIds(currVal_16_0_2,throwOnChange,false);
    const currVal_16_0_3:any = this.context.paginationOptions;
    this._GridComponent_16_6.check_paginationOptions(currVal_16_0_3,throwOnChange,false);
    this._GridComponent_16_6.ngDoCheck(this,this._el_16,throwOnChange);
    const currVal_31:any = import3.inlineInterpolate(1,'',(this.context.isFileNewDefect? 'Link Defects': 'Search'),'');
    if (import3.checkBinding(throwOnChange,this._expr_31,currVal_31)) {
      this.renderer.setText(this._text_5,currVal_31);
      this._expr_31 = currVal_31;
    }
    this.compView_10.internalDetectChanges(throwOnChange);
    this.compView_16.internalDetectChanges(throwOnChange);
    if (!throwOnChange) {
      if ((this.numberOfChecks === 0)) { this._DefectsAdvancedSearchFinderComponent_10_3.context.ngAfterViewInit(); }
      if ((this.numberOfChecks === 0)) { this._GridComponent_16_6.context.ngAfterViewInit(); }
    }
  }
  destroyInternal():void {
    this.compView_10.destroy();
    this.compView_16.destroy();
    this._DefectsAdvancedSearchFinderComponent_10_3.ngOnDestroy();
    this._GridComponent_16_6.ngOnDestroy();
  }
  handleEvent_10(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'showFileNewDefectDialog')) {
      const pd_sub_0:any = ((<any>this.context.openFileNewDefectDialog()) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'onSelectedSearchCriteriaChange')) {
      const pd_sub_1:any = ((<any>this.context.selectedSearchCriteriaChange($event)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'onSearchDefectById')) {
      const pd_sub_2:any = ((<any>this.context.searchDefectById($event)) !== false);
      result = (pd_sub_2 && result);
    }
    if ((eventName == 'onSearchDefectsByJQL')) {
      const pd_sub_3:any = ((<any>this.context.searchDefectsByJQL($event)) !== false);
      result = (pd_sub_3 && result);
    }
    if ((eventName == 'onSearchDefectsByFilters')) {
      const pd_sub_4:any = ((<any>this.context.searchDefectsByFilters($event)) !== false);
      result = (pd_sub_4 && result);
    }
    if ((eventName == 'setFolderstructure')) {
      const pd_sub_5:any = ((<any>this.context.onSelectFolderStructure($event)) !== false);
      result = (pd_sub_5 && result);
    }
    return result;
  }
  handleEvent_16(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onGridPrevClick')) {
      const pd_sub_0:any = ((<any>this.context.gridPrevClick($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'onGridNextClick')) {
      const pd_sub_1:any = ((<any>this.context.gridNextClick($event)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'onGridPaginateByIndex')) {
      const pd_sub_2:any = ((<any>this.context.gridPaginateByIndex($event)) !== false);
      result = (pd_sub_2 && result);
    }
    if ((eventName == 'onGridPageSizeChange')) {
      const pd_sub_3:any = ((<any>this.context.gridPageSizeChange($event)) !== false);
      result = (pd_sub_3 && result);
    }
    if ((eventName == 'onGridRowSelection')) {
      const pd_sub_4:any = ((<any>this.context.gridRowSelection($event)) !== false);
      result = (pd_sub_4 && result);
    }
    if ((eventName == 'onGridIconClick')) {
      const pd_sub_5:any = ((<any>this.context.gridIconClick($event)) !== false);
      result = (pd_sub_5 && result);
    }
    return result;
  }
}