/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../../app/view/components/projects/project_releases.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '../../../../../app/actions/grid.action';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '@angular/http/src/http';
import * as import10 from '../../../../../app/services/pouch.db.service';
import * as import11 from '@angular/router/src/router';
import * as import12 from '../../../../../app/view/components/grid/grid.component';
import * as import13 from '../../../../../app/actions/global.action';
import * as import14 from '../../../../../app/utils/scripts/utils';
import * as import15 from '../grid/grid.component.ngfactory';
import * as import16 from '@angular/core/src/linker/element_ref';
import * as import17 from '@angular/core/src/zone/ng_zone';
import * as import18 from '../../../../../app/services/toastr.service';
export class Wrapper_ProjectReleasesComponent {
  /*private*/ _eventHandler:Function;
  context:import0.ProjectReleasesComponent;
  /*private*/ _changed:boolean;
  constructor(p0:any,p1:any) {
    this._changed = false;
    this.context = new import0.ProjectReleasesComponent(p0,p1);
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_ProjectReleasesComponent_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_ProjectReleasesComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.ProjectReleasesComponent>;
  _GridAction_0_3:import5.GridAction;
  _ProjectReleasesComponent_0_4:Wrapper_ProjectReleasesComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ProjectReleasesComponent_Host0,renderType_ProjectReleasesComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'project-releases',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_ProjectReleasesComponent0(this.viewUtils,this,0,this._el_0);
    this._GridAction_0_3 = new import5.GridAction(this.injectorGet(import9.Http,this.parentIndex),this.injectorGet(import10.PouchDBPrefsServices,this.parentIndex));
    this._ProjectReleasesComponent_0_4 = new Wrapper_ProjectReleasesComponent(this._GridAction_0_3,this.injectorGet(import11.Router,this.parentIndex));
    this.compView_0.create(this._ProjectReleasesComponent_0_4.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._ProjectReleasesComponent_0_4.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import5.GridAction) && (0 === requestNodeIndex))) { return this._GridAction_0_3; }
    if (((token === import0.ProjectReleasesComponent) && (0 === requestNodeIndex))) { return this._ProjectReleasesComponent_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._ProjectReleasesComponent_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const ProjectReleasesComponentNgFactory:import8.ComponentFactory<import0.ProjectReleasesComponent> = new import8.ComponentFactory<import0.ProjectReleasesComponent>('project-releases',View_ProjectReleasesComponent_Host0,import0.ProjectReleasesComponent);
const styles_ProjectReleasesComponent:any[] = ([] as any[]);
var renderType_ProjectReleasesComponent:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,styles_ProjectReleasesComponent,{});
export class View_ProjectReleasesComponent0 extends import1.AppView<import0.ProjectReleasesComponent> {
  _el_0:any;
  _el_1:any;
  _text_2:any;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _el_6:any;
  compView_6:import1.AppView<import12.GridComponent>;
  _GridAction_6_3:import5.GridAction;
  _GlobalAction_6_4:import13.GlobalAction;
  _UtililtyFunctions_6_5:import14.UtililtyFunctions;
  _GridComponent_6_6:import15.Wrapper_GridComponent;
  _text_7:any;
  _text_8:any;
  _text_9:any;
  _text_10:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ProjectReleasesComponent0,renderType_ProjectReleasesComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','zee-module-header'),(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,this._el_0,'span',new import3.InlineArray2(2,'class','zee-module-header-left'),(null as any));
    this._text_2 = this.renderer.createText(this._el_1,'Release Details',(null as any));
    this._text_3 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','module-content zephyr-releases-wrapper flex-column-stretch'),(null as any));
    this._text_5 = this.renderer.createText(this._el_4,'\n    ',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_4,'grid',new import3.InlineArray2(2,'class','project-release-grid-table'),(null as any));
    this.compView_6 = new import15.View_GridComponent0(this.viewUtils,this,6,this._el_6);
    this._GridAction_6_3 = new import5.GridAction(this.parentView.injectorGet(import9.Http,this.parentIndex),this.parentView.injectorGet(import10.PouchDBPrefsServices,this.parentIndex));
    this._GlobalAction_6_4 = new import13.GlobalAction(this.parentView.injectorGet(import9.Http,this.parentIndex));
    this._UtililtyFunctions_6_5 = new import14.UtililtyFunctions();
    this._GridComponent_6_6 = new import15.Wrapper_GridComponent(this._GridAction_6_3,this._GlobalAction_6_4,new import16.ElementRef(this._el_6),this._UtililtyFunctions_6_5,this.compView_6.ref,this.parentView.injectorGet(import17.NgZone,this.parentIndex),this.parentView.injectorGet(import11.Router,this.parentIndex),this.parentView.injectorGet(import10.PouchDBPrefsServices,this.parentIndex),this.parentView.injectorGet(import18.ToastrService,this.parentIndex));
    this._text_7 = this.renderer.createText((null as any),'\n    ',(null as any));
    this.compView_6.create(this._GridComponent_6_6.context);
    this._text_8 = this.renderer.createText(this._el_4,'\n',(null as any));
    this._text_9 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._text_10 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_6,new import3.InlineArray16(10,'onGridPrevClick',(null as any),'onGridNextClick',(null as any),'onGridLinkClick',(null as any),'onGridPageSizeChange',(null as any),'onGridPaginateByIndex',(null as any)),this.eventHandler(this.handleEvent_6));
    this._GridComponent_6_6.subscribe(this,this.eventHandler(this.handleEvent_6),false,true,true,true,false,false,false,false,false,true,true,false,false,false,false,false,false);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._el_1,
      this._text_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._text_8,
      this._text_9,
      this._text_10
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import5.GridAction) && ((6 <= requestNodeIndex) && (requestNodeIndex <= 7)))) { return this._GridAction_6_3; }
    if (((token === import13.GlobalAction) && ((6 <= requestNodeIndex) && (requestNodeIndex <= 7)))) { return this._GlobalAction_6_4; }
    if (((token === import14.UtililtyFunctions) && ((6 <= requestNodeIndex) && (requestNodeIndex <= 7)))) { return this._UtililtyFunctions_6_5; }
    if (((token === import12.GridComponent) && ((6 <= requestNodeIndex) && (requestNodeIndex <= 7)))) { return this._GridComponent_6_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_6_0_0:any = this.context.releaseGridRows;
    this._GridComponent_6_6.check_rows(currVal_6_0_0,throwOnChange,false);
    const currVal_6_0_1:any = this.context._releaseGridType;
    this._GridComponent_6_6.check_gridType(currVal_6_0_1,throwOnChange,false);
    const currVal_6_0_2:any = this.context.paginationOptions;
    this._GridComponent_6_6.check_paginationOptions(currVal_6_0_2,throwOnChange,false);
    this._GridComponent_6_6.ngDoCheck(this,this._el_6,throwOnChange);
    this.compView_6.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._GridComponent_6_6.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_6.destroy();
    this._GridComponent_6_6.ngOnDestroy();
  }
  handleEvent_6(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onGridPrevClick')) {
      const pd_sub_0:any = ((<any>this.context.releaseGridPrevClick($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'onGridNextClick')) {
      const pd_sub_1:any = ((<any>this.context.releaseGridNextClick($event)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'onGridLinkClick')) {
      const pd_sub_2:any = ((<any>this.context.releaseGridLinkClick($event)) !== false);
      result = (pd_sub_2 && result);
    }
    if ((eventName == 'onGridPageSizeChange')) {
      const pd_sub_3:any = ((<any>this.context.releaseGridPageSizeChange($event)) !== false);
      result = (pd_sub_3 && result);
    }
    if ((eventName == 'onGridPaginateByIndex')) {
      const pd_sub_4:any = ((<any>this.context.releaseGridPaginateByIndex($event)) !== false);
      result = (pd_sub_4 && result);
    }
    return result;
  }
}