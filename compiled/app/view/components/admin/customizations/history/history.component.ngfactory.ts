/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../../../../app/view/components/admin/customizations/history/history.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '../../../../../../../app/actions/admin.action';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '@angular/http/src/http';
import * as import10 from '../../../../../../../app/services/pouch.db.service';
import * as import11 from '@angular/forms/src/form_builder';
import * as import12 from '../../../../../../node_modules/@angular/forms/src/directives/reactive_directives/form_group_directive.ngfactory';
import * as import13 from '../../../../../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import14 from '../../../../../../../app/view/components/common/modal/modal.component';
import * as import15 from '../../../common/modal/modal.component.ngfactory';
import * as import16 from '../../../../../../../app/view/components/grid/grid.component';
import * as import17 from '../../../../../../../app/actions/grid.action';
import * as import18 from '../../../../../../../app/actions/global.action';
import * as import19 from '../../../../../../../app/utils/scripts/utils';
import * as import20 from '../../../grid/grid.component.ngfactory';
import * as import21 from '../../../../../../../app/view/components/common/calendar/calendar.component';
import * as import22 from '../../../common/calendar/calendar.component.ngfactory';
import * as import23 from '../../../../../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import24 from '../../../../../../node_modules/@angular/forms/src/directives/radio_control_value_accessor.ngfactory';
import * as import25 from '../../../../../../node_modules/@angular/forms/src/directives/ng_model.ngfactory';
import * as import26 from '../../../../../../node_modules/@angular/forms/src/directives/checkbox_value_accessor.ngfactory';
import * as import27 from '../../../../../../node_modules/@angular/forms/src/directives/reactive_directives/form_control_name.ngfactory';
import * as import28 from '../../../../../../node_modules/@angular/common/src/directives/ng_class.ngfactory';
import * as import29 from '@angular/core/src/change_detection/change_detection_util';
import * as import30 from '@angular/core/src/linker/element_ref';
import * as import31 from '@angular/core/src/zone/ng_zone';
import * as import32 from '@angular/router/src/router';
import * as import33 from '../../../../../../../app/services/toastr.service';
import * as import34 from '@angular/forms/src/directives/radio_control_value_accessor';
import * as import35 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import36 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import37 from '@angular/forms/src/directives/default_value_accessor';
import * as import38 from '@angular/forms/src/directives/control_value_accessor';
import * as import39 from '@angular/forms/src/directives/ng_model';
import * as import40 from '@angular/forms/src/directives/ng_control';
import * as import41 from '@angular/forms/src/directives/ng_control_status';
import * as import42 from '@angular/forms/src/directives/checkbox_value_accessor';
import * as import43 from '@angular/forms/src/directives/reactive_directives/form_control_name';
import * as import44 from '@angular/common/src/directives/ng_class';
import * as import45 from '@angular/forms/src/directives/reactive_directives/form_group_directive';
import * as import46 from '@angular/forms/src/directives/control_container';
export class Wrapper_HistoryModalComponent {
  /*private*/ _eventHandler:Function;
  context:import0.HistoryModalComponent;
  /*private*/ _changed:boolean;
  subscription0:any;
  constructor(p0:any,p1:any) {
    this._changed = false;
    this.context = new import0.HistoryModalComponent(p0,p1);
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    this.context.ngOnDestroy();
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.confirmationDialogueData.subscribe(_eventHandler.bind(view,'confirmationDialogueData'))); }
  }
}
var renderType_HistoryModalComponent_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_HistoryModalComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.HistoryModalComponent>;
  _AdminAction_0_3:import5.AdminAction;
  _HistoryModalComponent_0_4:Wrapper_HistoryModalComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_HistoryModalComponent_Host0,renderType_HistoryModalComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'history-modal',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_HistoryModalComponent0(this.viewUtils,this,0,this._el_0);
    this._AdminAction_0_3 = new import5.AdminAction(this.injectorGet(import9.Http,this.parentIndex),this.injectorGet(import10.PouchDBPrefsServices,this.parentIndex));
    this._HistoryModalComponent_0_4 = new Wrapper_HistoryModalComponent(this.injectorGet(import11.FormBuilder,this.parentIndex),this._AdminAction_0_3);
    this.compView_0.create(this._HistoryModalComponent_0_4.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._HistoryModalComponent_0_4.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import5.AdminAction) && (0 === requestNodeIndex))) { return this._AdminAction_0_3; }
    if (((token === import0.HistoryModalComponent) && (0 === requestNodeIndex))) { return this._HistoryModalComponent_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._HistoryModalComponent_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._HistoryModalComponent_0_4.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._HistoryModalComponent_0_4.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const HistoryModalComponentNgFactory:import8.ComponentFactory<import0.HistoryModalComponent> = new import8.ComponentFactory<import0.HistoryModalComponent>('history-modal',View_HistoryModalComponent_Host0,import0.HistoryModalComponent);
const styles_HistoryModalComponent:any[] = ([] as any[]);
var renderType_HistoryModalComponent:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,styles_HistoryModalComponent,{});
export class View_HistoryModalComponent0 extends import1.AppView<import0.HistoryModalComponent> {
  _el_0:any;
  _FormGroupDirective_0_3:import12.Wrapper_FormGroupDirective;
  _ControlContainer_0_4:any;
  _NgControlStatusGroup_0_5:import13.Wrapper_NgControlStatusGroup;
  _text_1:any;
  _el_2:any;
  compView_2:import1.AppView<import14.ModalComponent>;
  _ModalComponent_2_3:import15.Wrapper_ModalComponent;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _el_6:any;
  _text_7:any;
  _el_8:any;
  _text_9:any;
  _text_10:any;
  _el_11:any;
  _text_12:any;
  _text_13:any;
  _text_14:any;
  _el_15:any;
  _text_16:any;
  _el_17:any;
  compView_17:import1.AppView<import16.GridComponent>;
  _GridAction_17_3:import17.GridAction;
  _GlobalAction_17_4:import18.GlobalAction;
  _UtililtyFunctions_17_5:import19.UtililtyFunctions;
  _GridComponent_17_6:import20.Wrapper_GridComponent;
  _text_18:any;
  _text_19:any;
  _el_20:any;
  _text_21:any;
  _el_22:any;
  _text_23:any;
  _text_24:any;
  _el_25:any;
  _text_26:any;
  _el_27:any;
  _text_28:any;
  _text_29:any;
  _el_30:any;
  _text_31:any;
  _text_32:any;
  _el_33:any;
  _text_34:any;
  _text_35:any;
  _text_36:any;
  _el_37:any;
  _text_38:any;
  _el_39:any;
  _text_40:any;
  _el_41:any;
  _text_42:any;
  _el_43:any;
  _text_44:any;
  _text_45:any;
  _text_46:any;
  _el_47:any;
  _text_48:any;
  _el_49:any;
  compView_49:import1.AppView<import21.CalendarComponent>;
  _CalendarComponent_49_3:import22.Wrapper_CalendarComponent;
  _text_50:any;
  _text_51:any;
  _text_52:any;
  _text_53:any;
  _el_54:any;
  _text_55:any;
  _el_56:any;
  _text_57:any;
  _text_58:any;
  _el_59:any;
  _text_60:any;
  _el_61:any;
  _DefaultValueAccessor_61_3:import23.Wrapper_DefaultValueAccessor;
  _RadioControlValueAccessor_61_4:import24.Wrapper_RadioControlValueAccessor;
  _NG_VALUE_ACCESSOR_61_5:any[];
  _NgModel_61_6:import25.Wrapper_NgModel;
  _NgControl_61_7:any;
  _NgControlStatus_61_8:import13.Wrapper_NgControlStatus;
  _text_62:any;
  _el_63:any;
  _text_64:any;
  _el_65:any;
  _text_66:any;
  _el_67:any;
  _text_68:any;
  _text_69:any;
  _text_70:any;
  _text_71:any;
  _text_72:any;
  _el_73:any;
  _text_74:any;
  _el_75:any;
  _text_76:any;
  _text_77:any;
  _el_78:any;
  _text_79:any;
  _el_80:any;
  _DefaultValueAccessor_80_3:import23.Wrapper_DefaultValueAccessor;
  _RadioControlValueAccessor_80_4:import24.Wrapper_RadioControlValueAccessor;
  _NG_VALUE_ACCESSOR_80_5:any[];
  _NgModel_80_6:import25.Wrapper_NgModel;
  _NgControl_80_7:any;
  _NgControlStatus_80_8:import13.Wrapper_NgControlStatus;
  _text_81:any;
  _el_82:any;
  _text_83:any;
  _el_84:any;
  _text_85:any;
  _el_86:any;
  _text_87:any;
  _text_88:any;
  _text_89:any;
  _text_90:any;
  _text_91:any;
  _text_92:any;
  _el_93:any;
  _text_94:any;
  _el_95:any;
  _text_96:any;
  _el_97:any;
  _text_98:any;
  _text_99:any;
  _el_100:any;
  _text_101:any;
  _el_102:any;
  _CheckboxControlValueAccessor_102_3:import26.Wrapper_CheckboxControlValueAccessor;
  _NG_VALUE_ACCESSOR_102_4:any[];
  _FormControlName_102_5:import27.Wrapper_FormControlName;
  _NgControl_102_6:any;
  _NgControlStatus_102_7:import13.Wrapper_NgControlStatus;
  _text_103:any;
  _el_104:any;
  _text_105:any;
  _text_106:any;
  _text_107:any;
  _text_108:any;
  _el_109:any;
  _text_110:any;
  _el_111:any;
  _text_112:any;
  _text_113:any;
  _el_114:any;
  _text_115:any;
  _el_116:any;
  _CheckboxControlValueAccessor_116_3:import26.Wrapper_CheckboxControlValueAccessor;
  _NG_VALUE_ACCESSOR_116_4:any[];
  _FormControlName_116_5:import27.Wrapper_FormControlName;
  _NgControl_116_6:any;
  _NgControlStatus_116_7:import13.Wrapper_NgControlStatus;
  _text_117:any;
  _el_118:any;
  _text_119:any;
  _text_120:any;
  _text_121:any;
  _text_122:any;
  _el_123:any;
  _NgClass_123_3:import28.Wrapper_NgClass;
  _text_124:any;
  _el_125:any;
  _text_126:any;
  _text_127:any;
  _el_128:any;
  _text_129:any;
  _el_130:any;
  _CheckboxControlValueAccessor_130_3:import26.Wrapper_CheckboxControlValueAccessor;
  _NG_VALUE_ACCESSOR_130_4:any[];
  _FormControlName_130_5:import27.Wrapper_FormControlName;
  _NgControl_130_6:any;
  _NgControlStatus_130_7:import13.Wrapper_NgControlStatus;
  _text_131:any;
  _el_132:any;
  _text_133:any;
  _text_134:any;
  _text_135:any;
  _text_136:any;
  _text_137:any;
  _text_138:any;
  _text_139:any;
  _text_140:any;
  _el_141:any;
  _text_142:any;
  _el_143:any;
  _text_144:any;
  _text_145:any;
  _el_146:any;
  _text_147:any;
  _text_148:any;
  _text_149:any;
  _text_150:any;
  _text_151:any;
  _map_192:any;
  _map_193:any;
  _map_194:any;
  /*private*/ _expr_195:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_HistoryModalComponent0,renderType_HistoryModalComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
    this._map_192 = import3.pureProxy1((p0:any):{[key: string]:any} => {
      return {standalone: p0};
    });
    this._map_193 = import3.pureProxy1((p0:any):{[key: string]:any} => {
      return {standalone: p0};
    });
    this._map_194 = import3.pureProxy1((p0:any):{[key: string]:any} => {
      return {disabled: p0};
    });
    this._expr_195 = import29.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'form',new import3.InlineArray2(2,'class','schedule-form'),(null as any));
    this._FormGroupDirective_0_3 = new import12.Wrapper_FormGroupDirective((null as any),(null as any));
    this._ControlContainer_0_4 = this._FormGroupDirective_0_3.context;
    this._NgControlStatusGroup_0_5 = new import13.Wrapper_NgControlStatusGroup(this._ControlContainer_0_4);
    this._text_1 = this.renderer.createText(this._el_0,'\n	',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'zui-modal',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_2 = new import15.View_ModalComponent0(this.viewUtils,this,2,this._el_2);
    this._ModalComponent_2_3 = new import15.Wrapper_ModalComponent(new import30.ElementRef(this._el_2),this.compView_2.ref);
    this._text_3 = this.renderer.createText((null as any),'\n		',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,(null as any),'zui-modal-body',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_5 = this.renderer.createText(this._el_4,'\n			',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_4,'div',new import3.InlineArray2(2,'class','clearfix'),(null as any));
    this._text_7 = this.renderer.createText(this._el_6,'\n			     ',(null as any));
    this._el_8 = import3.createRenderElement(this.renderer,this._el_6,'p',new import3.InlineArray2(2,'class','pull-left'),(null as any));
    this._text_9 = this.renderer.createText(this._el_8,'This section displays all the trend data collection jobs that were run in the last 7 days',(null as any));
    this._text_10 = this.renderer.createText(this._el_6,'\n			     ',(null as any));
    this._el_11 = import3.createRenderElement(this.renderer,this._el_6,'button',new import3.InlineArray4(4,'class','zui-btn zui-btn-tertiary pull-right','type','button'),(null as any));
    this._text_12 = this.renderer.createText(this._el_11,'Refresh History',(null as any));
    this._text_13 = this.renderer.createText(this._el_6,'\n			',(null as any));
    this._text_14 = this.renderer.createText(this._el_4,'\n			',(null as any));
    this._el_15 = import3.createRenderElement(this.renderer,this._el_4,'div',new import3.InlineArray2(2,'class','clearfix history-job-grid'),(null as any));
    this._text_16 = this.renderer.createText(this._el_15,'\n				',(null as any));
    this._el_17 = import3.createRenderElement(this.renderer,this._el_15,'grid',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_17 = new import20.View_GridComponent0(this.viewUtils,this,17,this._el_17);
    this._GridAction_17_3 = new import17.GridAction(this.parentView.injectorGet(import9.Http,this.parentIndex),this.parentView.injectorGet(import10.PouchDBPrefsServices,this.parentIndex));
    this._GlobalAction_17_4 = new import18.GlobalAction(this.parentView.injectorGet(import9.Http,this.parentIndex));
    this._UtililtyFunctions_17_5 = new import19.UtililtyFunctions();
    this._GridComponent_17_6 = new import20.Wrapper_GridComponent(this._GridAction_17_3,this._GlobalAction_17_4,new import30.ElementRef(this._el_17),this._UtililtyFunctions_17_5,this.compView_17.ref,this.parentView.injectorGet(import31.NgZone,this.parentIndex),this.parentView.injectorGet(import32.Router,this.parentIndex),this.parentView.injectorGet(import10.PouchDBPrefsServices,this.parentIndex),this.parentView.injectorGet(import33.ToastrService,this.parentIndex));
    this.compView_17.create(this._GridComponent_17_6.context);
    this._text_18 = this.renderer.createText(this._el_15,'\n			',(null as any));
    this._text_19 = this.renderer.createText(this._el_4,'\n\n			',(null as any));
    this._el_20 = import3.createRenderElement(this.renderer,this._el_4,'div',new import3.InlineArray2(2,'class','subform'),(null as any));
    this._text_21 = this.renderer.createText(this._el_20,'\n				',(null as any));
    this._el_22 = import3.createRenderElement(this.renderer,this._el_20,'h4',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_23 = this.renderer.createText(this._el_22,'On-demand data collection',(null as any));
    this._text_24 = this.renderer.createText(this._el_20,'\n				',(null as any));
    this._el_25 = import3.createRenderElement(this.renderer,this._el_20,'p',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_26 = this.renderer.createText(this._el_25,'\n					',(null as any));
    this._el_27 = import3.createRenderElement(this.renderer,this._el_25,'span',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_28 = this.renderer.createText(this._el_27,'Sometimes you might find missing data for certain dates in',(null as any));
    this._text_29 = this.renderer.createText(this._el_25,'\n					',(null as any));
    this._el_30 = import3.createRenderElement(this.renderer,this._el_25,'b',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_31 = this.renderer.createText(this._el_30,' daily pulse gadget',(null as any));
    this._text_32 = this.renderer.createText(this._el_25,'\n					',(null as any));
    this._el_33 = import3.createRenderElement(this.renderer,this._el_25,'span',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_34 = this.renderer.createText(this._el_33,'. You can fix that by re-running the trend data collection process either for a particular date or for a period of time.',(null as any));
    this._text_35 = this.renderer.createText(this._el_25,'\n				',(null as any));
    this._text_36 = this.renderer.createText(this._el_20,'\n\n					',(null as any));
    this._el_37 = import3.createRenderElement(this.renderer,this._el_20,'div',new import3.InlineArray2(2,'class','row'),(null as any));
    this._text_38 = this.renderer.createText(this._el_37,'\n		 	        	',(null as any));
    this._el_39 = import3.createRenderElement(this.renderer,this._el_37,'div',new import3.InlineArray2(2,'class','col-md-6 col-xs-12'),(null as any));
    this._text_40 = this.renderer.createText(this._el_39,'\n							',(null as any));
    this._el_41 = import3.createRenderElement(this.renderer,this._el_39,'div',new import3.InlineArray2(2,'class','clearfix'),(null as any));
    this._text_42 = this.renderer.createText(this._el_41,'\n								',(null as any));
    this._el_43 = import3.createRenderElement(this.renderer,this._el_41,'label',new import3.InlineArray2(2,'for','schedule-date'),(null as any));
    this._text_44 = this.renderer.createText(this._el_43,'Target Date:',(null as any));
    this._text_45 = this.renderer.createText(this._el_41,'\n								',(null as any));
    this._text_46 = this.renderer.createText(this._el_41,'\n								',(null as any));
    this._el_47 = import3.createRenderElement(this.renderer,this._el_41,'div',new import3.InlineArray2(2,'class','datepicker-wrap'),(null as any));
    this._text_48 = this.renderer.createText(this._el_47,'\n								    ',(null as any));
    this._el_49 = import3.createRenderElement(this.renderer,this._el_47,'calendar',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_49 = new import22.View_CalendarComponent0(this.viewUtils,this,49,this._el_49);
    this._CalendarComponent_49_3 = new import22.Wrapper_CalendarComponent(new import30.ElementRef(this._el_49));
    this._text_50 = this.renderer.createText((null as any),'\n								    ',(null as any));
    this.compView_49.create(this._CalendarComponent_49_3.context);
    this._text_51 = this.renderer.createText(this._el_47,'\n								',(null as any));
    this._text_52 = this.renderer.createText(this._el_41,'\n							',(null as any));
    this._text_53 = this.renderer.createText(this._el_39,'\n							',(null as any));
    this._el_54 = import3.createRenderElement(this.renderer,this._el_39,'div',new import3.InlineArray2(2,'class','clearfix checkbox-wrap'),(null as any));
    this._text_55 = this.renderer.createText(this._el_54,'\n								',(null as any));
    this._el_56 = import3.createRenderElement(this.renderer,this._el_54,'label',new import3.InlineArray4(4,'class','helper-label','for',''),(null as any));
    this._text_57 = this.renderer.createText(this._el_56,' ',(null as any));
    this._text_58 = this.renderer.createText(this._el_54,'\n\n								',(null as any));
    this._el_59 = import3.createRenderElement(this.renderer,this._el_54,'div',new import3.InlineArray2(2,'class','zui-radio'),(null as any));
    this._text_60 = this.renderer.createText(this._el_59,'\n									',(null as any));
    this._el_61 = import3.createRenderElement(this.renderer,this._el_59,'input',new import3.InlineArray8(6,'id','only-target-date','name','targetDateCollection','type','radio'),(null as any));
    this._DefaultValueAccessor_61_3 = new import23.Wrapper_DefaultValueAccessor(this.renderer,new import30.ElementRef(this._el_61));
    this._RadioControlValueAccessor_61_4 = new import24.Wrapper_RadioControlValueAccessor(this.renderer,new import30.ElementRef(this._el_61),this.parentView.injectorGet(import34.RadioControlRegistry,this.parentIndex),this.injector(61));
    this._NG_VALUE_ACCESSOR_61_5 = [
      this._DefaultValueAccessor_61_3.context,
      this._RadioControlValueAccessor_61_4.context
    ]
    ;
    this._NgModel_61_6 = new import25.Wrapper_NgModel(this._ControlContainer_0_4,(null as any),(null as any),this._NG_VALUE_ACCESSOR_61_5);
    this._NgControl_61_7 = this._NgModel_61_6.context;
    this._NgControlStatus_61_8 = new import13.Wrapper_NgControlStatus(this._NgControl_61_7);
    this._text_62 = this.renderer.createText(this._el_59,'\n									',(null as any));
    this._el_63 = import3.createRenderElement(this.renderer,this._el_59,'label',new import3.InlineArray2(2,'for','only-target-date'),(null as any));
    this._text_64 = this.renderer.createText(this._el_63,'\n									    ',(null as any));
    this._el_65 = import3.createRenderElement(this.renderer,this._el_63,'div',new import3.InlineArray2(2,'class','check history-checkbox'),(null as any));
    this._text_66 = this.renderer.createText(this._el_63,'\n									    ',(null as any));
    this._el_67 = import3.createRenderElement(this.renderer,this._el_63,'span',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_68 = this.renderer.createText(this._el_67,'Run only for target date',(null as any));
    this._text_69 = this.renderer.createText(this._el_63,'\n									',(null as any));
    this._text_70 = this.renderer.createText(this._el_59,'\n								',(null as any));
    this._text_71 = this.renderer.createText(this._el_54,'\n							',(null as any));
    this._text_72 = this.renderer.createText(this._el_39,'\n\n							',(null as any));
    this._el_73 = import3.createRenderElement(this.renderer,this._el_39,'div',new import3.InlineArray2(2,'class','clearfix checkbox-wrap'),(null as any));
    this._text_74 = this.renderer.createText(this._el_73,'\n								',(null as any));
    this._el_75 = import3.createRenderElement(this.renderer,this._el_73,'label',new import3.InlineArray4(4,'class','helper-label','for',''),(null as any));
    this._text_76 = this.renderer.createText(this._el_75,' ',(null as any));
    this._text_77 = this.renderer.createText(this._el_73,'\n								',(null as any));
    this._el_78 = import3.createRenderElement(this.renderer,this._el_73,'div',new import3.InlineArray2(2,'class','zui-radio'),(null as any));
    this._text_79 = this.renderer.createText(this._el_78,'\n									',(null as any));
    this._el_80 = import3.createRenderElement(this.renderer,this._el_78,'input',new import3.InlineArray8(6,'id','from-target-date','name','targetDateCollection','type','radio'),(null as any));
    this._DefaultValueAccessor_80_3 = new import23.Wrapper_DefaultValueAccessor(this.renderer,new import30.ElementRef(this._el_80));
    this._RadioControlValueAccessor_80_4 = new import24.Wrapper_RadioControlValueAccessor(this.renderer,new import30.ElementRef(this._el_80),this.parentView.injectorGet(import34.RadioControlRegistry,this.parentIndex),this.injector(80));
    this._NG_VALUE_ACCESSOR_80_5 = [
      this._DefaultValueAccessor_80_3.context,
      this._RadioControlValueAccessor_80_4.context
    ]
    ;
    this._NgModel_80_6 = new import25.Wrapper_NgModel(this._ControlContainer_0_4,(null as any),(null as any),this._NG_VALUE_ACCESSOR_80_5);
    this._NgControl_80_7 = this._NgModel_80_6.context;
    this._NgControlStatus_80_8 = new import13.Wrapper_NgControlStatus(this._NgControl_80_7);
    this._text_81 = this.renderer.createText(this._el_78,'\n									',(null as any));
    this._el_82 = import3.createRenderElement(this.renderer,this._el_78,'label',new import3.InlineArray2(2,'for','from-target-date'),(null as any));
    this._text_83 = this.renderer.createText(this._el_82,'\n									    ',(null as any));
    this._el_84 = import3.createRenderElement(this.renderer,this._el_82,'div',new import3.InlineArray2(2,'class','check history-checkbox'),(null as any));
    this._text_85 = this.renderer.createText(this._el_82,'\n									    ',(null as any));
    this._el_86 = import3.createRenderElement(this.renderer,this._el_82,'span',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_87 = this.renderer.createText(this._el_86,'Run from target date until today',(null as any));
    this._text_88 = this.renderer.createText(this._el_82,'\n									',(null as any));
    this._text_89 = this.renderer.createText(this._el_78,'\n								',(null as any));
    this._text_90 = this.renderer.createText(this._el_73,'\n							',(null as any));
    this._text_91 = this.renderer.createText(this._el_39,'\n						',(null as any));
    this._text_92 = this.renderer.createText(this._el_37,'\n\n						',(null as any));
    this._el_93 = import3.createRenderElement(this.renderer,this._el_37,'div',new import3.InlineArray2(2,'class','col-md-6 col-xs-12'),(null as any));
    this._text_94 = this.renderer.createText(this._el_93,'\n							',(null as any));
    this._el_95 = import3.createRenderElement(this.renderer,this._el_93,'div',new import3.InlineArray2(2,'class','clearfix checkbox-wrap'),(null as any));
    this._text_96 = this.renderer.createText(this._el_95,'\n								',(null as any));
    this._el_97 = import3.createRenderElement(this.renderer,this._el_95,'label',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_98 = this.renderer.createText(this._el_97,'Select trend(s):',(null as any));
    this._text_99 = this.renderer.createText(this._el_95,'\n								',(null as any));
    this._el_100 = import3.createRenderElement(this.renderer,this._el_95,'div',new import3.InlineArray2(2,'class','zui-checkbox2'),(null as any));
    this._text_101 = this.renderer.createText(this._el_100,'\n									',(null as any));
    this._el_102 = import3.createRenderElement(this.renderer,this._el_100,'input',new import3.InlineArray8(8,'formControlName','tccTrend','id','testcase-creation','name','tccTrend','type','checkbox'),(null as any));
    this._CheckboxControlValueAccessor_102_3 = new import26.Wrapper_CheckboxControlValueAccessor(this.renderer,new import30.ElementRef(this._el_102));
    this._NG_VALUE_ACCESSOR_102_4 = [this._CheckboxControlValueAccessor_102_3.context];
    this._FormControlName_102_5 = new import27.Wrapper_FormControlName(this._ControlContainer_0_4,(null as any),(null as any),this._NG_VALUE_ACCESSOR_102_4);
    this._NgControl_102_6 = this._FormControlName_102_5.context;
    this._NgControlStatus_102_7 = new import13.Wrapper_NgControlStatus(this._NgControl_102_6);
    this._text_103 = this.renderer.createText(this._el_100,'\n									',(null as any));
    this._el_104 = import3.createRenderElement(this.renderer,this._el_100,'label',new import3.InlineArray2(2,'for','testcase-creation'),(null as any));
    this._text_105 = this.renderer.createText(this._el_104,'Testcase Creation',(null as any));
    this._text_106 = this.renderer.createText(this._el_100,'\n								',(null as any));
    this._text_107 = this.renderer.createText(this._el_95,'\n							',(null as any));
    this._text_108 = this.renderer.createText(this._el_93,'\n\n							',(null as any));
    this._el_109 = import3.createRenderElement(this.renderer,this._el_93,'div',new import3.InlineArray2(2,'class','clearfix checkbox-wrap'),(null as any));
    this._text_110 = this.renderer.createText(this._el_109,'\n								',(null as any));
    this._el_111 = import3.createRenderElement(this.renderer,this._el_109,'label',new import3.InlineArray2(2,'class','helper-label'),(null as any));
    this._text_112 = this.renderer.createText(this._el_111,' ',(null as any));
    this._text_113 = this.renderer.createText(this._el_109,'\n								',(null as any));
    this._el_114 = import3.createRenderElement(this.renderer,this._el_109,'div',new import3.InlineArray2(2,'class','zui-checkbox2'),(null as any));
    this._text_115 = this.renderer.createText(this._el_114,'\n									',(null as any));
    this._el_116 = import3.createRenderElement(this.renderer,this._el_114,'input',new import3.InlineArray8(8,'formControlName','tceTrend','id','testcase-execution','name','tceTrend','type','checkbox'),(null as any));
    this._CheckboxControlValueAccessor_116_3 = new import26.Wrapper_CheckboxControlValueAccessor(this.renderer,new import30.ElementRef(this._el_116));
    this._NG_VALUE_ACCESSOR_116_4 = [this._CheckboxControlValueAccessor_116_3.context];
    this._FormControlName_116_5 = new import27.Wrapper_FormControlName(this._ControlContainer_0_4,(null as any),(null as any),this._NG_VALUE_ACCESSOR_116_4);
    this._NgControl_116_6 = this._FormControlName_116_5.context;
    this._NgControlStatus_116_7 = new import13.Wrapper_NgControlStatus(this._NgControl_116_6);
    this._text_117 = this.renderer.createText(this._el_114,'\n									',(null as any));
    this._el_118 = import3.createRenderElement(this.renderer,this._el_114,'label',new import3.InlineArray2(2,'for','testcase-execution'),(null as any));
    this._text_119 = this.renderer.createText(this._el_118,'Testcase Execution',(null as any));
    this._text_120 = this.renderer.createText(this._el_114,'\n								',(null as any));
    this._text_121 = this.renderer.createText(this._el_109,'\n							',(null as any));
    this._text_122 = this.renderer.createText(this._el_93,'\n\n							',(null as any));
    this._el_123 = import3.createRenderElement(this.renderer,this._el_93,'div',new import3.InlineArray2(2,'class','clearfix checkbox-wrap'),(null as any));
    this._NgClass_123_3 = new import28.Wrapper_NgClass(this.parentView.injectorGet(import35.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import36.KeyValueDiffers,this.parentIndex),new import30.ElementRef(this._el_123),this.renderer);
    this._text_124 = this.renderer.createText(this._el_123,'\n								',(null as any));
    this._el_125 = import3.createRenderElement(this.renderer,this._el_123,'label',new import3.InlineArray2(2,'class','helper-label'),(null as any));
    this._text_126 = this.renderer.createText(this._el_125,' ',(null as any));
    this._text_127 = this.renderer.createText(this._el_123,'\n								',(null as any));
    this._el_128 = import3.createRenderElement(this.renderer,this._el_123,'div',new import3.InlineArray2(2,'class','zui-checkbox2'),(null as any));
    this._text_129 = this.renderer.createText(this._el_128,'\n									',(null as any));
    this._el_130 = import3.createRenderElement(this.renderer,this._el_128,'input',new import3.InlineArray8(8,'formControlName','defectTrend','id','defect','name','defectTrend','type','checkbox'),(null as any));
    this._CheckboxControlValueAccessor_130_3 = new import26.Wrapper_CheckboxControlValueAccessor(this.renderer,new import30.ElementRef(this._el_130));
    this._NG_VALUE_ACCESSOR_130_4 = [this._CheckboxControlValueAccessor_130_3.context];
    this._FormControlName_130_5 = new import27.Wrapper_FormControlName(this._ControlContainer_0_4,(null as any),(null as any),this._NG_VALUE_ACCESSOR_130_4);
    this._NgControl_130_6 = this._FormControlName_130_5.context;
    this._NgControlStatus_130_7 = new import13.Wrapper_NgControlStatus(this._NgControl_130_6);
    this._text_131 = this.renderer.createText(this._el_128,'\n									',(null as any));
    this._el_132 = import3.createRenderElement(this.renderer,this._el_128,'label',new import3.InlineArray2(2,'for','defect'),(null as any));
    this._text_133 = this.renderer.createText(this._el_132,'Defect',(null as any));
    this._text_134 = this.renderer.createText(this._el_128,'\n								',(null as any));
    this._text_135 = this.renderer.createText(this._el_123,'\n							',(null as any));
    this._text_136 = this.renderer.createText(this._el_93,'\n						',(null as any));
    this._text_137 = this.renderer.createText(this._el_37,'\n					',(null as any));
    this._text_138 = this.renderer.createText(this._el_20,'\n			',(null as any));
    this._text_139 = this.renderer.createText(this._el_4,'\n		',(null as any));
    this._text_140 = this.renderer.createText((null as any),'\n		',(null as any));
    this._el_141 = import3.createRenderElement(this.renderer,(null as any),'zui-modal-footer',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_142 = this.renderer.createText(this._el_141,'\n			',(null as any));
    this._el_143 = import3.createRenderElement(this.renderer,this._el_141,'button',new import3.InlineArray8(6,'class','zui-btn zui-btn-sec','data-dismiss','modal','type','button'),(null as any));
    this._text_144 = this.renderer.createText(this._el_143,'Cancel',(null as any));
    this._text_145 = this.renderer.createText(this._el_141,'\n			',(null as any));
    this._el_146 = import3.createRenderElement(this.renderer,this._el_141,'button',new import3.InlineArray4(4,'class','zui-btn zui-btn-primary','type','submit'),(null as any));
    this._text_147 = this.renderer.createText(this._el_146,'Run Now',(null as any));
    this._text_148 = this.renderer.createText(this._el_141,'\n		',(null as any));
    this._text_149 = this.renderer.createText((null as any),'\n	',(null as any));
    this.compView_2.create(this._ModalComponent_2_3.context);
    this._text_150 = this.renderer.createText(this._el_0,'\n',(null as any));
    this._text_151 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray8(6,'ngSubmit',(null as any),'submit',(null as any),'reset',(null as any)),this.eventHandler(this.handleEvent_0));
    this._FormGroupDirective_0_3.subscribe(this,this.eventHandler(this.handleEvent_0),true);
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_11,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_11));
    var disposable_2:Function = import3.subscribeToRenderElement(this,this._el_17,new import3.InlineArray8(8,'onGridPrevClick',(null as any),'onGridNextClick',(null as any),'onGridPaginateByIndex',(null as any),'onGridPageSizeChange',(null as any)),this.eventHandler(this.handleEvent_17));
    this._GridComponent_17_6.subscribe(this,this.eventHandler(this.handleEvent_17),false,true,true,false,false,false,false,false,false,true,true,false,false,false,false,false,false);
    var disposable_3:Function = import3.subscribeToRenderElement(this,this._el_61,new import3.InlineArray8(8,'ngModelChange',(null as any),'input',(null as any),'blur',(null as any),'change',(null as any)),this.eventHandler(this.handleEvent_61));
    this._NgModel_61_6.subscribe(this,this.eventHandler(this.handleEvent_61),true);
    var disposable_4:Function = import3.subscribeToRenderElement(this,this._el_80,new import3.InlineArray8(8,'ngModelChange',(null as any),'input',(null as any),'blur',(null as any),'change',(null as any)),this.eventHandler(this.handleEvent_80));
    this._NgModel_80_6.subscribe(this,this.eventHandler(this.handleEvent_80),true);
    var disposable_5:Function = import3.subscribeToRenderElement(this,this._el_102,new import3.InlineArray4(4,'change',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_102));
    var disposable_6:Function = import3.subscribeToRenderElement(this,this._el_116,new import3.InlineArray4(4,'change',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_116));
    var disposable_7:Function = import3.subscribeToRenderElement(this,this._el_130,new import3.InlineArray4(4,'change',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_130));
    var disposable_8:Function = import3.subscribeToRenderElement(this,this._el_143,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_143));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._text_10,
      this._el_11,
      this._text_12,
      this._text_13,
      this._text_14,
      this._el_15,
      this._text_16,
      this._el_17,
      this._text_18,
      this._text_19,
      this._el_20,
      this._text_21,
      this._el_22,
      this._text_23,
      this._text_24,
      this._el_25,
      this._text_26,
      this._el_27,
      this._text_28,
      this._text_29,
      this._el_30,
      this._text_31,
      this._text_32,
      this._el_33,
      this._text_34,
      this._text_35,
      this._text_36,
      this._el_37,
      this._text_38,
      this._el_39,
      this._text_40,
      this._el_41,
      this._text_42,
      this._el_43,
      this._text_44,
      this._text_45,
      this._text_46,
      this._el_47,
      this._text_48,
      this._el_49,
      this._text_50,
      this._text_51,
      this._text_52,
      this._text_53,
      this._el_54,
      this._text_55,
      this._el_56,
      this._text_57,
      this._text_58,
      this._el_59,
      this._text_60,
      this._el_61,
      this._text_62,
      this._el_63,
      this._text_64,
      this._el_65,
      this._text_66,
      this._el_67,
      this._text_68,
      this._text_69,
      this._text_70,
      this._text_71,
      this._text_72,
      this._el_73,
      this._text_74,
      this._el_75,
      this._text_76,
      this._text_77,
      this._el_78,
      this._text_79,
      this._el_80,
      this._text_81,
      this._el_82,
      this._text_83,
      this._el_84,
      this._text_85,
      this._el_86,
      this._text_87,
      this._text_88,
      this._text_89,
      this._text_90,
      this._text_91,
      this._text_92,
      this._el_93,
      this._text_94,
      this._el_95,
      this._text_96,
      this._el_97,
      this._text_98,
      this._text_99,
      this._el_100,
      this._text_101,
      this._el_102,
      this._text_103,
      this._el_104,
      this._text_105,
      this._text_106,
      this._text_107,
      this._text_108,
      this._el_109,
      this._text_110,
      this._el_111,
      this._text_112,
      this._text_113,
      this._el_114,
      this._text_115,
      this._el_116,
      this._text_117,
      this._el_118,
      this._text_119,
      this._text_120,
      this._text_121,
      this._text_122,
      this._el_123,
      this._text_124,
      this._el_125,
      this._text_126,
      this._text_127,
      this._el_128,
      this._text_129,
      this._el_130,
      this._text_131,
      this._el_132,
      this._text_133,
      this._text_134,
      this._text_135,
      this._text_136,
      this._text_137,
      this._text_138,
      this._text_139,
      this._text_140,
      this._el_141,
      this._text_142,
      this._el_143,
      this._text_144,
      this._text_145,
      this._el_146,
      this._text_147,
      this._text_148,
      this._text_149,
      this._text_150,
      this._text_151
    ]
    ),[
      disposable_0,
      disposable_1,
      disposable_2,
      disposable_3,
      disposable_4,
      disposable_5,
      disposable_6,
      disposable_7,
      disposable_8
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import17.GridAction) && (17 === requestNodeIndex))) { return this._GridAction_17_3; }
    if (((token === import18.GlobalAction) && (17 === requestNodeIndex))) { return this._GlobalAction_17_4; }
    if (((token === import19.UtililtyFunctions) && (17 === requestNodeIndex))) { return this._UtililtyFunctions_17_5; }
    if (((token === import16.GridComponent) && (17 === requestNodeIndex))) { return this._GridComponent_17_6.context; }
    if (((token === import21.CalendarComponent) && ((49 <= requestNodeIndex) && (requestNodeIndex <= 50)))) { return this._CalendarComponent_49_3.context; }
    if (((token === import37.DefaultValueAccessor) && (61 === requestNodeIndex))) { return this._DefaultValueAccessor_61_3.context; }
    if (((token === import34.RadioControlValueAccessor) && (61 === requestNodeIndex))) { return this._RadioControlValueAccessor_61_4.context; }
    if (((token === import38.NG_VALUE_ACCESSOR) && (61 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_61_5; }
    if (((token === import39.NgModel) && (61 === requestNodeIndex))) { return this._NgModel_61_6.context; }
    if (((token === import40.NgControl) && (61 === requestNodeIndex))) { return this._NgControl_61_7; }
    if (((token === import41.NgControlStatus) && (61 === requestNodeIndex))) { return this._NgControlStatus_61_8.context; }
    if (((token === import37.DefaultValueAccessor) && (80 === requestNodeIndex))) { return this._DefaultValueAccessor_80_3.context; }
    if (((token === import34.RadioControlValueAccessor) && (80 === requestNodeIndex))) { return this._RadioControlValueAccessor_80_4.context; }
    if (((token === import38.NG_VALUE_ACCESSOR) && (80 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_80_5; }
    if (((token === import39.NgModel) && (80 === requestNodeIndex))) { return this._NgModel_80_6.context; }
    if (((token === import40.NgControl) && (80 === requestNodeIndex))) { return this._NgControl_80_7; }
    if (((token === import41.NgControlStatus) && (80 === requestNodeIndex))) { return this._NgControlStatus_80_8.context; }
    if (((token === import42.CheckboxControlValueAccessor) && (102 === requestNodeIndex))) { return this._CheckboxControlValueAccessor_102_3.context; }
    if (((token === import38.NG_VALUE_ACCESSOR) && (102 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_102_4; }
    if (((token === import43.FormControlName) && (102 === requestNodeIndex))) { return this._FormControlName_102_5.context; }
    if (((token === import40.NgControl) && (102 === requestNodeIndex))) { return this._NgControl_102_6; }
    if (((token === import41.NgControlStatus) && (102 === requestNodeIndex))) { return this._NgControlStatus_102_7.context; }
    if (((token === import42.CheckboxControlValueAccessor) && (116 === requestNodeIndex))) { return this._CheckboxControlValueAccessor_116_3.context; }
    if (((token === import38.NG_VALUE_ACCESSOR) && (116 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_116_4; }
    if (((token === import43.FormControlName) && (116 === requestNodeIndex))) { return this._FormControlName_116_5.context; }
    if (((token === import40.NgControl) && (116 === requestNodeIndex))) { return this._NgControl_116_6; }
    if (((token === import41.NgControlStatus) && (116 === requestNodeIndex))) { return this._NgControlStatus_116_7.context; }
    if (((token === import42.CheckboxControlValueAccessor) && (130 === requestNodeIndex))) { return this._CheckboxControlValueAccessor_130_3.context; }
    if (((token === import38.NG_VALUE_ACCESSOR) && (130 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_130_4; }
    if (((token === import43.FormControlName) && (130 === requestNodeIndex))) { return this._FormControlName_130_5.context; }
    if (((token === import40.NgControl) && (130 === requestNodeIndex))) { return this._NgControl_130_6; }
    if (((token === import41.NgControlStatus) && (130 === requestNodeIndex))) { return this._NgControlStatus_130_7.context; }
    if (((token === import44.NgClass) && ((123 <= requestNodeIndex) && (requestNodeIndex <= 135)))) { return this._NgClass_123_3.context; }
    if (((token === import14.ModalComponent) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 149)))) { return this._ModalComponent_2_3.context; }
    if (((token === import45.FormGroupDirective) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 150)))) { return this._FormGroupDirective_0_3.context; }
    if (((token === import46.ControlContainer) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 150)))) { return this._ControlContainer_0_4; }
    if (((token === import41.NgControlStatusGroup) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 150)))) { return this._NgControlStatusGroup_0_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.context.scheduleForm;
    this._FormGroupDirective_0_3.check_form(currVal_0_0_0,throwOnChange,false);
    this._FormGroupDirective_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._NgControlStatusGroup_0_5.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_2_0_0:any = 'Trend Data Collection History';
    this._ModalComponent_2_3.check_title(currVal_2_0_0,throwOnChange,false);
    const currVal_2_0_1:any = 'history-modal';
    this._ModalComponent_2_3.check_modalId(currVal_2_0_1,throwOnChange,false);
    const currVal_2_0_2:any = 'medium';
    this._ModalComponent_2_3.check_modalSize(currVal_2_0_2,throwOnChange,false);
    this._ModalComponent_2_3.ngDoCheck(this,this._el_2,throwOnChange);
    const currVal_17_0_0:any = this.context.etlHistoryGrid.rows;
    this._GridComponent_17_6.check_rows(currVal_17_0_0,throwOnChange,false);
    const currVal_17_0_1:any = this.context.etlHistoryGridType;
    this._GridComponent_17_6.check_gridType(currVal_17_0_1,throwOnChange,false);
    const currVal_17_0_2:any = this.context.paginationOptions;
    this._GridComponent_17_6.check_paginationOptions(currVal_17_0_2,throwOnChange,false);
    this._GridComponent_17_6.ngDoCheck(this,this._el_17,throwOnChange);
    const currVal_49_0_0:any = this.context.scheduleForm.controls['targetDate'];
    this._CalendarComponent_49_3.check_formkey(currVal_49_0_0,throwOnChange,false);
    const currVal_49_0_1:any = this.context.targetDateCalendar;
    this._CalendarComponent_49_3.check_model(currVal_49_0_1,throwOnChange,false);
    const currVal_49_0_2:any = this.context.minDateCalendar;
    this._CalendarComponent_49_3.check_minDate(currVal_49_0_2,throwOnChange,false);
    const currVal_49_0_3:any = this.context.targetDateCalendar;
    this._CalendarComponent_49_3.check_maxDate(currVal_49_0_3,throwOnChange,false);
    this._CalendarComponent_49_3.ngDoCheck(this,this._el_49,throwOnChange);
    this._DefaultValueAccessor_61_3.ngDoCheck(this,this._el_61,throwOnChange);
    const currVal_61_1_0:any = 'targetDateCollection';
    this._RadioControlValueAccessor_61_4.check_name(currVal_61_1_0,throwOnChange,false);
    const currVal_61_1_1:any = false;
    this._RadioControlValueAccessor_61_4.check_value(currVal_61_1_1,throwOnChange,false);
    this._RadioControlValueAccessor_61_4.ngDoCheck(this,this._el_61,throwOnChange);
    const currVal_61_2_0:any = 'targetDateCollection';
    this._NgModel_61_6.check_name(currVal_61_2_0,throwOnChange,false);
    const currVal_61_2_1:any = this.context.executeDate;
    this._NgModel_61_6.check_model(currVal_61_2_1,throwOnChange,false);
    const currVal_61_2_2:any = this._map_192(true);
    this._NgModel_61_6.check_options(currVal_61_2_2,throwOnChange,false);
    this._NgModel_61_6.ngDoCheck(this,this._el_61,throwOnChange);
    this._NgControlStatus_61_8.ngDoCheck(this,this._el_61,throwOnChange);
    this._DefaultValueAccessor_80_3.ngDoCheck(this,this._el_80,throwOnChange);
    const currVal_80_1_0:any = 'targetDateCollection';
    this._RadioControlValueAccessor_80_4.check_name(currVal_80_1_0,throwOnChange,false);
    const currVal_80_1_1:any = true;
    this._RadioControlValueAccessor_80_4.check_value(currVal_80_1_1,throwOnChange,false);
    this._RadioControlValueAccessor_80_4.ngDoCheck(this,this._el_80,throwOnChange);
    const currVal_80_2_0:any = 'targetDateCollection';
    this._NgModel_80_6.check_name(currVal_80_2_0,throwOnChange,false);
    const currVal_80_2_1:any = this.context.executeDate;
    this._NgModel_80_6.check_model(currVal_80_2_1,throwOnChange,false);
    const currVal_80_2_2:any = this._map_193(true);
    this._NgModel_80_6.check_options(currVal_80_2_2,throwOnChange,false);
    this._NgModel_80_6.ngDoCheck(this,this._el_80,throwOnChange);
    this._NgControlStatus_80_8.ngDoCheck(this,this._el_80,throwOnChange);
    this._CheckboxControlValueAccessor_102_3.ngDoCheck(this,this._el_102,throwOnChange);
    const currVal_102_1_0:any = 'tccTrend';
    this._FormControlName_102_5.check_name(currVal_102_1_0,throwOnChange,false);
    this._FormControlName_102_5.ngDoCheck(this,this._el_102,throwOnChange);
    this._NgControlStatus_102_7.ngDoCheck(this,this._el_102,throwOnChange);
    this._CheckboxControlValueAccessor_116_3.ngDoCheck(this,this._el_116,throwOnChange);
    const currVal_116_1_0:any = 'tceTrend';
    this._FormControlName_116_5.check_name(currVal_116_1_0,throwOnChange,false);
    this._FormControlName_116_5.ngDoCheck(this,this._el_116,throwOnChange);
    this._NgControlStatus_116_7.ngDoCheck(this,this._el_116,throwOnChange);
    const currVal_123_0_0:any = 'clearfix checkbox-wrap';
    this._NgClass_123_3.check_klass(currVal_123_0_0,throwOnChange,false);
    const currVal_123_0_1:any = this._map_194(!this.context.isDefectOn);
    this._NgClass_123_3.check_ngClass(currVal_123_0_1,throwOnChange,false);
    this._NgClass_123_3.ngDoCheck(this,this._el_123,throwOnChange);
    this._CheckboxControlValueAccessor_130_3.ngDoCheck(this,this._el_130,throwOnChange);
    const currVal_130_1_0:any = 'defectTrend';
    this._FormControlName_130_5.check_name(currVal_130_1_0,throwOnChange,false);
    this._FormControlName_130_5.ngDoCheck(this,this._el_130,throwOnChange);
    this._NgControlStatus_130_7.ngDoCheck(this,this._el_130,throwOnChange);
    this._NgControlStatusGroup_0_5.checkHost(this,this,this._el_0,throwOnChange);
    this._NgControlStatus_61_8.checkHost(this,this,this._el_61,throwOnChange);
    this._NgControlStatus_80_8.checkHost(this,this,this._el_80,throwOnChange);
    this._NgControlStatus_102_7.checkHost(this,this,this._el_102,throwOnChange);
    this._NgControlStatus_116_7.checkHost(this,this,this._el_116,throwOnChange);
    this._NgControlStatus_130_7.checkHost(this,this,this._el_130,throwOnChange);
    const currVal_195:boolean = !this.context.scheduleForm.valid;
    if (import3.checkBinding(throwOnChange,this._expr_195,currVal_195)) {
      this.renderer.setElementProperty(this._el_146,'disabled',currVal_195);
      this._expr_195 = currVal_195;
    }
    this.compView_2.internalDetectChanges(throwOnChange);
    this.compView_17.internalDetectChanges(throwOnChange);
    this.compView_49.internalDetectChanges(throwOnChange);
    if (!throwOnChange) {
      if ((this.numberOfChecks === 0)) { this._GridComponent_17_6.context.ngAfterViewInit(); }
      if ((this.numberOfChecks === 0)) { this._CalendarComponent_49_3.context.ngAfterViewInit(); }
      if ((this.numberOfChecks === 0)) { this._ModalComponent_2_3.context.ngAfterViewInit(); }
    }
  }
  destroyInternal():void {
    this.compView_2.destroy();
    this.compView_17.destroy();
    this.compView_49.destroy();
    this._GridComponent_17_6.ngOnDestroy();
    this._CalendarComponent_49_3.ngOnDestroy();
    this._RadioControlValueAccessor_61_4.ngOnDestroy();
    this._NgModel_61_6.ngOnDestroy();
    this._RadioControlValueAccessor_80_4.ngOnDestroy();
    this._NgModel_80_6.ngOnDestroy();
    this._FormControlName_102_5.ngOnDestroy();
    this._FormControlName_116_5.ngOnDestroy();
    this._FormControlName_130_5.ngOnDestroy();
    this._ModalComponent_2_3.ngOnDestroy();
    this._FormGroupDirective_0_3.ngOnDestroy();
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 2) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 2) && (ngContentIndex == 1))) { cb(this._el_4,ctx); }
    if (((nodeIndex == 2) && (ngContentIndex == 2))) { cb(this._el_141,ctx); }
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._FormGroupDirective_0_3.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngSubmit')) {
      const pd_sub_0:any = ((<any>this.context.onScheduleFormConfirmation()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_11(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.getRefreshHistory()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_17(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onGridPrevClick')) {
      const pd_sub_0:any = ((<any>this.context.updateIndex($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'onGridNextClick')) {
      const pd_sub_1:any = ((<any>this.context.updateIndex($event)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'onGridPaginateByIndex')) {
      const pd_sub_2:any = ((<any>this.context.updateIndex($event)) !== false);
      result = (pd_sub_2 && result);
    }
    if ((eventName == 'onGridPageSizeChange')) {
      const pd_sub_3:any = ((<any>this.context.updatePageSize($event)) !== false);
      result = (pd_sub_3 && result);
    }
    return result;
  }
  handleEvent_61(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_61_3.handleEvent(eventName,$event) && result);
    result = (this._RadioControlValueAccessor_61_4.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>(this.context.executeDate = $event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_80(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_80_3.handleEvent(eventName,$event) && result);
    result = (this._RadioControlValueAccessor_80_4.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>(this.context.executeDate = $event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_102(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._CheckboxControlValueAccessor_102_3.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_116(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._CheckboxControlValueAccessor_116_3.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_130(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._CheckboxControlValueAccessor_130_3.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_143(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.resetScheduleForm()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}