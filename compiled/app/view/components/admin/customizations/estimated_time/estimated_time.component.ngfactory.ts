/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../../../../app/view/components/admin/customizations/estimated_time/estimated_time.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '../../../../../../../app/actions/admin.action';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '@angular/http/src/http';
import * as import10 from '../../../../../../../app/services/pouch.db.service';
import * as import11 from '../../../../../../../app/view/components/common/modal/modal.component';
import * as import12 from '../../../common/modal/modal.component.ngfactory';
import * as import13 from '../../../../../../../app/view/components/common/estimated_time/estimated_time.component';
import * as import14 from '../../../common/estimated_time/estimated_time.component.ngfactory';
import * as import15 from '@angular/core/src/change_detection/change_detection_util';
import * as import16 from '@angular/core/src/linker/element_ref';
export class Wrapper_EstimatedTimeModalComponent {
  /*private*/ _eventHandler:Function;
  context:import0.EstimatedTimeModalComponent;
  /*private*/ _changed:boolean;
  subscription0:any;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import0.EstimatedTimeModalComponent(p0);
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    this.context.ngOnDestroy();
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.confirmationDialogueData.subscribe(_eventHandler.bind(view,'confirmationDialogueData'))); }
  }
}
var renderType_EstimatedTimeModalComponent_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_EstimatedTimeModalComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.EstimatedTimeModalComponent>;
  _AdminAction_0_3:import5.AdminAction;
  _EstimatedTimeModalComponent_0_4:Wrapper_EstimatedTimeModalComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_EstimatedTimeModalComponent_Host0,renderType_EstimatedTimeModalComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'estimated-time-modal',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_EstimatedTimeModalComponent0(this.viewUtils,this,0,this._el_0);
    this._AdminAction_0_3 = new import5.AdminAction(this.injectorGet(import9.Http,this.parentIndex),this.injectorGet(import10.PouchDBPrefsServices,this.parentIndex));
    this._EstimatedTimeModalComponent_0_4 = new Wrapper_EstimatedTimeModalComponent(this._AdminAction_0_3);
    this.compView_0.create(this._EstimatedTimeModalComponent_0_4.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._EstimatedTimeModalComponent_0_4.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import5.AdminAction) && (0 === requestNodeIndex))) { return this._AdminAction_0_3; }
    if (((token === import0.EstimatedTimeModalComponent) && (0 === requestNodeIndex))) { return this._EstimatedTimeModalComponent_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._EstimatedTimeModalComponent_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._EstimatedTimeModalComponent_0_4.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._EstimatedTimeModalComponent_0_4.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const EstimatedTimeModalComponentNgFactory:import8.ComponentFactory<import0.EstimatedTimeModalComponent> = new import8.ComponentFactory<import0.EstimatedTimeModalComponent>('estimated-time-modal',View_EstimatedTimeModalComponent_Host0,import0.EstimatedTimeModalComponent);
const styles_EstimatedTimeModalComponent:any[] = ([] as any[]);
var renderType_EstimatedTimeModalComponent:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,styles_EstimatedTimeModalComponent,{});
export class View_EstimatedTimeModalComponent0 extends import1.AppView<import0.EstimatedTimeModalComponent> {
  _el_0:any;
  compView_0:import1.AppView<import11.ModalComponent>;
  _ModalComponent_0_3:import12.Wrapper_ModalComponent;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _text_6:any;
  _el_7:any;
  _text_8:any;
  _el_9:any;
  _el_10:any;
  _text_11:any;
  _text_12:any;
  _text_13:any;
  _text_14:any;
  _el_15:any;
  compView_15:import1.AppView<import13.EstimatedTimeComponent>;
  _EstimatedTimeComponent_15_3:import14.Wrapper_EstimatedTimeComponent;
  _text_16:any;
  _text_17:any;
  _text_18:any;
  _el_19:any;
  _text_20:any;
  _text_21:any;
  _text_22:any;
  _el_23:any;
  _text_24:any;
  _el_25:any;
  _text_26:any;
  _text_27:any;
  _el_28:any;
  _text_29:any;
  _text_30:any;
  _text_31:any;
  /*private*/ _expr_36:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_EstimatedTimeModalComponent0,renderType_EstimatedTimeModalComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
    this._expr_36 = import15.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'zui-modal',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_0 = new import12.View_ModalComponent0(this.viewUtils,this,0,this._el_0);
    this._ModalComponent_0_3 = new import12.Wrapper_ModalComponent(new import16.ElementRef(this._el_0),this.compView_0.ref);
    this._text_1 = this.renderer.createText((null as any),'\n	',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,(null as any),'zui-modal-body',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'\n	    ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_2,'p',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_5 = this.renderer.createText(this._el_4,' Provide default value for estimated time ',(null as any));
    this._text_6 = this.renderer.createText(this._el_2,'\n	    ',(null as any));
    this._el_7 = import3.createRenderElement(this.renderer,this._el_2,'div',new import3.InlineArray2(2,'title','valid values are from 00.00.01 to 99.23.59(DD:HH:MM)'),(null as any));
    this._text_8 = this.renderer.createText(this._el_7,'\n				',(null as any));
    this._el_9 = import3.createRenderElement(this.renderer,this._el_7,'label',new import3.InlineArray2(2,'for','estTime'),(null as any));
    this._el_10 = import3.createRenderElement(this.renderer,this._el_9,'b',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_11 = this.renderer.createText(this._el_10,'Default Estimated Time',(null as any));
    this._text_12 = this.renderer.createText(this._el_9,' ',(null as any));
    this._text_13 = this.renderer.createText(this._el_7,'\n				',(null as any));
    this._text_14 = this.renderer.createText(this._el_7,'\n				',(null as any));
    this._el_15 = import3.createRenderElement(this.renderer,this._el_7,'zui-estimated-time',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_15 = new import14.View_EstimatedTimeComponent0(this.viewUtils,this,15,this._el_15);
    this._EstimatedTimeComponent_15_3 = new import14.Wrapper_EstimatedTimeComponent();
    this._text_16 = this.renderer.createText((null as any),'\n		        ',(null as any));
    this.compView_15.create(this._EstimatedTimeComponent_15_3.context);
    this._text_17 = this.renderer.createText(this._el_7,'\n			',(null as any));
    this._text_18 = this.renderer.createText(this._el_2,'\n			',(null as any));
    this._el_19 = import3.createRenderElement(this.renderer,this._el_2,'p',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_20 = this.renderer.createText(this._el_19,'For this change to be effective, users must login again',(null as any));
    this._text_21 = this.renderer.createText(this._el_2,'\n	',(null as any));
    this._text_22 = this.renderer.createText((null as any),'\n	',(null as any));
    this._el_23 = import3.createRenderElement(this.renderer,(null as any),'zui-modal-footer',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_24 = this.renderer.createText(this._el_23,'\n	    ',(null as any));
    this._el_25 = import3.createRenderElement(this.renderer,this._el_23,'button',new import3.InlineArray4(4,'class','zui-btn zui-btn-sec','type','button'),(null as any));
    this._text_26 = this.renderer.createText(this._el_25,'Cancel',(null as any));
    this._text_27 = this.renderer.createText(this._el_23,'\n	    ',(null as any));
    this._el_28 = import3.createRenderElement(this.renderer,this._el_23,'button',new import3.InlineArray4(4,'class','zui-btn zui-btn-primary','type','button'),(null as any));
    this._text_29 = this.renderer.createText(this._el_28,'Save',(null as any));
    this._text_30 = this.renderer.createText(this._el_23,'\n	',(null as any));
    this._text_31 = this.renderer.createText((null as any),'\n',(null as any));
    this.compView_0.create(this._ModalComponent_0_3.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'onBeforeClose',(null as any)),this.eventHandler(this.handleEvent_0));
    this._ModalComponent_0_3.subscribe(this,this.eventHandler(this.handleEvent_0),false,true,false,false);
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_15,new import3.InlineArray4(4,'onDurationUpdate',(null as any),'onValidate',(null as any)),this.eventHandler(this.handleEvent_15));
    this._EstimatedTimeComponent_15_3.subscribe(this,this.eventHandler(this.handleEvent_15),true,true);
    var disposable_2:Function = import3.subscribeToRenderElement(this,this._el_25,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_25));
    var disposable_3:Function = import3.subscribeToRenderElement(this,this._el_28,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_28));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._el_9,
      this._el_10,
      this._text_11,
      this._text_12,
      this._text_13,
      this._text_14,
      this._el_15,
      this._text_16,
      this._text_17,
      this._text_18,
      this._el_19,
      this._text_20,
      this._text_21,
      this._text_22,
      this._el_23,
      this._text_24,
      this._el_25,
      this._text_26,
      this._text_27,
      this._el_28,
      this._text_29,
      this._text_30,
      this._text_31
    ]
    ),[
      disposable_0,
      disposable_1,
      disposable_2,
      disposable_3
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import13.EstimatedTimeComponent) && ((15 <= requestNodeIndex) && (requestNodeIndex <= 16)))) { return this._EstimatedTimeComponent_15_3.context; }
    if (((token === import11.ModalComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 31)))) { return this._ModalComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = 'Default Estimated Time Editor';
    this._ModalComponent_0_3.check_title(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = 'estimated-time-modal';
    this._ModalComponent_0_3.check_modalId(currVal_0_0_1,throwOnChange,false);
    const currVal_0_0_2:any = 'medium';
    this._ModalComponent_0_3.check_modalSize(currVal_0_0_2,throwOnChange,false);
    this._ModalComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_15_0_0:any = this.context.estTime;
    this._EstimatedTimeComponent_15_3.check_value(currVal_15_0_0,throwOnChange,false);
    const currVal_15_0_1:any = true;
    this._EstimatedTimeComponent_15_3.check_editMode(currVal_15_0_1,throwOnChange,false);
    this._EstimatedTimeComponent_15_3.ngDoCheck(this,this._el_15,throwOnChange);
    const currVal_36:boolean = !this.context.isFormDirty;
    if (import3.checkBinding(throwOnChange,this._expr_36,currVal_36)) {
      this.renderer.setElementProperty(this._el_28,'disabled',currVal_36);
      this._expr_36 = currVal_36;
    }
    this.compView_0.internalDetectChanges(throwOnChange);
    this.compView_15.internalDetectChanges(throwOnChange);
    if (!throwOnChange) {
      if ((this.numberOfChecks === 0)) { this._EstimatedTimeComponent_15_3.context.ngAfterViewInit(); }
      if ((this.numberOfChecks === 0)) { this._ModalComponent_0_3.context.ngAfterViewInit(); }
    }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this.compView_15.destroy();
    this._EstimatedTimeComponent_15_3.ngOnDestroy();
    this._ModalComponent_0_3.ngOnDestroy();
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 0) && (ngContentIndex == 1))) { cb(this._el_2,ctx); }
    if (((nodeIndex == 0) && (ngContentIndex == 2))) { cb(this._el_23,ctx); }
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onBeforeClose')) {
      const pd_sub_0:any = ((<any>this.context.cancelEstTimeConfirmation($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_15(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onDurationUpdate')) {
      const pd_sub_0:any = ((<any>this.context.onDurationUpdate($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'onValidate')) {
      const pd_sub_1:any = ((<any>this.context.onDurationUpdate($event)) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
  handleEvent_25(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.cancelEstTimeConfirmation($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_28(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.saveEstTimeConfirmation()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}