/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../../../../app/view/components/admin/customizations/miscellaneous/miscellaneous.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '../../../../../../../app/actions/admin.action';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '@angular/http/src/http';
import * as import10 from '../../../../../../../app/services/pouch.db.service';
import * as import11 from '../../../../../../../app/view/components/common/modal/modal.component';
import * as import12 from '../../../common/modal/modal.component.ngfactory';
import * as import13 from '../../../../../../node_modules/@angular/forms/src/directives/checkbox_value_accessor.ngfactory';
import * as import14 from '../../../../../../node_modules/@angular/forms/src/directives/ng_model.ngfactory';
import * as import15 from '../../../../../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import16 from '@angular/core/src/change_detection/change_detection_util';
import * as import17 from '@angular/core/src/linker/element_ref';
import * as import18 from '@angular/forms/src/directives/checkbox_value_accessor';
import * as import19 from '@angular/forms/src/directives/control_value_accessor';
import * as import20 from '@angular/forms/src/directives/ng_model';
import * as import21 from '@angular/forms/src/directives/ng_control';
import * as import22 from '@angular/forms/src/directives/ng_control_status';
export class Wrapper_MiscellaneousModalComponent {
  /*private*/ _eventHandler:Function;
  context:import0.MiscellaneousModalComponent;
  /*private*/ _changed:boolean;
  subscription0:any;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import0.MiscellaneousModalComponent(p0);
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    this.context.ngOnDestroy();
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.confirmationDialogueData.subscribe(_eventHandler.bind(view,'confirmationDialogueData'))); }
  }
}
var renderType_MiscellaneousModalComponent_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_MiscellaneousModalComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.MiscellaneousModalComponent>;
  _AdminAction_0_3:import5.AdminAction;
  _MiscellaneousModalComponent_0_4:Wrapper_MiscellaneousModalComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MiscellaneousModalComponent_Host0,renderType_MiscellaneousModalComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'miscellaneous-modal',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_MiscellaneousModalComponent0(this.viewUtils,this,0,this._el_0);
    this._AdminAction_0_3 = new import5.AdminAction(this.injectorGet(import9.Http,this.parentIndex),this.injectorGet(import10.PouchDBPrefsServices,this.parentIndex));
    this._MiscellaneousModalComponent_0_4 = new Wrapper_MiscellaneousModalComponent(this._AdminAction_0_3);
    this.compView_0.create(this._MiscellaneousModalComponent_0_4.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._MiscellaneousModalComponent_0_4.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import5.AdminAction) && (0 === requestNodeIndex))) { return this._AdminAction_0_3; }
    if (((token === import0.MiscellaneousModalComponent) && (0 === requestNodeIndex))) { return this._MiscellaneousModalComponent_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._MiscellaneousModalComponent_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._MiscellaneousModalComponent_0_4.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._MiscellaneousModalComponent_0_4.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const MiscellaneousModalComponentNgFactory:import8.ComponentFactory<import0.MiscellaneousModalComponent> = new import8.ComponentFactory<import0.MiscellaneousModalComponent>('miscellaneous-modal',View_MiscellaneousModalComponent_Host0,import0.MiscellaneousModalComponent);
const styles_MiscellaneousModalComponent:any[] = ([] as any[]);
var renderType_MiscellaneousModalComponent:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,styles_MiscellaneousModalComponent,{});
export class View_MiscellaneousModalComponent0 extends import1.AppView<import0.MiscellaneousModalComponent> {
  _el_0:any;
  compView_0:import1.AppView<import11.ModalComponent>;
  _ModalComponent_0_3:import12.Wrapper_ModalComponent;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _el_6:any;
  _text_7:any;
  _text_8:any;
  _el_9:any;
  _text_10:any;
  _el_11:any;
  _CheckboxControlValueAccessor_11_3:import13.Wrapper_CheckboxControlValueAccessor;
  _NG_VALUE_ACCESSOR_11_4:any[];
  _NgModel_11_5:import14.Wrapper_NgModel;
  _NgControl_11_6:any;
  _NgControlStatus_11_7:import15.Wrapper_NgControlStatus;
  _text_12:any;
  _el_13:any;
  _text_14:any;
  _text_15:any;
  _text_16:any;
  _text_17:any;
  _text_18:any;
  _el_19:any;
  _text_20:any;
  _el_21:any;
  _text_22:any;
  _text_23:any;
  _el_24:any;
  _text_25:any;
  _text_26:any;
  _text_27:any;
  /*private*/ _expr_35:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MiscellaneousModalComponent0,renderType_MiscellaneousModalComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
    this._expr_35 = import16.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'zui-modal',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_0 = new import12.View_ModalComponent0(this.viewUtils,this,0,this._el_0);
    this._ModalComponent_0_3 = new import12.Wrapper_ModalComponent(new import17.ElementRef(this._el_0),this.compView_0.ref);
    this._text_1 = this.renderer.createText((null as any),'\n	',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,(null as any),'zui-modal-body',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'\n	    ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_2,'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_5 = this.renderer.createText(this._el_4,'\n	    	',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_4,'p',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_7 = this.renderer.createText(this._el_6,'\n	    		Enable Secondary Authentication if you have temp users that are not in your primary authentication mechanism (LDAP, Crowd etc). They will then be able to log into Zephyr based on the authentication (username/password) set up for them in the User Setup.\n	    	',(null as any));
    this._text_8 = this.renderer.createText(this._el_4,'\n	    	',(null as any));
    this._el_9 = import3.createRenderElement(this.renderer,this._el_4,'div',new import3.InlineArray2(2,'class','zui-checkbox2'),(null as any));
    this._text_10 = this.renderer.createText(this._el_9,'\n	    		',(null as any));
    this._el_11 = import3.createRenderElement(this.renderer,this._el_9,'input',new import3.InlineArray4(4,'id','enable-secondry-authentication','type','checkbox'),(null as any));
    this._CheckboxControlValueAccessor_11_3 = new import13.Wrapper_CheckboxControlValueAccessor(this.renderer,new import17.ElementRef(this._el_11));
    this._NG_VALUE_ACCESSOR_11_4 = [this._CheckboxControlValueAccessor_11_3.context];
    this._NgModel_11_5 = new import14.Wrapper_NgModel((null as any),(null as any),(null as any),this._NG_VALUE_ACCESSOR_11_4);
    this._NgControl_11_6 = this._NgModel_11_5.context;
    this._NgControlStatus_11_7 = new import15.Wrapper_NgControlStatus(this._NgControl_11_6);
    this._text_12 = this.renderer.createText(this._el_9,'\n	    		',(null as any));
    this._el_13 = import3.createRenderElement(this.renderer,this._el_9,'label',new import3.InlineArray2(2,'for','enable-secondry-authentication'),(null as any));
    this._text_14 = this.renderer.createText(this._el_13,'Enable Secondary Authentication',(null as any));
    this._text_15 = this.renderer.createText(this._el_9,'\n	    	',(null as any));
    this._text_16 = this.renderer.createText(this._el_4,'\n	    ',(null as any));
    this._text_17 = this.renderer.createText(this._el_2,'\n	',(null as any));
    this._text_18 = this.renderer.createText((null as any),'\n	',(null as any));
    this._el_19 = import3.createRenderElement(this.renderer,(null as any),'zui-modal-footer',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_20 = this.renderer.createText(this._el_19,'\n	    ',(null as any));
    this._el_21 = import3.createRenderElement(this.renderer,this._el_19,'button',new import3.InlineArray4(4,'class','zui-btn zui-btn-sec','type','button'),(null as any));
    this._text_22 = this.renderer.createText(this._el_21,'Cancel',(null as any));
    this._text_23 = this.renderer.createText(this._el_19,'\n	    ',(null as any));
    this._el_24 = import3.createRenderElement(this.renderer,this._el_19,'button',new import3.InlineArray4(4,'class','zui-btn zui-btn-primary','type','button'),(null as any));
    this._text_25 = this.renderer.createText(this._el_24,'Save',(null as any));
    this._text_26 = this.renderer.createText(this._el_19,'\n	',(null as any));
    this._text_27 = this.renderer.createText((null as any),'\n',(null as any));
    this.compView_0.create(this._ModalComponent_0_3.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'onBeforeClose',(null as any)),this.eventHandler(this.handleEvent_0));
    this._ModalComponent_0_3.subscribe(this,this.eventHandler(this.handleEvent_0),false,true,false,false);
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_11,new import3.InlineArray8(6,'ngModelChange',(null as any),'change',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_11));
    this._NgModel_11_5.subscribe(this,this.eventHandler(this.handleEvent_11),true);
    var disposable_2:Function = import3.subscribeToRenderElement(this,this._el_21,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_21));
    var disposable_3:Function = import3.subscribeToRenderElement(this,this._el_24,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_24));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._text_8,
      this._el_9,
      this._text_10,
      this._el_11,
      this._text_12,
      this._el_13,
      this._text_14,
      this._text_15,
      this._text_16,
      this._text_17,
      this._text_18,
      this._el_19,
      this._text_20,
      this._el_21,
      this._text_22,
      this._text_23,
      this._el_24,
      this._text_25,
      this._text_26,
      this._text_27
    ]
    ),[
      disposable_0,
      disposable_1,
      disposable_2,
      disposable_3
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import18.CheckboxControlValueAccessor) && (11 === requestNodeIndex))) { return this._CheckboxControlValueAccessor_11_3.context; }
    if (((token === import19.NG_VALUE_ACCESSOR) && (11 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_11_4; }
    if (((token === import20.NgModel) && (11 === requestNodeIndex))) { return this._NgModel_11_5.context; }
    if (((token === import21.NgControl) && (11 === requestNodeIndex))) { return this._NgControl_11_6; }
    if (((token === import22.NgControlStatus) && (11 === requestNodeIndex))) { return this._NgControlStatus_11_7.context; }
    if (((token === import11.ModalComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 27)))) { return this._ModalComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = 'Miscellaneous';
    this._ModalComponent_0_3.check_title(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = 'miscellaneous-modal';
    this._ModalComponent_0_3.check_modalId(currVal_0_0_1,throwOnChange,false);
    const currVal_0_0_2:any = 'medium';
    this._ModalComponent_0_3.check_modalSize(currVal_0_0_2,throwOnChange,false);
    this._ModalComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._CheckboxControlValueAccessor_11_3.ngDoCheck(this,this._el_11,throwOnChange);
    const currVal_11_1_0:any = this.context.isSaml;
    this._NgModel_11_5.check_isDisabled(currVal_11_1_0,throwOnChange,false);
    const currVal_11_1_1:any = this.context.isEnableSecondryAuth;
    this._NgModel_11_5.check_model(currVal_11_1_1,throwOnChange,false);
    this._NgModel_11_5.ngDoCheck(this,this._el_11,throwOnChange);
    this._NgControlStatus_11_7.ngDoCheck(this,this._el_11,throwOnChange);
    this._NgControlStatus_11_7.checkHost(this,this,this._el_11,throwOnChange);
    const currVal_35:any = this.context.isFormValid();
    if (import3.checkBinding(throwOnChange,this._expr_35,currVal_35)) {
      this.renderer.setElementProperty(this._el_24,'disabled',currVal_35);
      this._expr_35 = currVal_35;
    }
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._ModalComponent_0_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._NgModel_11_5.ngOnDestroy();
    this._ModalComponent_0_3.ngOnDestroy();
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 0) && (ngContentIndex == 1))) { cb(this._el_2,ctx); }
    if (((nodeIndex == 0) && (ngContentIndex == 2))) { cb(this._el_19,ctx); }
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onBeforeClose')) {
      const pd_sub_0:any = ((<any>this.context.cancelMiscSettingsConfirmation($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_11(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._CheckboxControlValueAccessor_11_3.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>(this.context.isEnableSecondryAuth = $event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_21(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.cancelMiscSettingsConfirmation($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_24(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.saveMiscSettingsConfirmation()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}